//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SouthJLAInformationSystemC {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatabaseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatabaseDataSet : global::System.Data.DataSet {
        
        private ancillaryResultDataTable tableancillaryResult;
        
        private assessmentDataTable tableassessment;
        
        private Blood_ChemistrtyDataTable tableBlood_Chemistrty;
        
        private Clinic_MicroscopyDataTable tableClinic_Microscopy;
        
        private HematologyDataTable tableHematology;
        
        private historyDataTable tablehistory;
        
        private ofwDataTable tableofw;
        
        private SerologyDataTable tableSerology;
        
        private Stool_ExaminationDataTable tableStool_Examination;
        
        private summaryDataTable tablesummary;
        
        private userAccDataTable tableuserAcc;
        
        private global::System.Data.DataRelation relationancillaryResult_ofw;
        
        private global::System.Data.DataRelation relationassessment_ofw;
        
        private global::System.Data.DataRelation relationBlood_Chemistrty_ofw;
        
        private global::System.Data.DataRelation relationClinic_Microscopy_ofw;
        
        private global::System.Data.DataRelation relationHematology_ofw;
        
        private global::System.Data.DataRelation relationhistory_ofw;
        
        private global::System.Data.DataRelation relationSerology_ofw;
        
        private global::System.Data.DataRelation relationStool_Examination_ofw;
        
        private global::System.Data.DataRelation relationsummary_ofw;
        
        private global::System.Data.DataRelation relationuserAcc_ofw;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DatabaseDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DatabaseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ancillaryResult"] != null)) {
                    base.Tables.Add(new ancillaryResultDataTable(ds.Tables["ancillaryResult"]));
                }
                if ((ds.Tables["assessment"] != null)) {
                    base.Tables.Add(new assessmentDataTable(ds.Tables["assessment"]));
                }
                if ((ds.Tables["Blood_Chemistrty"] != null)) {
                    base.Tables.Add(new Blood_ChemistrtyDataTable(ds.Tables["Blood_Chemistrty"]));
                }
                if ((ds.Tables["Clinic_Microscopy"] != null)) {
                    base.Tables.Add(new Clinic_MicroscopyDataTable(ds.Tables["Clinic_Microscopy"]));
                }
                if ((ds.Tables["Hematology"] != null)) {
                    base.Tables.Add(new HematologyDataTable(ds.Tables["Hematology"]));
                }
                if ((ds.Tables["history"] != null)) {
                    base.Tables.Add(new historyDataTable(ds.Tables["history"]));
                }
                if ((ds.Tables["ofw"] != null)) {
                    base.Tables.Add(new ofwDataTable(ds.Tables["ofw"]));
                }
                if ((ds.Tables["Serology"] != null)) {
                    base.Tables.Add(new SerologyDataTable(ds.Tables["Serology"]));
                }
                if ((ds.Tables["Stool_Examination"] != null)) {
                    base.Tables.Add(new Stool_ExaminationDataTable(ds.Tables["Stool_Examination"]));
                }
                if ((ds.Tables["summary"] != null)) {
                    base.Tables.Add(new summaryDataTable(ds.Tables["summary"]));
                }
                if ((ds.Tables["userAcc"] != null)) {
                    base.Tables.Add(new userAccDataTable(ds.Tables["userAcc"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ancillaryResultDataTable ancillaryResult {
            get {
                return this.tableancillaryResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public assessmentDataTable assessment {
            get {
                return this.tableassessment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Blood_ChemistrtyDataTable Blood_Chemistrty {
            get {
                return this.tableBlood_Chemistrty;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clinic_MicroscopyDataTable Clinic_Microscopy {
            get {
                return this.tableClinic_Microscopy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HematologyDataTable Hematology {
            get {
                return this.tableHematology;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public historyDataTable history {
            get {
                return this.tablehistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ofwDataTable ofw {
            get {
                return this.tableofw;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SerologyDataTable Serology {
            get {
                return this.tableSerology;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Stool_ExaminationDataTable Stool_Examination {
            get {
                return this.tableStool_Examination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public summaryDataTable summary {
            get {
                return this.tablesummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public userAccDataTable userAcc {
            get {
                return this.tableuserAcc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DatabaseDataSet cln = ((DatabaseDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ancillaryResult"] != null)) {
                    base.Tables.Add(new ancillaryResultDataTable(ds.Tables["ancillaryResult"]));
                }
                if ((ds.Tables["assessment"] != null)) {
                    base.Tables.Add(new assessmentDataTable(ds.Tables["assessment"]));
                }
                if ((ds.Tables["Blood_Chemistrty"] != null)) {
                    base.Tables.Add(new Blood_ChemistrtyDataTable(ds.Tables["Blood_Chemistrty"]));
                }
                if ((ds.Tables["Clinic_Microscopy"] != null)) {
                    base.Tables.Add(new Clinic_MicroscopyDataTable(ds.Tables["Clinic_Microscopy"]));
                }
                if ((ds.Tables["Hematology"] != null)) {
                    base.Tables.Add(new HematologyDataTable(ds.Tables["Hematology"]));
                }
                if ((ds.Tables["history"] != null)) {
                    base.Tables.Add(new historyDataTable(ds.Tables["history"]));
                }
                if ((ds.Tables["ofw"] != null)) {
                    base.Tables.Add(new ofwDataTable(ds.Tables["ofw"]));
                }
                if ((ds.Tables["Serology"] != null)) {
                    base.Tables.Add(new SerologyDataTable(ds.Tables["Serology"]));
                }
                if ((ds.Tables["Stool_Examination"] != null)) {
                    base.Tables.Add(new Stool_ExaminationDataTable(ds.Tables["Stool_Examination"]));
                }
                if ((ds.Tables["summary"] != null)) {
                    base.Tables.Add(new summaryDataTable(ds.Tables["summary"]));
                }
                if ((ds.Tables["userAcc"] != null)) {
                    base.Tables.Add(new userAccDataTable(ds.Tables["userAcc"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableancillaryResult = ((ancillaryResultDataTable)(base.Tables["ancillaryResult"]));
            if ((initTable == true)) {
                if ((this.tableancillaryResult != null)) {
                    this.tableancillaryResult.InitVars();
                }
            }
            this.tableassessment = ((assessmentDataTable)(base.Tables["assessment"]));
            if ((initTable == true)) {
                if ((this.tableassessment != null)) {
                    this.tableassessment.InitVars();
                }
            }
            this.tableBlood_Chemistrty = ((Blood_ChemistrtyDataTable)(base.Tables["Blood_Chemistrty"]));
            if ((initTable == true)) {
                if ((this.tableBlood_Chemistrty != null)) {
                    this.tableBlood_Chemistrty.InitVars();
                }
            }
            this.tableClinic_Microscopy = ((Clinic_MicroscopyDataTable)(base.Tables["Clinic_Microscopy"]));
            if ((initTable == true)) {
                if ((this.tableClinic_Microscopy != null)) {
                    this.tableClinic_Microscopy.InitVars();
                }
            }
            this.tableHematology = ((HematologyDataTable)(base.Tables["Hematology"]));
            if ((initTable == true)) {
                if ((this.tableHematology != null)) {
                    this.tableHematology.InitVars();
                }
            }
            this.tablehistory = ((historyDataTable)(base.Tables["history"]));
            if ((initTable == true)) {
                if ((this.tablehistory != null)) {
                    this.tablehistory.InitVars();
                }
            }
            this.tableofw = ((ofwDataTable)(base.Tables["ofw"]));
            if ((initTable == true)) {
                if ((this.tableofw != null)) {
                    this.tableofw.InitVars();
                }
            }
            this.tableSerology = ((SerologyDataTable)(base.Tables["Serology"]));
            if ((initTable == true)) {
                if ((this.tableSerology != null)) {
                    this.tableSerology.InitVars();
                }
            }
            this.tableStool_Examination = ((Stool_ExaminationDataTable)(base.Tables["Stool_Examination"]));
            if ((initTable == true)) {
                if ((this.tableStool_Examination != null)) {
                    this.tableStool_Examination.InitVars();
                }
            }
            this.tablesummary = ((summaryDataTable)(base.Tables["summary"]));
            if ((initTable == true)) {
                if ((this.tablesummary != null)) {
                    this.tablesummary.InitVars();
                }
            }
            this.tableuserAcc = ((userAccDataTable)(base.Tables["userAcc"]));
            if ((initTable == true)) {
                if ((this.tableuserAcc != null)) {
                    this.tableuserAcc.InitVars();
                }
            }
            this.relationancillaryResult_ofw = this.Relations["ancillaryResult_ofw"];
            this.relationassessment_ofw = this.Relations["assessment_ofw"];
            this.relationBlood_Chemistrty_ofw = this.Relations["Blood_Chemistrty_ofw"];
            this.relationClinic_Microscopy_ofw = this.Relations["Clinic_Microscopy_ofw"];
            this.relationHematology_ofw = this.Relations["Hematology_ofw"];
            this.relationhistory_ofw = this.Relations["history_ofw"];
            this.relationSerology_ofw = this.Relations["Serology_ofw"];
            this.relationStool_Examination_ofw = this.Relations["Stool_Examination_ofw"];
            this.relationsummary_ofw = this.Relations["summary_ofw"];
            this.relationuserAcc_ofw = this.Relations["userAcc_ofw"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DatabaseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatabaseDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableancillaryResult = new ancillaryResultDataTable();
            base.Tables.Add(this.tableancillaryResult);
            this.tableassessment = new assessmentDataTable();
            base.Tables.Add(this.tableassessment);
            this.tableBlood_Chemistrty = new Blood_ChemistrtyDataTable();
            base.Tables.Add(this.tableBlood_Chemistrty);
            this.tableClinic_Microscopy = new Clinic_MicroscopyDataTable();
            base.Tables.Add(this.tableClinic_Microscopy);
            this.tableHematology = new HematologyDataTable();
            base.Tables.Add(this.tableHematology);
            this.tablehistory = new historyDataTable();
            base.Tables.Add(this.tablehistory);
            this.tableofw = new ofwDataTable();
            base.Tables.Add(this.tableofw);
            this.tableSerology = new SerologyDataTable();
            base.Tables.Add(this.tableSerology);
            this.tableStool_Examination = new Stool_ExaminationDataTable();
            base.Tables.Add(this.tableStool_Examination);
            this.tablesummary = new summaryDataTable();
            base.Tables.Add(this.tablesummary);
            this.tableuserAcc = new userAccDataTable();
            base.Tables.Add(this.tableuserAcc);
            this.relationancillaryResult_ofw = new global::System.Data.DataRelation("ancillaryResult_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableancillaryResult.ofw_idColumn}, false);
            this.Relations.Add(this.relationancillaryResult_ofw);
            this.relationassessment_ofw = new global::System.Data.DataRelation("assessment_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableassessment.ofw_idColumn}, false);
            this.Relations.Add(this.relationassessment_ofw);
            this.relationBlood_Chemistrty_ofw = new global::System.Data.DataRelation("Blood_Chemistrty_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableBlood_Chemistrty.ofw_idColumn}, false);
            this.Relations.Add(this.relationBlood_Chemistrty_ofw);
            this.relationClinic_Microscopy_ofw = new global::System.Data.DataRelation("Clinic_Microscopy_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Microscopy.ofw_idColumn}, false);
            this.Relations.Add(this.relationClinic_Microscopy_ofw);
            this.relationHematology_ofw = new global::System.Data.DataRelation("Hematology_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableHematology.ofw_idColumn}, false);
            this.Relations.Add(this.relationHematology_ofw);
            this.relationhistory_ofw = new global::System.Data.DataRelation("history_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablehistory.ofw_idColumn}, false);
            this.Relations.Add(this.relationhistory_ofw);
            this.relationSerology_ofw = new global::System.Data.DataRelation("Serology_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableSerology.ofw_idColumn}, false);
            this.Relations.Add(this.relationSerology_ofw);
            this.relationStool_Examination_ofw = new global::System.Data.DataRelation("Stool_Examination_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableStool_Examination.ofw_idColumn}, false);
            this.Relations.Add(this.relationStool_Examination_ofw);
            this.relationsummary_ofw = new global::System.Data.DataRelation("summary_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesummary.ofw_idColumn}, false);
            this.Relations.Add(this.relationsummary_ofw);
            this.relationuserAcc_ofw = new global::System.Data.DataRelation("userAcc_ofw", new global::System.Data.DataColumn[] {
                        this.tableofw.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableuserAcc.ofw_idColumn}, false);
            this.Relations.Add(this.relationuserAcc_ofw);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeancillaryResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeassessment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBlood_Chemistrty() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeClinic_Microscopy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeHematology() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializehistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeofw() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSerology() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStool_Examination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializesummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeuserAcc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatabaseDataSet ds = new DatabaseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ancillaryResultRowChangeEventHandler(object sender, ancillaryResultRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void assessmentRowChangeEventHandler(object sender, assessmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Blood_ChemistrtyRowChangeEventHandler(object sender, Blood_ChemistrtyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Clinic_MicroscopyRowChangeEventHandler(object sender, Clinic_MicroscopyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void HematologyRowChangeEventHandler(object sender, HematologyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void historyRowChangeEventHandler(object sender, historyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ofwRowChangeEventHandler(object sender, ofwRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SerologyRowChangeEventHandler(object sender, SerologyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Stool_ExaminationRowChangeEventHandler(object sender, Stool_ExaminationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void summaryRowChangeEventHandler(object sender, summaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void userAccRowChangeEventHandler(object sender, userAccRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ancillaryResultDataTable : global::System.Data.TypedTableBase<ancillaryResultRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnxray;
            
            private global::System.Data.DataColumn columnecg;
            
            private global::System.Data.DataColumn columncbc;
            
            private global::System.Data.DataColumn columnurinalysis;
            
            private global::System.Data.DataColumn columnstool;
            
            private global::System.Data.DataColumn columnhepaB;
            
            private global::System.Data.DataColumn columnhiv;
            
            private global::System.Data.DataColumn columnrpr;
            
            private global::System.Data.DataColumn columnbloodType;
            
            private global::System.Data.DataColumn columnpsychological;
            
            private global::System.Data.DataColumn columnspecialNeeds;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultDataTable() {
                this.TableName = "ancillaryResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ancillaryResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ancillaryResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn xrayColumn {
                get {
                    return this.columnxray;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ecgColumn {
                get {
                    return this.columnecg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cbcColumn {
                get {
                    return this.columncbc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn urinalysisColumn {
                get {
                    return this.columnurinalysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stoolColumn {
                get {
                    return this.columnstool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hepaBColumn {
                get {
                    return this.columnhepaB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hivColumn {
                get {
                    return this.columnhiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rprColumn {
                get {
                    return this.columnrpr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bloodTypeColumn {
                get {
                    return this.columnbloodType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn psychologicalColumn {
                get {
                    return this.columnpsychological;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn specialNeedsColumn {
                get {
                    return this.columnspecialNeeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow this[int index] {
                get {
                    return ((ancillaryResultRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ancillaryResultRowChangeEventHandler ancillaryResultRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ancillaryResultRowChangeEventHandler ancillaryResultRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ancillaryResultRowChangeEventHandler ancillaryResultRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ancillaryResultRowChangeEventHandler ancillaryResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddancillaryResultRow(ancillaryResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow AddancillaryResultRow(int id, byte[] xray, byte[] ecg, byte[] cbc, byte[] urinalysis, byte[] stool, byte[] hepaB, byte[] hiv, byte[] rpr, string bloodType, byte[] psychological, string specialNeeds, ofwRow parentofwRowByancillaryResult_ofw) {
                ancillaryResultRow rowancillaryResultRow = ((ancillaryResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        xray,
                        ecg,
                        cbc,
                        urinalysis,
                        stool,
                        hepaB,
                        hiv,
                        rpr,
                        bloodType,
                        psychological,
                        specialNeeds,
                        null};
                if ((parentofwRowByancillaryResult_ofw != null)) {
                    columnValuesArray[12] = parentofwRowByancillaryResult_ofw[0];
                }
                rowancillaryResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowancillaryResultRow);
                return rowancillaryResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow FindByid(int id) {
                return ((ancillaryResultRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ancillaryResultDataTable cln = ((ancillaryResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ancillaryResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnxray = base.Columns["xray"];
                this.columnecg = base.Columns["ecg"];
                this.columncbc = base.Columns["cbc"];
                this.columnurinalysis = base.Columns["urinalysis"];
                this.columnstool = base.Columns["stool"];
                this.columnhepaB = base.Columns["hepaB"];
                this.columnhiv = base.Columns["hiv"];
                this.columnrpr = base.Columns["rpr"];
                this.columnbloodType = base.Columns["bloodType"];
                this.columnpsychological = base.Columns["psychological"];
                this.columnspecialNeeds = base.Columns["specialNeeds"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnxray = new global::System.Data.DataColumn("xray", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxray);
                this.columnecg = new global::System.Data.DataColumn("ecg", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecg);
                this.columncbc = new global::System.Data.DataColumn("cbc", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncbc);
                this.columnurinalysis = new global::System.Data.DataColumn("urinalysis", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurinalysis);
                this.columnstool = new global::System.Data.DataColumn("stool", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstool);
                this.columnhepaB = new global::System.Data.DataColumn("hepaB", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhepaB);
                this.columnhiv = new global::System.Data.DataColumn("hiv", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhiv);
                this.columnrpr = new global::System.Data.DataColumn("rpr", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrpr);
                this.columnbloodType = new global::System.Data.DataColumn("bloodType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodType);
                this.columnpsychological = new global::System.Data.DataColumn("psychological", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsychological);
                this.columnspecialNeeds = new global::System.Data.DataColumn("specialNeeds", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecialNeeds);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnxray.AllowDBNull = false;
                this.columnecg.AllowDBNull = false;
                this.columncbc.AllowDBNull = false;
                this.columnurinalysis.AllowDBNull = false;
                this.columnstool.AllowDBNull = false;
                this.columnhepaB.AllowDBNull = false;
                this.columnhiv.AllowDBNull = false;
                this.columnrpr.AllowDBNull = false;
                this.columnbloodType.AllowDBNull = false;
                this.columnbloodType.MaxLength = 2;
                this.columnpsychological.AllowDBNull = false;
                this.columnspecialNeeds.AllowDBNull = false;
                this.columnspecialNeeds.MaxLength = 100;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow NewancillaryResultRow() {
                return ((ancillaryResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ancillaryResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ancillaryResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ancillaryResultRowChanged != null)) {
                    this.ancillaryResultRowChanged(this, new ancillaryResultRowChangeEvent(((ancillaryResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ancillaryResultRowChanging != null)) {
                    this.ancillaryResultRowChanging(this, new ancillaryResultRowChangeEvent(((ancillaryResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ancillaryResultRowDeleted != null)) {
                    this.ancillaryResultRowDeleted(this, new ancillaryResultRowChangeEvent(((ancillaryResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ancillaryResultRowDeleting != null)) {
                    this.ancillaryResultRowDeleting(this, new ancillaryResultRowChangeEvent(((ancillaryResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveancillaryResultRow(ancillaryResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ancillaryResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class assessmentDataTable : global::System.Data.TypedTableBase<assessmentRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnfit;
            
            private global::System.Data.DataColumn columndeck;
            
            private global::System.Data.DataColumn columnengine;
            
            private global::System.Data.DataColumn columncatering;
            
            private global::System.Data.DataColumn columnother;
            
            private global::System.Data.DataColumn columnrestriction;
            
            private global::System.Data.DataColumn columnvisualAids;
            
            private global::System.Data.DataColumn columnrestrctions;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentDataTable() {
                this.TableName = "assessment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal assessmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected assessmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fitColumn {
                get {
                    return this.columnfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn deckColumn {
                get {
                    return this.columndeck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn engineColumn {
                get {
                    return this.columnengine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cateringColumn {
                get {
                    return this.columncatering;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn otherColumn {
                get {
                    return this.columnother;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn restrictionColumn {
                get {
                    return this.columnrestriction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn visualAidsColumn {
                get {
                    return this.columnvisualAids;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn restrctionsColumn {
                get {
                    return this.columnrestrctions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow this[int index] {
                get {
                    return ((assessmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event assessmentRowChangeEventHandler assessmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event assessmentRowChangeEventHandler assessmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event assessmentRowChangeEventHandler assessmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event assessmentRowChangeEventHandler assessmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddassessmentRow(assessmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow AddassessmentRow(int id, byte[] fit, int deck, int engine, int catering, int other, int restriction, int visualAids, byte[] restrctions, ofwRow parentofwRowByassessment_ofw) {
                assessmentRow rowassessmentRow = ((assessmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        fit,
                        deck,
                        engine,
                        catering,
                        other,
                        restriction,
                        visualAids,
                        restrctions,
                        null};
                if ((parentofwRowByassessment_ofw != null)) {
                    columnValuesArray[9] = parentofwRowByassessment_ofw[0];
                }
                rowassessmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowassessmentRow);
                return rowassessmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow FindByid(int id) {
                return ((assessmentRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                assessmentDataTable cln = ((assessmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new assessmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnfit = base.Columns["fit"];
                this.columndeck = base.Columns["deck"];
                this.columnengine = base.Columns["engine"];
                this.columncatering = base.Columns["catering"];
                this.columnother = base.Columns["other"];
                this.columnrestriction = base.Columns["restriction"];
                this.columnvisualAids = base.Columns["visualAids"];
                this.columnrestrctions = base.Columns["restrctions"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnfit = new global::System.Data.DataColumn("fit", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfit);
                this.columndeck = new global::System.Data.DataColumn("deck", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeck);
                this.columnengine = new global::System.Data.DataColumn("engine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnengine);
                this.columncatering = new global::System.Data.DataColumn("catering", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncatering);
                this.columnother = new global::System.Data.DataColumn("other", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnother);
                this.columnrestriction = new global::System.Data.DataColumn("restriction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrestriction);
                this.columnvisualAids = new global::System.Data.DataColumn("visualAids", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisualAids);
                this.columnrestrctions = new global::System.Data.DataColumn("restrctions", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrestrctions);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnfit.AllowDBNull = false;
                this.columndeck.AllowDBNull = false;
                this.columnengine.AllowDBNull = false;
                this.columncatering.AllowDBNull = false;
                this.columnother.AllowDBNull = false;
                this.columnrestriction.AllowDBNull = false;
                this.columnvisualAids.AllowDBNull = false;
                this.columnrestrctions.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow NewassessmentRow() {
                return ((assessmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new assessmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(assessmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.assessmentRowChanged != null)) {
                    this.assessmentRowChanged(this, new assessmentRowChangeEvent(((assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.assessmentRowChanging != null)) {
                    this.assessmentRowChanging(this, new assessmentRowChangeEvent(((assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.assessmentRowDeleted != null)) {
                    this.assessmentRowDeleted(this, new assessmentRowChangeEvent(((assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.assessmentRowDeleting != null)) {
                    this.assessmentRowDeleting(this, new assessmentRowChangeEvent(((assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveassessmentRow(assessmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "assessmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Blood_ChemistrtyDataTable : global::System.Data.TypedTableBase<Blood_ChemistrtyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnpotassium;
            
            private global::System.Data.DataColumn columnfbs;
            
            private global::System.Data.DataColumn columnbun;
            
            private global::System.Data.DataColumn columncreatinine;
            
            private global::System.Data.DataColumn columntotalCholesterol;
            
            private global::System.Data.DataColumn columntriglycerides;
            
            private global::System.Data.DataColumn columnhdl;
            
            private global::System.Data.DataColumn columnldl;
            
            private global::System.Data.DataColumn columnvldl;
            
            private global::System.Data.DataColumn columnuricAcid;
            
            private global::System.Data.DataColumn columnsgotAst;
            
            private global::System.Data.DataColumn columnsgptAlt;
            
            private global::System.Data.DataColumn columnhemoglobinA1C;
            
            private global::System.Data.DataColumn columnalbumin;
            
            private global::System.Data.DataColumn columnglobulin;
            
            private global::System.Data.DataColumn columnAGRatio;
            
            private global::System.Data.DataColumn columnalp;
            
            private global::System.Data.DataColumn columnIndirectBilirubin;
            
            private global::System.Data.DataColumn columnDirectBilirubin;
            
            private global::System.Data.DataColumn columnTotalBilirubin;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyDataTable() {
                this.TableName = "Blood_Chemistrty";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Blood_ChemistrtyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Blood_ChemistrtyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn potassiumColumn {
                get {
                    return this.columnpotassium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fbsColumn {
                get {
                    return this.columnfbs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bunColumn {
                get {
                    return this.columnbun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn creatinineColumn {
                get {
                    return this.columncreatinine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn totalCholesterolColumn {
                get {
                    return this.columntotalCholesterol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn triglyceridesColumn {
                get {
                    return this.columntriglycerides;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hdlColumn {
                get {
                    return this.columnhdl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ldlColumn {
                get {
                    return this.columnldl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn vldlColumn {
                get {
                    return this.columnvldl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn uricAcidColumn {
                get {
                    return this.columnuricAcid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sgotAstColumn {
                get {
                    return this.columnsgotAst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sgptAltColumn {
                get {
                    return this.columnsgptAlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hemoglobinA1CColumn {
                get {
                    return this.columnhemoglobinA1C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn albuminColumn {
                get {
                    return this.columnalbumin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn globulinColumn {
                get {
                    return this.columnglobulin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AGRatioColumn {
                get {
                    return this.columnAGRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn alpColumn {
                get {
                    return this.columnalp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IndirectBilirubinColumn {
                get {
                    return this.columnIndirectBilirubin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DirectBilirubinColumn {
                get {
                    return this.columnDirectBilirubin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalBilirubinColumn {
                get {
                    return this.columnTotalBilirubin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow this[int index] {
                get {
                    return ((Blood_ChemistrtyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Blood_ChemistrtyRowChangeEventHandler Blood_ChemistrtyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Blood_ChemistrtyRowChangeEventHandler Blood_ChemistrtyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Blood_ChemistrtyRowChangeEventHandler Blood_ChemistrtyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Blood_ChemistrtyRowChangeEventHandler Blood_ChemistrtyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBlood_ChemistrtyRow(Blood_ChemistrtyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow AddBlood_ChemistrtyRow(
                        int id, 
                        float potassium, 
                        float fbs, 
                        float bun, 
                        float creatinine, 
                        float totalCholesterol, 
                        float triglycerides, 
                        float hdl, 
                        float ldl, 
                        float vldl, 
                        float uricAcid, 
                        float sgotAst, 
                        float sgptAlt, 
                        float hemoglobinA1C, 
                        float albumin, 
                        float globulin, 
                        float AGRatio, 
                        float alp, 
                        float IndirectBilirubin, 
                        float DirectBilirubin, 
                        float TotalBilirubin, 
                        ofwRow parentofwRowByBlood_Chemistrty_ofw) {
                Blood_ChemistrtyRow rowBlood_ChemistrtyRow = ((Blood_ChemistrtyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        potassium,
                        fbs,
                        bun,
                        creatinine,
                        totalCholesterol,
                        triglycerides,
                        hdl,
                        ldl,
                        vldl,
                        uricAcid,
                        sgotAst,
                        sgptAlt,
                        hemoglobinA1C,
                        albumin,
                        globulin,
                        AGRatio,
                        alp,
                        IndirectBilirubin,
                        DirectBilirubin,
                        TotalBilirubin,
                        null};
                if ((parentofwRowByBlood_Chemistrty_ofw != null)) {
                    columnValuesArray[21] = parentofwRowByBlood_Chemistrty_ofw[0];
                }
                rowBlood_ChemistrtyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBlood_ChemistrtyRow);
                return rowBlood_ChemistrtyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow FindByid(int id) {
                return ((Blood_ChemistrtyRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Blood_ChemistrtyDataTable cln = ((Blood_ChemistrtyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Blood_ChemistrtyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnpotassium = base.Columns["potassium"];
                this.columnfbs = base.Columns["fbs"];
                this.columnbun = base.Columns["bun"];
                this.columncreatinine = base.Columns["creatinine"];
                this.columntotalCholesterol = base.Columns["totalCholesterol"];
                this.columntriglycerides = base.Columns["triglycerides"];
                this.columnhdl = base.Columns["hdl"];
                this.columnldl = base.Columns["ldl"];
                this.columnvldl = base.Columns["vldl"];
                this.columnuricAcid = base.Columns["uricAcid"];
                this.columnsgotAst = base.Columns["sgotAst"];
                this.columnsgptAlt = base.Columns["sgptAlt"];
                this.columnhemoglobinA1C = base.Columns["hemoglobinA1C"];
                this.columnalbumin = base.Columns["albumin"];
                this.columnglobulin = base.Columns["globulin"];
                this.columnAGRatio = base.Columns["AGRatio"];
                this.columnalp = base.Columns["alp"];
                this.columnIndirectBilirubin = base.Columns["IndirectBilirubin"];
                this.columnDirectBilirubin = base.Columns["DirectBilirubin"];
                this.columnTotalBilirubin = base.Columns["TotalBilirubin"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnpotassium = new global::System.Data.DataColumn("potassium", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpotassium);
                this.columnfbs = new global::System.Data.DataColumn("fbs", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbs);
                this.columnbun = new global::System.Data.DataColumn("bun", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbun);
                this.columncreatinine = new global::System.Data.DataColumn("creatinine", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatinine);
                this.columntotalCholesterol = new global::System.Data.DataColumn("totalCholesterol", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCholesterol);
                this.columntriglycerides = new global::System.Data.DataColumn("triglycerides", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntriglycerides);
                this.columnhdl = new global::System.Data.DataColumn("hdl", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhdl);
                this.columnldl = new global::System.Data.DataColumn("ldl", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnldl);
                this.columnvldl = new global::System.Data.DataColumn("vldl", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvldl);
                this.columnuricAcid = new global::System.Data.DataColumn("uricAcid", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuricAcid);
                this.columnsgotAst = new global::System.Data.DataColumn("sgotAst", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsgotAst);
                this.columnsgptAlt = new global::System.Data.DataColumn("sgptAlt", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsgptAlt);
                this.columnhemoglobinA1C = new global::System.Data.DataColumn("hemoglobinA1C", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhemoglobinA1C);
                this.columnalbumin = new global::System.Data.DataColumn("albumin", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalbumin);
                this.columnglobulin = new global::System.Data.DataColumn("globulin", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnglobulin);
                this.columnAGRatio = new global::System.Data.DataColumn("AGRatio", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGRatio);
                this.columnalp = new global::System.Data.DataColumn("alp", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalp);
                this.columnIndirectBilirubin = new global::System.Data.DataColumn("IndirectBilirubin", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndirectBilirubin);
                this.columnDirectBilirubin = new global::System.Data.DataColumn("DirectBilirubin", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectBilirubin);
                this.columnTotalBilirubin = new global::System.Data.DataColumn("TotalBilirubin", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBilirubin);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnpotassium.AllowDBNull = false;
                this.columnfbs.AllowDBNull = false;
                this.columnbun.AllowDBNull = false;
                this.columncreatinine.AllowDBNull = false;
                this.columntotalCholesterol.AllowDBNull = false;
                this.columntriglycerides.AllowDBNull = false;
                this.columnhdl.AllowDBNull = false;
                this.columnldl.AllowDBNull = false;
                this.columnvldl.AllowDBNull = false;
                this.columnuricAcid.AllowDBNull = false;
                this.columnsgotAst.AllowDBNull = false;
                this.columnsgptAlt.AllowDBNull = false;
                this.columnhemoglobinA1C.AllowDBNull = false;
                this.columnalbumin.AllowDBNull = false;
                this.columnglobulin.AllowDBNull = false;
                this.columnAGRatio.AllowDBNull = false;
                this.columnalp.AllowDBNull = false;
                this.columnIndirectBilirubin.AllowDBNull = false;
                this.columnDirectBilirubin.AllowDBNull = false;
                this.columnTotalBilirubin.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow NewBlood_ChemistrtyRow() {
                return ((Blood_ChemistrtyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Blood_ChemistrtyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Blood_ChemistrtyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Blood_ChemistrtyRowChanged != null)) {
                    this.Blood_ChemistrtyRowChanged(this, new Blood_ChemistrtyRowChangeEvent(((Blood_ChemistrtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Blood_ChemistrtyRowChanging != null)) {
                    this.Blood_ChemistrtyRowChanging(this, new Blood_ChemistrtyRowChangeEvent(((Blood_ChemistrtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Blood_ChemistrtyRowDeleted != null)) {
                    this.Blood_ChemistrtyRowDeleted(this, new Blood_ChemistrtyRowChangeEvent(((Blood_ChemistrtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Blood_ChemistrtyRowDeleting != null)) {
                    this.Blood_ChemistrtyRowDeleting(this, new Blood_ChemistrtyRowChangeEvent(((Blood_ChemistrtyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBlood_ChemistrtyRow(Blood_ChemistrtyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Blood_ChemistrtyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Clinic_MicroscopyDataTable : global::System.Data.TypedTableBase<Clinic_MicroscopyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnMacroColor;
            
            private global::System.Data.DataColumn columnMacroTransparency;
            
            private global::System.Data.DataColumn columnLeukocyte;
            
            private global::System.Data.DataColumn columnNitrite;
            
            private global::System.Data.DataColumn columnUrobilinogen;
            
            private global::System.Data.DataColumn columnProtein;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnBlood;
            
            private global::System.Data.DataColumn columnSpecificGravity;
            
            private global::System.Data.DataColumn columnKetone;
            
            private global::System.Data.DataColumn columnBilirubin;
            
            private global::System.Data.DataColumn columnGlucose;
            
            private global::System.Data.DataColumn columnMicroEpithelial;
            
            private global::System.Data.DataColumn columnMucousThreads;
            
            private global::System.Data.DataColumn columnAmorphousMaterial;
            
            private global::System.Data.DataColumn columnPusCells;
            
            private global::System.Data.DataColumn columnrbc;
            
            private global::System.Data.DataColumn columnbacteria;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyDataTable() {
                this.TableName = "Clinic_Microscopy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Clinic_MicroscopyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Clinic_MicroscopyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MacroColorColumn {
                get {
                    return this.columnMacroColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MacroTransparencyColumn {
                get {
                    return this.columnMacroTransparency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LeukocyteColumn {
                get {
                    return this.columnLeukocyte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NitriteColumn {
                get {
                    return this.columnNitrite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UrobilinogenColumn {
                get {
                    return this.columnUrobilinogen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProteinColumn {
                get {
                    return this.columnProtein;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BloodColumn {
                get {
                    return this.columnBlood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SpecificGravityColumn {
                get {
                    return this.columnSpecificGravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KetoneColumn {
                get {
                    return this.columnKetone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BilirubinColumn {
                get {
                    return this.columnBilirubin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlucoseColumn {
                get {
                    return this.columnGlucose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MicroEpithelialColumn {
                get {
                    return this.columnMicroEpithelial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MucousThreadsColumn {
                get {
                    return this.columnMucousThreads;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmorphousMaterialColumn {
                get {
                    return this.columnAmorphousMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PusCellsColumn {
                get {
                    return this.columnPusCells;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rbcColumn {
                get {
                    return this.columnrbc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bacteriaColumn {
                get {
                    return this.columnbacteria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow this[int index] {
                get {
                    return ((Clinic_MicroscopyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Clinic_MicroscopyRowChangeEventHandler Clinic_MicroscopyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Clinic_MicroscopyRowChangeEventHandler Clinic_MicroscopyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Clinic_MicroscopyRowChangeEventHandler Clinic_MicroscopyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Clinic_MicroscopyRowChangeEventHandler Clinic_MicroscopyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddClinic_MicroscopyRow(Clinic_MicroscopyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow AddClinic_MicroscopyRow(
                        int id, 
                        string MacroColor, 
                        string MacroTransparency, 
                        byte[] Leukocyte, 
                        byte[] Nitrite, 
                        string Urobilinogen, 
                        byte[] Protein, 
                        float PH, 
                        string Blood, 
                        float SpecificGravity, 
                        byte[] Ketone, 
                        byte[] Bilirubin, 
                        byte[] Glucose, 
                        string MicroEpithelial, 
                        string MucousThreads, 
                        string AmorphousMaterial, 
                        string PusCells, 
                        string rbc, 
                        string bacteria, 
                        ofwRow parentofwRowByClinic_Microscopy_ofw) {
                Clinic_MicroscopyRow rowClinic_MicroscopyRow = ((Clinic_MicroscopyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        MacroColor,
                        MacroTransparency,
                        Leukocyte,
                        Nitrite,
                        Urobilinogen,
                        Protein,
                        PH,
                        Blood,
                        SpecificGravity,
                        Ketone,
                        Bilirubin,
                        Glucose,
                        MicroEpithelial,
                        MucousThreads,
                        AmorphousMaterial,
                        PusCells,
                        rbc,
                        bacteria,
                        null};
                if ((parentofwRowByClinic_Microscopy_ofw != null)) {
                    columnValuesArray[19] = parentofwRowByClinic_Microscopy_ofw[0];
                }
                rowClinic_MicroscopyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinic_MicroscopyRow);
                return rowClinic_MicroscopyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow FindByid(int id) {
                return ((Clinic_MicroscopyRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Clinic_MicroscopyDataTable cln = ((Clinic_MicroscopyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Clinic_MicroscopyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnMacroColor = base.Columns["MacroColor"];
                this.columnMacroTransparency = base.Columns["MacroTransparency"];
                this.columnLeukocyte = base.Columns["Leukocyte"];
                this.columnNitrite = base.Columns["Nitrite"];
                this.columnUrobilinogen = base.Columns["Urobilinogen"];
                this.columnProtein = base.Columns["Protein"];
                this.columnPH = base.Columns["PH"];
                this.columnBlood = base.Columns["Blood"];
                this.columnSpecificGravity = base.Columns["SpecificGravity"];
                this.columnKetone = base.Columns["Ketone"];
                this.columnBilirubin = base.Columns["Bilirubin"];
                this.columnGlucose = base.Columns["Glucose"];
                this.columnMicroEpithelial = base.Columns["MicroEpithelial"];
                this.columnMucousThreads = base.Columns["MucousThreads"];
                this.columnAmorphousMaterial = base.Columns["AmorphousMaterial"];
                this.columnPusCells = base.Columns["PusCells"];
                this.columnrbc = base.Columns["rbc"];
                this.columnbacteria = base.Columns["bacteria"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnMacroColor = new global::System.Data.DataColumn("MacroColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMacroColor);
                this.columnMacroTransparency = new global::System.Data.DataColumn("MacroTransparency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMacroTransparency);
                this.columnLeukocyte = new global::System.Data.DataColumn("Leukocyte", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeukocyte);
                this.columnNitrite = new global::System.Data.DataColumn("Nitrite", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrite);
                this.columnUrobilinogen = new global::System.Data.DataColumn("Urobilinogen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrobilinogen);
                this.columnProtein = new global::System.Data.DataColumn("Protein", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtein);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnBlood = new global::System.Data.DataColumn("Blood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlood);
                this.columnSpecificGravity = new global::System.Data.DataColumn("SpecificGravity", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificGravity);
                this.columnKetone = new global::System.Data.DataColumn("Ketone", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKetone);
                this.columnBilirubin = new global::System.Data.DataColumn("Bilirubin", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilirubin);
                this.columnGlucose = new global::System.Data.DataColumn("Glucose", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlucose);
                this.columnMicroEpithelial = new global::System.Data.DataColumn("MicroEpithelial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicroEpithelial);
                this.columnMucousThreads = new global::System.Data.DataColumn("MucousThreads", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMucousThreads);
                this.columnAmorphousMaterial = new global::System.Data.DataColumn("AmorphousMaterial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmorphousMaterial);
                this.columnPusCells = new global::System.Data.DataColumn("PusCells", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPusCells);
                this.columnrbc = new global::System.Data.DataColumn("rbc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrbc);
                this.columnbacteria = new global::System.Data.DataColumn("bacteria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbacteria);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnMacroColor.AllowDBNull = false;
                this.columnMacroColor.MaxLength = 10;
                this.columnMacroTransparency.AllowDBNull = false;
                this.columnMacroTransparency.MaxLength = 20;
                this.columnLeukocyte.AllowDBNull = false;
                this.columnNitrite.AllowDBNull = false;
                this.columnUrobilinogen.AllowDBNull = false;
                this.columnUrobilinogen.MaxLength = 10;
                this.columnProtein.AllowDBNull = false;
                this.columnPH.AllowDBNull = false;
                this.columnBlood.AllowDBNull = false;
                this.columnBlood.MaxLength = 5;
                this.columnSpecificGravity.AllowDBNull = false;
                this.columnKetone.AllowDBNull = false;
                this.columnBilirubin.AllowDBNull = false;
                this.columnGlucose.AllowDBNull = false;
                this.columnMicroEpithelial.AllowDBNull = false;
                this.columnMicroEpithelial.MaxLength = 10;
                this.columnMucousThreads.AllowDBNull = false;
                this.columnMucousThreads.MaxLength = 10;
                this.columnAmorphousMaterial.AllowDBNull = false;
                this.columnAmorphousMaterial.MaxLength = 10;
                this.columnPusCells.AllowDBNull = false;
                this.columnPusCells.MaxLength = 5;
                this.columnrbc.AllowDBNull = false;
                this.columnrbc.MaxLength = 5;
                this.columnbacteria.AllowDBNull = false;
                this.columnbacteria.MaxLength = 10;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow NewClinic_MicroscopyRow() {
                return ((Clinic_MicroscopyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Clinic_MicroscopyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Clinic_MicroscopyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clinic_MicroscopyRowChanged != null)) {
                    this.Clinic_MicroscopyRowChanged(this, new Clinic_MicroscopyRowChangeEvent(((Clinic_MicroscopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clinic_MicroscopyRowChanging != null)) {
                    this.Clinic_MicroscopyRowChanging(this, new Clinic_MicroscopyRowChangeEvent(((Clinic_MicroscopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clinic_MicroscopyRowDeleted != null)) {
                    this.Clinic_MicroscopyRowDeleted(this, new Clinic_MicroscopyRowChangeEvent(((Clinic_MicroscopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clinic_MicroscopyRowDeleting != null)) {
                    this.Clinic_MicroscopyRowDeleting(this, new Clinic_MicroscopyRowChangeEvent(((Clinic_MicroscopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveClinic_MicroscopyRow(Clinic_MicroscopyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Clinic_MicroscopyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HematologyDataTable : global::System.Data.TypedTableBase<HematologyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnwbc;
            
            private global::System.Data.DataColumn columnrbc;
            
            private global::System.Data.DataColumn columnhgb;
            
            private global::System.Data.DataColumn columnhct;
            
            private global::System.Data.DataColumn columnplatelets;
            
            private global::System.Data.DataColumn columnneutrophil;
            
            private global::System.Data.DataColumn columnlymphocytes;
            
            private global::System.Data.DataColumn columnmonocyte;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyDataTable() {
                this.TableName = "Hematology";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HematologyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected HematologyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wbcColumn {
                get {
                    return this.columnwbc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rbcColumn {
                get {
                    return this.columnrbc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hgbColumn {
                get {
                    return this.columnhgb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hctColumn {
                get {
                    return this.columnhct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn plateletsColumn {
                get {
                    return this.columnplatelets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn neutrophilColumn {
                get {
                    return this.columnneutrophil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lymphocytesColumn {
                get {
                    return this.columnlymphocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn monocyteColumn {
                get {
                    return this.columnmonocyte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow this[int index] {
                get {
                    return ((HematologyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HematologyRowChangeEventHandler HematologyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HematologyRowChangeEventHandler HematologyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HematologyRowChangeEventHandler HematologyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HematologyRowChangeEventHandler HematologyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddHematologyRow(HematologyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow AddHematologyRow(int id, float wbc, float rbc, float hgb, float hct, int platelets, float neutrophil, float lymphocytes, float monocyte, ofwRow parentofwRowByHematology_ofw) {
                HematologyRow rowHematologyRow = ((HematologyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        wbc,
                        rbc,
                        hgb,
                        hct,
                        platelets,
                        neutrophil,
                        lymphocytes,
                        monocyte,
                        null};
                if ((parentofwRowByHematology_ofw != null)) {
                    columnValuesArray[9] = parentofwRowByHematology_ofw[0];
                }
                rowHematologyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHematologyRow);
                return rowHematologyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow FindByid(int id) {
                return ((HematologyRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HematologyDataTable cln = ((HematologyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HematologyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnwbc = base.Columns["wbc"];
                this.columnrbc = base.Columns["rbc"];
                this.columnhgb = base.Columns["hgb"];
                this.columnhct = base.Columns["hct"];
                this.columnplatelets = base.Columns["platelets"];
                this.columnneutrophil = base.Columns["neutrophil"];
                this.columnlymphocytes = base.Columns["lymphocytes"];
                this.columnmonocyte = base.Columns["monocyte"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnwbc = new global::System.Data.DataColumn("wbc", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwbc);
                this.columnrbc = new global::System.Data.DataColumn("rbc", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrbc);
                this.columnhgb = new global::System.Data.DataColumn("hgb", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhgb);
                this.columnhct = new global::System.Data.DataColumn("hct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhct);
                this.columnplatelets = new global::System.Data.DataColumn("platelets", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplatelets);
                this.columnneutrophil = new global::System.Data.DataColumn("neutrophil", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnneutrophil);
                this.columnlymphocytes = new global::System.Data.DataColumn("lymphocytes", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlymphocytes);
                this.columnmonocyte = new global::System.Data.DataColumn("monocyte", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonocyte);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnwbc.AllowDBNull = false;
                this.columnrbc.AllowDBNull = false;
                this.columnhgb.AllowDBNull = false;
                this.columnhct.AllowDBNull = false;
                this.columnplatelets.AllowDBNull = false;
                this.columnneutrophil.AllowDBNull = false;
                this.columnlymphocytes.AllowDBNull = false;
                this.columnmonocyte.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow NewHematologyRow() {
                return ((HematologyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HematologyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HematologyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HematologyRowChanged != null)) {
                    this.HematologyRowChanged(this, new HematologyRowChangeEvent(((HematologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HematologyRowChanging != null)) {
                    this.HematologyRowChanging(this, new HematologyRowChangeEvent(((HematologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HematologyRowDeleted != null)) {
                    this.HematologyRowDeleted(this, new HematologyRowChangeEvent(((HematologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HematologyRowDeleting != null)) {
                    this.HematologyRowDeleting(this, new HematologyRowChangeEvent(((HematologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveHematologyRow(HematologyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HematologyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class historyDataTable : global::System.Data.TypedTableBase<historyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnmed1;
            
            private global::System.Data.DataColumn columnmed2;
            
            private global::System.Data.DataColumn columncomment1;
            
            private global::System.Data.DataColumn columncomment2;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnsystolic;
            
            private global::System.Data.DataColumn columndiastolic;
            
            private global::System.Data.DataColumn columnpulseRate;
            
            private global::System.Data.DataColumn columnrhythm;
            
            private global::System.Data.DataColumn columnrespiration;
            
            private global::System.Data.DataColumn columnbmi;
            
            private global::System.Data.DataColumn columnfarCor1;
            
            private global::System.Data.DataColumn columnfarCor2;
            
            private global::System.Data.DataColumn columnnearCor1;
            
            private global::System.Data.DataColumn columnnearCor2;
            
            private global::System.Data.DataColumn columnfarUn1;
            
            private global::System.Data.DataColumn columnfarUn2;
            
            private global::System.Data.DataColumn columnnearUn1;
            
            private global::System.Data.DataColumn columnnearUn2;
            
            private global::System.Data.DataColumn columnishihara;
            
            private global::System.Data.DataColumn columnearRight;
            
            private global::System.Data.DataColumn columnearLeft;
            
            private global::System.Data.DataColumn columnspeech;
            
            private global::System.Data.DataColumn columnskin;
            
            private global::System.Data.DataColumn columnhead;
            
            private global::System.Data.DataColumn columneyes;
            
            private global::System.Data.DataColumn columnpupil;
            
            private global::System.Data.DataColumn columnears;
            
            private global::System.Data.DataColumn columnnose;
            
            private global::System.Data.DataColumn columnmouth;
            
            private global::System.Data.DataColumn columnlymph;
            
            private global::System.Data.DataColumn columnchestBreast;
            
            private global::System.Data.DataColumn columnlungs;
            
            private global::System.Data.DataColumn columnheart;
            
            private global::System.Data.DataColumn columnabdomen;
            
            private global::System.Data.DataColumn columnback;
            
            private global::System.Data.DataColumn columnanus;
            
            private global::System.Data.DataColumn columngenito;
            
            private global::System.Data.DataColumn columninguinals;
            
            private global::System.Data.DataColumn columnextremities;
            
            private global::System.Data.DataColumn columnreflexes;
            
            private global::System.Data.DataColumn columndental;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyDataTable() {
                this.TableName = "history";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal historyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected historyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn med1Column {
                get {
                    return this.columnmed1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn med2Column {
                get {
                    return this.columnmed2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn comment1Column {
                get {
                    return this.columncomment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn comment2Column {
                get {
                    return this.columncomment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn systolicColumn {
                get {
                    return this.columnsystolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn diastolicColumn {
                get {
                    return this.columndiastolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pulseRateColumn {
                get {
                    return this.columnpulseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rhythmColumn {
                get {
                    return this.columnrhythm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn respirationColumn {
                get {
                    return this.columnrespiration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bmiColumn {
                get {
                    return this.columnbmi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn farCor1Column {
                get {
                    return this.columnfarCor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn farCor2Column {
                get {
                    return this.columnfarCor2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nearCor1Column {
                get {
                    return this.columnnearCor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nearCor2Column {
                get {
                    return this.columnnearCor2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn farUn1Column {
                get {
                    return this.columnfarUn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn farUn2Column {
                get {
                    return this.columnfarUn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nearUn1Column {
                get {
                    return this.columnnearUn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nearUn2Column {
                get {
                    return this.columnnearUn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ishiharaColumn {
                get {
                    return this.columnishihara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn earRightColumn {
                get {
                    return this.columnearRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn earLeftColumn {
                get {
                    return this.columnearLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn speechColumn {
                get {
                    return this.columnspeech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn skinColumn {
                get {
                    return this.columnskin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn headColumn {
                get {
                    return this.columnhead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn eyesColumn {
                get {
                    return this.columneyes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pupilColumn {
                get {
                    return this.columnpupil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn earsColumn {
                get {
                    return this.columnears;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn noseColumn {
                get {
                    return this.columnnose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn mouthColumn {
                get {
                    return this.columnmouth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lymphColumn {
                get {
                    return this.columnlymph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn chestBreastColumn {
                get {
                    return this.columnchestBreast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lungsColumn {
                get {
                    return this.columnlungs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn heartColumn {
                get {
                    return this.columnheart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn abdomenColumn {
                get {
                    return this.columnabdomen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn backColumn {
                get {
                    return this.columnback;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn anusColumn {
                get {
                    return this.columnanus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn genitoColumn {
                get {
                    return this.columngenito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn inguinalsColumn {
                get {
                    return this.columninguinals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn extremitiesColumn {
                get {
                    return this.columnextremities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn reflexesColumn {
                get {
                    return this.columnreflexes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dentalColumn {
                get {
                    return this.columndental;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow this[int index] {
                get {
                    return ((historyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event historyRowChangeEventHandler historyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event historyRowChangeEventHandler historyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event historyRowChangeEventHandler historyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event historyRowChangeEventHandler historyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddhistoryRow(historyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow AddhistoryRow(
                        int id, 
                        byte[] med1, 
                        byte[] med2, 
                        string comment1, 
                        string comment2, 
                        int height, 
                        int weight, 
                        int systolic, 
                        int diastolic, 
                        int pulseRate, 
                        int rhythm, 
                        int respiration, 
                        int bmi, 
                        int farCor1, 
                        int farCor2, 
                        int nearCor1, 
                        int nearCor2, 
                        int farUn1, 
                        int farUn2, 
                        int nearUn1, 
                        int nearUn2, 
                        byte[] ishihara, 
                        byte[] earRight, 
                        byte[] earLeft, 
                        byte[] speech, 
                        byte[] skin, 
                        byte[] head, 
                        byte[] eyes, 
                        byte[] pupil, 
                        byte[] ears, 
                        byte[] nose, 
                        byte[] mouth, 
                        byte[] lymph, 
                        byte[] chestBreast, 
                        byte[] lungs, 
                        byte[] heart, 
                        byte[] abdomen, 
                        byte[] back, 
                        byte[] anus, 
                        byte[] genito, 
                        byte[] inguinals, 
                        byte[] extremities, 
                        byte[] reflexes, 
                        byte[] dental, 
                        ofwRow parentofwRowByhistory_ofw) {
                historyRow rowhistoryRow = ((historyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        med1,
                        med2,
                        comment1,
                        comment2,
                        height,
                        weight,
                        systolic,
                        diastolic,
                        pulseRate,
                        rhythm,
                        respiration,
                        bmi,
                        farCor1,
                        farCor2,
                        nearCor1,
                        nearCor2,
                        farUn1,
                        farUn2,
                        nearUn1,
                        nearUn2,
                        ishihara,
                        earRight,
                        earLeft,
                        speech,
                        skin,
                        head,
                        eyes,
                        pupil,
                        ears,
                        nose,
                        mouth,
                        lymph,
                        chestBreast,
                        lungs,
                        heart,
                        abdomen,
                        back,
                        anus,
                        genito,
                        inguinals,
                        extremities,
                        reflexes,
                        dental,
                        null};
                if ((parentofwRowByhistory_ofw != null)) {
                    columnValuesArray[44] = parentofwRowByhistory_ofw[0];
                }
                rowhistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhistoryRow);
                return rowhistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow FindByid(int id) {
                return ((historyRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                historyDataTable cln = ((historyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new historyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnmed1 = base.Columns["med1"];
                this.columnmed2 = base.Columns["med2"];
                this.columncomment1 = base.Columns["comment1"];
                this.columncomment2 = base.Columns["comment2"];
                this.columnheight = base.Columns["height"];
                this.columnweight = base.Columns["weight"];
                this.columnsystolic = base.Columns["systolic"];
                this.columndiastolic = base.Columns["diastolic"];
                this.columnpulseRate = base.Columns["pulseRate"];
                this.columnrhythm = base.Columns["rhythm"];
                this.columnrespiration = base.Columns["respiration"];
                this.columnbmi = base.Columns["bmi"];
                this.columnfarCor1 = base.Columns["farCor1"];
                this.columnfarCor2 = base.Columns["farCor2"];
                this.columnnearCor1 = base.Columns["nearCor1"];
                this.columnnearCor2 = base.Columns["nearCor2"];
                this.columnfarUn1 = base.Columns["farUn1"];
                this.columnfarUn2 = base.Columns["farUn2"];
                this.columnnearUn1 = base.Columns["nearUn1"];
                this.columnnearUn2 = base.Columns["nearUn2"];
                this.columnishihara = base.Columns["ishihara"];
                this.columnearRight = base.Columns["earRight"];
                this.columnearLeft = base.Columns["earLeft"];
                this.columnspeech = base.Columns["speech"];
                this.columnskin = base.Columns["skin"];
                this.columnhead = base.Columns["head"];
                this.columneyes = base.Columns["eyes"];
                this.columnpupil = base.Columns["pupil"];
                this.columnears = base.Columns["ears"];
                this.columnnose = base.Columns["nose"];
                this.columnmouth = base.Columns["mouth"];
                this.columnlymph = base.Columns["lymph"];
                this.columnchestBreast = base.Columns["chestBreast"];
                this.columnlungs = base.Columns["lungs"];
                this.columnheart = base.Columns["heart"];
                this.columnabdomen = base.Columns["abdomen"];
                this.columnback = base.Columns["back"];
                this.columnanus = base.Columns["anus"];
                this.columngenito = base.Columns["genito"];
                this.columninguinals = base.Columns["inguinals"];
                this.columnextremities = base.Columns["extremities"];
                this.columnreflexes = base.Columns["reflexes"];
                this.columndental = base.Columns["dental"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnmed1 = new global::System.Data.DataColumn("med1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed1);
                this.columnmed2 = new global::System.Data.DataColumn("med2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed2);
                this.columncomment1 = new global::System.Data.DataColumn("comment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomment1);
                this.columncomment2 = new global::System.Data.DataColumn("comment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomment2);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnsystolic = new global::System.Data.DataColumn("systolic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsystolic);
                this.columndiastolic = new global::System.Data.DataColumn("diastolic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiastolic);
                this.columnpulseRate = new global::System.Data.DataColumn("pulseRate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpulseRate);
                this.columnrhythm = new global::System.Data.DataColumn("rhythm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrhythm);
                this.columnrespiration = new global::System.Data.DataColumn("respiration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespiration);
                this.columnbmi = new global::System.Data.DataColumn("bmi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbmi);
                this.columnfarCor1 = new global::System.Data.DataColumn("farCor1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfarCor1);
                this.columnfarCor2 = new global::System.Data.DataColumn("farCor2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfarCor2);
                this.columnnearCor1 = new global::System.Data.DataColumn("nearCor1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnearCor1);
                this.columnnearCor2 = new global::System.Data.DataColumn("nearCor2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnearCor2);
                this.columnfarUn1 = new global::System.Data.DataColumn("farUn1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfarUn1);
                this.columnfarUn2 = new global::System.Data.DataColumn("farUn2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfarUn2);
                this.columnnearUn1 = new global::System.Data.DataColumn("nearUn1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnearUn1);
                this.columnnearUn2 = new global::System.Data.DataColumn("nearUn2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnearUn2);
                this.columnishihara = new global::System.Data.DataColumn("ishihara", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnishihara);
                this.columnearRight = new global::System.Data.DataColumn("earRight", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnearRight);
                this.columnearLeft = new global::System.Data.DataColumn("earLeft", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnearLeft);
                this.columnspeech = new global::System.Data.DataColumn("speech", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspeech);
                this.columnskin = new global::System.Data.DataColumn("skin", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnskin);
                this.columnhead = new global::System.Data.DataColumn("head", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhead);
                this.columneyes = new global::System.Data.DataColumn("eyes", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneyes);
                this.columnpupil = new global::System.Data.DataColumn("pupil", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpupil);
                this.columnears = new global::System.Data.DataColumn("ears", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnears);
                this.columnnose = new global::System.Data.DataColumn("nose", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnose);
                this.columnmouth = new global::System.Data.DataColumn("mouth", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmouth);
                this.columnlymph = new global::System.Data.DataColumn("lymph", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlymph);
                this.columnchestBreast = new global::System.Data.DataColumn("chestBreast", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchestBreast);
                this.columnlungs = new global::System.Data.DataColumn("lungs", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlungs);
                this.columnheart = new global::System.Data.DataColumn("heart", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheart);
                this.columnabdomen = new global::System.Data.DataColumn("abdomen", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabdomen);
                this.columnback = new global::System.Data.DataColumn("back", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnback);
                this.columnanus = new global::System.Data.DataColumn("anus", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanus);
                this.columngenito = new global::System.Data.DataColumn("genito", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngenito);
                this.columninguinals = new global::System.Data.DataColumn("inguinals", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninguinals);
                this.columnextremities = new global::System.Data.DataColumn("extremities", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnextremities);
                this.columnreflexes = new global::System.Data.DataColumn("reflexes", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreflexes);
                this.columndental = new global::System.Data.DataColumn("dental", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndental);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnmed1.AllowDBNull = false;
                this.columnmed2.AllowDBNull = false;
                this.columncomment1.AllowDBNull = false;
                this.columncomment1.MaxLength = 100;
                this.columncomment2.AllowDBNull = false;
                this.columncomment2.MaxLength = 100;
                this.columnheight.AllowDBNull = false;
                this.columnweight.AllowDBNull = false;
                this.columnsystolic.AllowDBNull = false;
                this.columndiastolic.AllowDBNull = false;
                this.columnpulseRate.AllowDBNull = false;
                this.columnrhythm.AllowDBNull = false;
                this.columnrespiration.AllowDBNull = false;
                this.columnbmi.AllowDBNull = false;
                this.columnfarCor1.AllowDBNull = false;
                this.columnfarCor2.AllowDBNull = false;
                this.columnnearCor1.AllowDBNull = false;
                this.columnnearCor2.AllowDBNull = false;
                this.columnfarUn1.AllowDBNull = false;
                this.columnfarUn2.AllowDBNull = false;
                this.columnnearUn1.AllowDBNull = false;
                this.columnnearUn2.AllowDBNull = false;
                this.columnishihara.AllowDBNull = false;
                this.columnearRight.AllowDBNull = false;
                this.columnearLeft.AllowDBNull = false;
                this.columnspeech.AllowDBNull = false;
                this.columnskin.AllowDBNull = false;
                this.columnhead.AllowDBNull = false;
                this.columneyes.AllowDBNull = false;
                this.columnpupil.AllowDBNull = false;
                this.columnears.AllowDBNull = false;
                this.columnnose.AllowDBNull = false;
                this.columnmouth.AllowDBNull = false;
                this.columnlymph.AllowDBNull = false;
                this.columnchestBreast.AllowDBNull = false;
                this.columnlungs.AllowDBNull = false;
                this.columnheart.AllowDBNull = false;
                this.columnabdomen.AllowDBNull = false;
                this.columnback.AllowDBNull = false;
                this.columnanus.AllowDBNull = false;
                this.columngenito.AllowDBNull = false;
                this.columninguinals.AllowDBNull = false;
                this.columnextremities.AllowDBNull = false;
                this.columnreflexes.AllowDBNull = false;
                this.columndental.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow NewhistoryRow() {
                return ((historyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new historyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(historyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.historyRowChanged != null)) {
                    this.historyRowChanged(this, new historyRowChangeEvent(((historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.historyRowChanging != null)) {
                    this.historyRowChanging(this, new historyRowChangeEvent(((historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.historyRowDeleted != null)) {
                    this.historyRowDeleted(this, new historyRowChangeEvent(((historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.historyRowDeleting != null)) {
                    this.historyRowDeleting(this, new historyRowChangeEvent(((historyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovehistoryRow(historyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "historyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ofwDataTable : global::System.Data.TypedTableBase<ofwRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnlastName;
            
            private global::System.Data.DataColumn columngivenName;
            
            private global::System.Data.DataColumn columnmiddleName;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnbirthDate;
            
            private global::System.Data.DataColumn columnbirthPlace;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columncivilStatus;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnpassportNum;
            
            private global::System.Data.DataColumn columnseamanBookNum;
            
            private global::System.Data.DataColumn columndestination;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnemployer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwDataTable() {
                this.TableName = "ofw";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ofwDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ofwDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lastNameColumn {
                get {
                    return this.columnlastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn givenNameColumn {
                get {
                    return this.columngivenName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn middleNameColumn {
                get {
                    return this.columnmiddleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn birthDateColumn {
                get {
                    return this.columnbirthDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn birthPlaceColumn {
                get {
                    return this.columnbirthPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn civilStatusColumn {
                get {
                    return this.columncivilStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn passportNumColumn {
                get {
                    return this.columnpassportNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn seamanBookNumColumn {
                get {
                    return this.columnseamanBookNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn destinationColumn {
                get {
                    return this.columndestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employerColumn {
                get {
                    return this.columnemployer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow this[int index] {
                get {
                    return ((ofwRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ofwRowChangeEventHandler ofwRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ofwRowChangeEventHandler ofwRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ofwRowChangeEventHandler ofwRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ofwRowChangeEventHandler ofwRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddofwRow(ofwRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow AddofwRow(
                        int id, 
                        string lastName, 
                        string givenName, 
                        string middleName, 
                        int age, 
                        System.DateTime birthDate, 
                        string birthPlace, 
                        byte[] gender, 
                        byte[] civilStatus, 
                        string religion, 
                        string address, 
                        string contact, 
                        int passportNum, 
                        string seamanBookNum, 
                        string destination, 
                        string position, 
                        string employer) {
                ofwRow rowofwRow = ((ofwRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        lastName,
                        givenName,
                        middleName,
                        age,
                        birthDate,
                        birthPlace,
                        gender,
                        civilStatus,
                        religion,
                        address,
                        contact,
                        passportNum,
                        seamanBookNum,
                        destination,
                        position,
                        employer};
                rowofwRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowofwRow);
                return rowofwRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow FindByid(int id) {
                return ((ofwRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ofwDataTable cln = ((ofwDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ofwDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnlastName = base.Columns["lastName"];
                this.columngivenName = base.Columns["givenName"];
                this.columnmiddleName = base.Columns["middleName"];
                this.columnage = base.Columns["age"];
                this.columnbirthDate = base.Columns["birthDate"];
                this.columnbirthPlace = base.Columns["birthPlace"];
                this.columngender = base.Columns["gender"];
                this.columncivilStatus = base.Columns["civilStatus"];
                this.columnreligion = base.Columns["religion"];
                this.columnaddress = base.Columns["address"];
                this.columncontact = base.Columns["contact"];
                this.columnpassportNum = base.Columns["passportNum"];
                this.columnseamanBookNum = base.Columns["seamanBookNum"];
                this.columndestination = base.Columns["destination"];
                this.columnposition = base.Columns["position"];
                this.columnemployer = base.Columns["employer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnlastName = new global::System.Data.DataColumn("lastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastName);
                this.columngivenName = new global::System.Data.DataColumn("givenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngivenName);
                this.columnmiddleName = new global::System.Data.DataColumn("middleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddleName);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnbirthDate = new global::System.Data.DataColumn("birthDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthDate);
                this.columnbirthPlace = new global::System.Data.DataColumn("birthPlace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthPlace);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columncivilStatus = new global::System.Data.DataColumn("civilStatus", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncivilStatus);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnpassportNum = new global::System.Data.DataColumn("passportNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassportNum);
                this.columnseamanBookNum = new global::System.Data.DataColumn("seamanBookNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseamanBookNum);
                this.columndestination = new global::System.Data.DataColumn("destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndestination);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnemployer = new global::System.Data.DataColumn("employer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnlastName.AllowDBNull = false;
                this.columnlastName.MaxLength = 100;
                this.columngivenName.AllowDBNull = false;
                this.columngivenName.MaxLength = 100;
                this.columnmiddleName.AllowDBNull = false;
                this.columnmiddleName.MaxLength = 100;
                this.columnage.AllowDBNull = false;
                this.columnbirthDate.AllowDBNull = false;
                this.columnbirthPlace.AllowDBNull = false;
                this.columnbirthPlace.MaxLength = 100;
                this.columngender.AllowDBNull = false;
                this.columncivilStatus.AllowDBNull = false;
                this.columnreligion.AllowDBNull = false;
                this.columnreligion.MaxLength = 100;
                this.columnaddress.AllowDBNull = false;
                this.columnaddress.MaxLength = 100;
                this.columncontact.AllowDBNull = false;
                this.columncontact.MaxLength = 100;
                this.columnpassportNum.AllowDBNull = false;
                this.columnseamanBookNum.AllowDBNull = false;
                this.columnseamanBookNum.MaxLength = 100;
                this.columndestination.AllowDBNull = false;
                this.columndestination.MaxLength = 100;
                this.columnposition.AllowDBNull = false;
                this.columnposition.MaxLength = 100;
                this.columnemployer.AllowDBNull = false;
                this.columnemployer.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow NewofwRow() {
                return ((ofwRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ofwRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ofwRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ofwRowChanged != null)) {
                    this.ofwRowChanged(this, new ofwRowChangeEvent(((ofwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ofwRowChanging != null)) {
                    this.ofwRowChanging(this, new ofwRowChangeEvent(((ofwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ofwRowDeleted != null)) {
                    this.ofwRowDeleted(this, new ofwRowChangeEvent(((ofwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ofwRowDeleting != null)) {
                    this.ofwRowDeleting(this, new ofwRowChangeEvent(((ofwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveofwRow(ofwRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ofwDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SerologyDataTable : global::System.Data.TypedTableBase<SerologyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnpregnancySerum;
            
            private global::System.Data.DataColumn columnlastenstrualPeriod;
            
            private global::System.Data.DataColumn columnlastSexualContact;
            
            private global::System.Data.DataColumn columnbloodType;
            
            private global::System.Data.DataColumn columnalphaFetoProtein;
            
            private global::System.Data.DataColumn columncancerAntigen;
            
            private global::System.Data.DataColumn columncarcinoEmbryonicAntigen;
            
            private global::System.Data.DataColumn columntsh;
            
            private global::System.Data.DataColumn columnHBsAgPC;
            
            private global::System.Data.DataColumn columnHBsAgCV;
            
            private global::System.Data.DataColumn columnAntiHBsPC;
            
            private global::System.Data.DataColumn columnAntiHBsCV;
            
            private global::System.Data.DataColumn columnHBeAgPC;
            
            private global::System.Data.DataColumn columnHBeAgCV;
            
            private global::System.Data.DataColumn columnAntiHbePC;
            
            private global::System.Data.DataColumn columnAntiHbeCV;
            
            private global::System.Data.DataColumn columnAntiHBclgMPC;
            
            private global::System.Data.DataColumn columnAntiHBclgMCV;
            
            private global::System.Data.DataColumn columnAntiHBclgGPC;
            
            private global::System.Data.DataColumn columnAntiHBclgGCV;
            
            private global::System.Data.DataColumn columnhepatitisB;
            
            private global::System.Data.DataColumn columnhiv12;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyDataTable() {
                this.TableName = "Serology";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerologyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SerologyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pregnancySerumColumn {
                get {
                    return this.columnpregnancySerum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lastenstrualPeriodColumn {
                get {
                    return this.columnlastenstrualPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lastSexualContactColumn {
                get {
                    return this.columnlastSexualContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bloodTypeColumn {
                get {
                    return this.columnbloodType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn alphaFetoProteinColumn {
                get {
                    return this.columnalphaFetoProtein;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cancerAntigenColumn {
                get {
                    return this.columncancerAntigen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn carcinoEmbryonicAntigenColumn {
                get {
                    return this.columncarcinoEmbryonicAntigen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tshColumn {
                get {
                    return this.columntsh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HBsAgPCColumn {
                get {
                    return this.columnHBsAgPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HBsAgCVColumn {
                get {
                    return this.columnHBsAgCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBsPCColumn {
                get {
                    return this.columnAntiHBsPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBsCVColumn {
                get {
                    return this.columnAntiHBsCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HBeAgPCColumn {
                get {
                    return this.columnHBeAgPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HBeAgCVColumn {
                get {
                    return this.columnHBeAgCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHbePCColumn {
                get {
                    return this.columnAntiHbePC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHbeCVColumn {
                get {
                    return this.columnAntiHbeCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBclgMPCColumn {
                get {
                    return this.columnAntiHBclgMPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBclgMCVColumn {
                get {
                    return this.columnAntiHBclgMCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBclgGPCColumn {
                get {
                    return this.columnAntiHBclgGPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AntiHBclgGCVColumn {
                get {
                    return this.columnAntiHBclgGCV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hepatitisBColumn {
                get {
                    return this.columnhepatitisB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hiv12Column {
                get {
                    return this.columnhiv12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow this[int index] {
                get {
                    return ((SerologyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerologyRowChangeEventHandler SerologyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerologyRowChangeEventHandler SerologyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerologyRowChangeEventHandler SerologyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerologyRowChangeEventHandler SerologyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSerologyRow(SerologyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow AddSerologyRow(
                        int id, 
                        byte[] pregnancySerum, 
                        System.DateTime lastenstrualPeriod, 
                        System.DateTime lastSexualContact, 
                        string bloodType, 
                        float alphaFetoProtein, 
                        float cancerAntigen, 
                        float carcinoEmbryonicAntigen, 
                        float tsh, 
                        float HBsAgPC, 
                        float HBsAgCV, 
                        float AntiHBsPC, 
                        float AntiHBsCV, 
                        float HBeAgPC, 
                        float HBeAgCV, 
                        float AntiHbePC, 
                        float AntiHbeCV, 
                        float AntiHBclgMPC, 
                        float AntiHBclgMCV, 
                        float AntiHBclgGPC, 
                        float AntiHBclgGCV, 
                        byte[] hepatitisB, 
                        byte[] hiv12, 
                        ofwRow parentofwRowBySerology_ofw) {
                SerologyRow rowSerologyRow = ((SerologyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        pregnancySerum,
                        lastenstrualPeriod,
                        lastSexualContact,
                        bloodType,
                        alphaFetoProtein,
                        cancerAntigen,
                        carcinoEmbryonicAntigen,
                        tsh,
                        HBsAgPC,
                        HBsAgCV,
                        AntiHBsPC,
                        AntiHBsCV,
                        HBeAgPC,
                        HBeAgCV,
                        AntiHbePC,
                        AntiHbeCV,
                        AntiHBclgMPC,
                        AntiHBclgMCV,
                        AntiHBclgGPC,
                        AntiHBclgGCV,
                        hepatitisB,
                        hiv12,
                        null};
                if ((parentofwRowBySerology_ofw != null)) {
                    columnValuesArray[23] = parentofwRowBySerology_ofw[0];
                }
                rowSerologyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSerologyRow);
                return rowSerologyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow FindByid(int id) {
                return ((SerologyRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SerologyDataTable cln = ((SerologyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SerologyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnpregnancySerum = base.Columns["pregnancySerum"];
                this.columnlastenstrualPeriod = base.Columns["lastenstrualPeriod"];
                this.columnlastSexualContact = base.Columns["lastSexualContact"];
                this.columnbloodType = base.Columns["bloodType"];
                this.columnalphaFetoProtein = base.Columns["alphaFetoProtein"];
                this.columncancerAntigen = base.Columns["cancerAntigen"];
                this.columncarcinoEmbryonicAntigen = base.Columns["carcinoEmbryonicAntigen"];
                this.columntsh = base.Columns["tsh"];
                this.columnHBsAgPC = base.Columns["HBsAgPC"];
                this.columnHBsAgCV = base.Columns["HBsAgCV"];
                this.columnAntiHBsPC = base.Columns["AntiHBsPC"];
                this.columnAntiHBsCV = base.Columns["AntiHBsCV"];
                this.columnHBeAgPC = base.Columns["HBeAgPC"];
                this.columnHBeAgCV = base.Columns["HBeAgCV"];
                this.columnAntiHbePC = base.Columns["AntiHbePC"];
                this.columnAntiHbeCV = base.Columns["AntiHbeCV"];
                this.columnAntiHBclgMPC = base.Columns["AntiHBclgMPC"];
                this.columnAntiHBclgMCV = base.Columns["AntiHBclgMCV"];
                this.columnAntiHBclgGPC = base.Columns["AntiHBclgGPC"];
                this.columnAntiHBclgGCV = base.Columns["AntiHBclgGCV"];
                this.columnhepatitisB = base.Columns["hepatitisB"];
                this.columnhiv12 = base.Columns["hiv12"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnpregnancySerum = new global::System.Data.DataColumn("pregnancySerum", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpregnancySerum);
                this.columnlastenstrualPeriod = new global::System.Data.DataColumn("lastenstrualPeriod", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastenstrualPeriod);
                this.columnlastSexualContact = new global::System.Data.DataColumn("lastSexualContact", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastSexualContact);
                this.columnbloodType = new global::System.Data.DataColumn("bloodType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodType);
                this.columnalphaFetoProtein = new global::System.Data.DataColumn("alphaFetoProtein", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalphaFetoProtein);
                this.columncancerAntigen = new global::System.Data.DataColumn("cancerAntigen", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncancerAntigen);
                this.columncarcinoEmbryonicAntigen = new global::System.Data.DataColumn("carcinoEmbryonicAntigen", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncarcinoEmbryonicAntigen);
                this.columntsh = new global::System.Data.DataColumn("tsh", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntsh);
                this.columnHBsAgPC = new global::System.Data.DataColumn("HBsAgPC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHBsAgPC);
                this.columnHBsAgCV = new global::System.Data.DataColumn("HBsAgCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHBsAgCV);
                this.columnAntiHBsPC = new global::System.Data.DataColumn("AntiHBsPC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBsPC);
                this.columnAntiHBsCV = new global::System.Data.DataColumn("AntiHBsCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBsCV);
                this.columnHBeAgPC = new global::System.Data.DataColumn("HBeAgPC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHBeAgPC);
                this.columnHBeAgCV = new global::System.Data.DataColumn("HBeAgCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHBeAgCV);
                this.columnAntiHbePC = new global::System.Data.DataColumn("AntiHbePC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHbePC);
                this.columnAntiHbeCV = new global::System.Data.DataColumn("AntiHbeCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHbeCV);
                this.columnAntiHBclgMPC = new global::System.Data.DataColumn("AntiHBclgMPC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBclgMPC);
                this.columnAntiHBclgMCV = new global::System.Data.DataColumn("AntiHBclgMCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBclgMCV);
                this.columnAntiHBclgGPC = new global::System.Data.DataColumn("AntiHBclgGPC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBclgGPC);
                this.columnAntiHBclgGCV = new global::System.Data.DataColumn("AntiHBclgGCV", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntiHBclgGCV);
                this.columnhepatitisB = new global::System.Data.DataColumn("hepatitisB", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhepatitisB);
                this.columnhiv12 = new global::System.Data.DataColumn("hiv12", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhiv12);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnpregnancySerum.AllowDBNull = false;
                this.columnlastenstrualPeriod.AllowDBNull = false;
                this.columnlastSexualContact.AllowDBNull = false;
                this.columnbloodType.AllowDBNull = false;
                this.columnbloodType.MaxLength = 2;
                this.columnalphaFetoProtein.AllowDBNull = false;
                this.columncancerAntigen.AllowDBNull = false;
                this.columncarcinoEmbryonicAntigen.AllowDBNull = false;
                this.columntsh.AllowDBNull = false;
                this.columnHBsAgPC.AllowDBNull = false;
                this.columnHBsAgCV.AllowDBNull = false;
                this.columnAntiHBsPC.AllowDBNull = false;
                this.columnAntiHBsCV.AllowDBNull = false;
                this.columnHBeAgPC.AllowDBNull = false;
                this.columnHBeAgCV.AllowDBNull = false;
                this.columnAntiHbePC.AllowDBNull = false;
                this.columnAntiHbeCV.AllowDBNull = false;
                this.columnAntiHBclgMPC.AllowDBNull = false;
                this.columnAntiHBclgMCV.AllowDBNull = false;
                this.columnAntiHBclgGPC.AllowDBNull = false;
                this.columnAntiHBclgGCV.AllowDBNull = false;
                this.columnhepatitisB.AllowDBNull = false;
                this.columnhiv12.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow NewSerologyRow() {
                return ((SerologyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SerologyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SerologyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SerologyRowChanged != null)) {
                    this.SerologyRowChanged(this, new SerologyRowChangeEvent(((SerologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SerologyRowChanging != null)) {
                    this.SerologyRowChanging(this, new SerologyRowChangeEvent(((SerologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SerologyRowDeleted != null)) {
                    this.SerologyRowDeleted(this, new SerologyRowChangeEvent(((SerologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SerologyRowDeleting != null)) {
                    this.SerologyRowDeleting(this, new SerologyRowChangeEvent(((SerologyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSerologyRow(SerologyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SerologyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Stool_ExaminationDataTable : global::System.Data.TypedTableBase<Stool_ExaminationRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnconsistency;
            
            private global::System.Data.DataColumn columnpus;
            
            private global::System.Data.DataColumn columnrbc;
            
            private global::System.Data.DataColumn columnothers;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationDataTable() {
                this.TableName = "Stool_Examination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Stool_ExaminationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Stool_ExaminationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn consistencyColumn {
                get {
                    return this.columnconsistency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pusColumn {
                get {
                    return this.columnpus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rbcColumn {
                get {
                    return this.columnrbc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn othersColumn {
                get {
                    return this.columnothers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow this[int index] {
                get {
                    return ((Stool_ExaminationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Stool_ExaminationRowChangeEventHandler Stool_ExaminationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Stool_ExaminationRowChangeEventHandler Stool_ExaminationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Stool_ExaminationRowChangeEventHandler Stool_ExaminationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Stool_ExaminationRowChangeEventHandler Stool_ExaminationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStool_ExaminationRow(Stool_ExaminationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow AddStool_ExaminationRow(int id, string color, string consistency, string pus, string rbc, string others, ofwRow parentofwRowByStool_Examination_ofw) {
                Stool_ExaminationRow rowStool_ExaminationRow = ((Stool_ExaminationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        color,
                        consistency,
                        pus,
                        rbc,
                        others,
                        null};
                if ((parentofwRowByStool_Examination_ofw != null)) {
                    columnValuesArray[6] = parentofwRowByStool_Examination_ofw[0];
                }
                rowStool_ExaminationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStool_ExaminationRow);
                return rowStool_ExaminationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow FindByid(int id) {
                return ((Stool_ExaminationRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Stool_ExaminationDataTable cln = ((Stool_ExaminationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Stool_ExaminationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncolor = base.Columns["color"];
                this.columnconsistency = base.Columns["consistency"];
                this.columnpus = base.Columns["pus"];
                this.columnrbc = base.Columns["rbc"];
                this.columnothers = base.Columns["others"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnconsistency = new global::System.Data.DataColumn("consistency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconsistency);
                this.columnpus = new global::System.Data.DataColumn("pus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpus);
                this.columnrbc = new global::System.Data.DataColumn("rbc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrbc);
                this.columnothers = new global::System.Data.DataColumn("others", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnothers);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columncolor.AllowDBNull = false;
                this.columncolor.MaxLength = 20;
                this.columnconsistency.AllowDBNull = false;
                this.columnconsistency.MaxLength = 10;
                this.columnpus.AllowDBNull = false;
                this.columnpus.MaxLength = 5;
                this.columnrbc.AllowDBNull = false;
                this.columnrbc.MaxLength = 5;
                this.columnothers.AllowDBNull = false;
                this.columnothers.MaxLength = 50;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow NewStool_ExaminationRow() {
                return ((Stool_ExaminationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Stool_ExaminationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Stool_ExaminationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Stool_ExaminationRowChanged != null)) {
                    this.Stool_ExaminationRowChanged(this, new Stool_ExaminationRowChangeEvent(((Stool_ExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Stool_ExaminationRowChanging != null)) {
                    this.Stool_ExaminationRowChanging(this, new Stool_ExaminationRowChangeEvent(((Stool_ExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Stool_ExaminationRowDeleted != null)) {
                    this.Stool_ExaminationRowDeleted(this, new Stool_ExaminationRowChangeEvent(((Stool_ExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Stool_ExaminationRowDeleting != null)) {
                    this.Stool_ExaminationRowDeleting(this, new Stool_ExaminationRowChangeEvent(((Stool_ExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStool_ExaminationRow(Stool_ExaminationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Stool_ExaminationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class summaryDataTable : global::System.Data.TypedTableBase<summaryRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnDOHmandatory;
            
            private global::System.Data.DataColumn columnadditional;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnremarks;
            
            private global::System.Data.DataColumn columndateExam;
            
            private global::System.Data.DataColumn columnexpiry;
            
            private global::System.Data.DataColumn columnreportNum;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryDataTable() {
                this.TableName = "summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal summaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected summaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOHmandatoryColumn {
                get {
                    return this.columnDOHmandatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn additionalColumn {
                get {
                    return this.columnadditional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn remarksColumn {
                get {
                    return this.columnremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dateExamColumn {
                get {
                    return this.columndateExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn expiryColumn {
                get {
                    return this.columnexpiry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn reportNumColumn {
                get {
                    return this.columnreportNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow this[int index] {
                get {
                    return ((summaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event summaryRowChangeEventHandler summaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event summaryRowChangeEventHandler summaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event summaryRowChangeEventHandler summaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event summaryRowChangeEventHandler summaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddsummaryRow(summaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow AddsummaryRow(int id, int DOHmandatory, int additional, int flag, int remarks, System.DateTime dateExam, System.DateTime expiry, int reportNum, ofwRow parentofwRowBysummary_ofw) {
                summaryRow rowsummaryRow = ((summaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        DOHmandatory,
                        additional,
                        flag,
                        remarks,
                        dateExam,
                        expiry,
                        reportNum,
                        null};
                if ((parentofwRowBysummary_ofw != null)) {
                    columnValuesArray[8] = parentofwRowBysummary_ofw[0];
                }
                rowsummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsummaryRow);
                return rowsummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow FindByid(int id) {
                return ((summaryRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                summaryDataTable cln = ((summaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new summaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnDOHmandatory = base.Columns["DOHmandatory"];
                this.columnadditional = base.Columns["additional"];
                this.columnflag = base.Columns["flag"];
                this.columnremarks = base.Columns["remarks"];
                this.columndateExam = base.Columns["dateExam"];
                this.columnexpiry = base.Columns["expiry"];
                this.columnreportNum = base.Columns["reportNum"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnDOHmandatory = new global::System.Data.DataColumn("DOHmandatory", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOHmandatory);
                this.columnadditional = new global::System.Data.DataColumn("additional", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadditional);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnremarks = new global::System.Data.DataColumn("remarks", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremarks);
                this.columndateExam = new global::System.Data.DataColumn("dateExam", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateExam);
                this.columnexpiry = new global::System.Data.DataColumn("expiry", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpiry);
                this.columnreportNum = new global::System.Data.DataColumn("reportNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportNum);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnDOHmandatory.AllowDBNull = false;
                this.columnadditional.AllowDBNull = false;
                this.columnflag.AllowDBNull = false;
                this.columnremarks.AllowDBNull = false;
                this.columndateExam.AllowDBNull = false;
                this.columnexpiry.AllowDBNull = false;
                this.columnreportNum.AllowDBNull = false;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow NewsummaryRow() {
                return ((summaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new summaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(summaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.summaryRowChanged != null)) {
                    this.summaryRowChanged(this, new summaryRowChangeEvent(((summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.summaryRowChanging != null)) {
                    this.summaryRowChanging(this, new summaryRowChangeEvent(((summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.summaryRowDeleted != null)) {
                    this.summaryRowDeleted(this, new summaryRowChangeEvent(((summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.summaryRowDeleting != null)) {
                    this.summaryRowDeleting(this, new summaryRowChangeEvent(((summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovesummaryRow(summaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "summaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class userAccDataTable : global::System.Data.TypedTableBase<userAccRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnuserpass;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnlicense;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columneSignatue;
            
            private global::System.Data.DataColumn columnofw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccDataTable() {
                this.TableName = "userAcc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal userAccDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected userAccDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn userpassColumn {
                get {
                    return this.columnuserpass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn licenseColumn {
                get {
                    return this.columnlicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn eSignatueColumn {
                get {
                    return this.columneSignatue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ofw_idColumn {
                get {
                    return this.columnofw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow this[int index] {
                get {
                    return ((userAccRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event userAccRowChangeEventHandler userAccRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event userAccRowChangeEventHandler userAccRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event userAccRowChangeEventHandler userAccRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event userAccRowChangeEventHandler userAccRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AdduserAccRow(userAccRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow AdduserAccRow(int id, string username, string userpass, string name, int license, string address, string eSignatue, ofwRow parentofwRowByuserAcc_ofw) {
                userAccRow rowuserAccRow = ((userAccRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        username,
                        userpass,
                        name,
                        license,
                        address,
                        eSignatue,
                        null};
                if ((parentofwRowByuserAcc_ofw != null)) {
                    columnValuesArray[7] = parentofwRowByuserAcc_ofw[0];
                }
                rowuserAccRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuserAccRow);
                return rowuserAccRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow FindByid(int id) {
                return ((userAccRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                userAccDataTable cln = ((userAccDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new userAccDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnusername = base.Columns["username"];
                this.columnuserpass = base.Columns["userpass"];
                this.columnname = base.Columns["name"];
                this.columnlicense = base.Columns["license"];
                this.columnaddress = base.Columns["address"];
                this.columneSignatue = base.Columns["eSignatue"];
                this.columnofw_id = base.Columns["ofw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnuserpass = new global::System.Data.DataColumn("userpass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserpass);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnlicense = new global::System.Data.DataColumn("license", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicense);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columneSignatue = new global::System.Data.DataColumn("eSignatue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneSignatue);
                this.columnofw_id = new global::System.Data.DataColumn("ofw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofw_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnusername.AllowDBNull = false;
                this.columnusername.MaxLength = 100;
                this.columnuserpass.AllowDBNull = false;
                this.columnuserpass.MaxLength = 100;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columnlicense.AllowDBNull = false;
                this.columnaddress.AllowDBNull = false;
                this.columnaddress.MaxLength = 100;
                this.columneSignatue.AllowDBNull = false;
                this.columneSignatue.MaxLength = 100;
                this.columnofw_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow NewuserAccRow() {
                return ((userAccRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new userAccRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(userAccRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.userAccRowChanged != null)) {
                    this.userAccRowChanged(this, new userAccRowChangeEvent(((userAccRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.userAccRowChanging != null)) {
                    this.userAccRowChanging(this, new userAccRowChangeEvent(((userAccRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.userAccRowDeleted != null)) {
                    this.userAccRowDeleted(this, new userAccRowChangeEvent(((userAccRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.userAccRowDeleting != null)) {
                    this.userAccRowDeleting(this, new userAccRowChangeEvent(((userAccRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveuserAccRow(userAccRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatabaseDataSet ds = new DatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "userAccDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ancillaryResultRow : global::System.Data.DataRow {
            
            private ancillaryResultDataTable tableancillaryResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ancillaryResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableancillaryResult = ((ancillaryResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableancillaryResult.idColumn]));
                }
                set {
                    this[this.tableancillaryResult.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] xray {
                get {
                    return ((byte[])(this[this.tableancillaryResult.xrayColumn]));
                }
                set {
                    this[this.tableancillaryResult.xrayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] ecg {
                get {
                    return ((byte[])(this[this.tableancillaryResult.ecgColumn]));
                }
                set {
                    this[this.tableancillaryResult.ecgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] cbc {
                get {
                    return ((byte[])(this[this.tableancillaryResult.cbcColumn]));
                }
                set {
                    this[this.tableancillaryResult.cbcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] urinalysis {
                get {
                    return ((byte[])(this[this.tableancillaryResult.urinalysisColumn]));
                }
                set {
                    this[this.tableancillaryResult.urinalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] stool {
                get {
                    return ((byte[])(this[this.tableancillaryResult.stoolColumn]));
                }
                set {
                    this[this.tableancillaryResult.stoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] hepaB {
                get {
                    return ((byte[])(this[this.tableancillaryResult.hepaBColumn]));
                }
                set {
                    this[this.tableancillaryResult.hepaBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] hiv {
                get {
                    return ((byte[])(this[this.tableancillaryResult.hivColumn]));
                }
                set {
                    this[this.tableancillaryResult.hivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] rpr {
                get {
                    return ((byte[])(this[this.tableancillaryResult.rprColumn]));
                }
                set {
                    this[this.tableancillaryResult.rprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bloodType {
                get {
                    return ((string)(this[this.tableancillaryResult.bloodTypeColumn]));
                }
                set {
                    this[this.tableancillaryResult.bloodTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] psychological {
                get {
                    return ((byte[])(this[this.tableancillaryResult.psychologicalColumn]));
                }
                set {
                    this[this.tableancillaryResult.psychologicalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string specialNeeds {
                get {
                    return ((string)(this[this.tableancillaryResult.specialNeedsColumn]));
                }
                set {
                    this[this.tableancillaryResult.specialNeedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableancillaryResult.ofw_idColumn]));
                }
                set {
                    this[this.tableancillaryResult.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["ancillaryResult_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ancillaryResult_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class assessmentRow : global::System.Data.DataRow {
            
            private assessmentDataTable tableassessment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal assessmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableassessment = ((assessmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableassessment.idColumn]));
                }
                set {
                    this[this.tableassessment.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] fit {
                get {
                    return ((byte[])(this[this.tableassessment.fitColumn]));
                }
                set {
                    this[this.tableassessment.fitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int deck {
                get {
                    return ((int)(this[this.tableassessment.deckColumn]));
                }
                set {
                    this[this.tableassessment.deckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int engine {
                get {
                    return ((int)(this[this.tableassessment.engineColumn]));
                }
                set {
                    this[this.tableassessment.engineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int catering {
                get {
                    return ((int)(this[this.tableassessment.cateringColumn]));
                }
                set {
                    this[this.tableassessment.cateringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int other {
                get {
                    return ((int)(this[this.tableassessment.otherColumn]));
                }
                set {
                    this[this.tableassessment.otherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int restriction {
                get {
                    return ((int)(this[this.tableassessment.restrictionColumn]));
                }
                set {
                    this[this.tableassessment.restrictionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int visualAids {
                get {
                    return ((int)(this[this.tableassessment.visualAidsColumn]));
                }
                set {
                    this[this.tableassessment.visualAidsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] restrctions {
                get {
                    return ((byte[])(this[this.tableassessment.restrctionsColumn]));
                }
                set {
                    this[this.tableassessment.restrctionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableassessment.ofw_idColumn]));
                }
                set {
                    this[this.tableassessment.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["assessment_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["assessment_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Blood_ChemistrtyRow : global::System.Data.DataRow {
            
            private Blood_ChemistrtyDataTable tableBlood_Chemistrty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Blood_ChemistrtyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBlood_Chemistrty = ((Blood_ChemistrtyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableBlood_Chemistrty.idColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float potassium {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.potassiumColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.potassiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float fbs {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.fbsColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.fbsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float bun {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.bunColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.bunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float creatinine {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.creatinineColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.creatinineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float totalCholesterol {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.totalCholesterolColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.totalCholesterolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float triglycerides {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.triglyceridesColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.triglyceridesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float hdl {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.hdlColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.hdlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float ldl {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.ldlColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.ldlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float vldl {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.vldlColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.vldlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float uricAcid {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.uricAcidColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.uricAcidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float sgotAst {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.sgotAstColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.sgotAstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float sgptAlt {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.sgptAltColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.sgptAltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float hemoglobinA1C {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.hemoglobinA1CColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.hemoglobinA1CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float albumin {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.albuminColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.albuminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float globulin {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.globulinColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.globulinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AGRatio {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.AGRatioColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.AGRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float alp {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.alpColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.alpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float IndirectBilirubin {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.IndirectBilirubinColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.IndirectBilirubinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float DirectBilirubin {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.DirectBilirubinColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.DirectBilirubinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float TotalBilirubin {
                get {
                    return ((float)(this[this.tableBlood_Chemistrty.TotalBilirubinColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.TotalBilirubinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableBlood_Chemistrty.ofw_idColumn]));
                }
                set {
                    this[this.tableBlood_Chemistrty.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["Blood_Chemistrty_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Blood_Chemistrty_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Clinic_MicroscopyRow : global::System.Data.DataRow {
            
            private Clinic_MicroscopyDataTable tableClinic_Microscopy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Clinic_MicroscopyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinic_Microscopy = ((Clinic_MicroscopyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableClinic_Microscopy.idColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MacroColor {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.MacroColorColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.MacroColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MacroTransparency {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.MacroTransparencyColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.MacroTransparencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Leukocyte {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.LeukocyteColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.LeukocyteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Nitrite {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.NitriteColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.NitriteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Urobilinogen {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.UrobilinogenColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.UrobilinogenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Protein {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.ProteinColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.ProteinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float PH {
                get {
                    return ((float)(this[this.tableClinic_Microscopy.PHColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Blood {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.BloodColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.BloodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float SpecificGravity {
                get {
                    return ((float)(this[this.tableClinic_Microscopy.SpecificGravityColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.SpecificGravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Ketone {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.KetoneColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.KetoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Bilirubin {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.BilirubinColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.BilirubinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Glucose {
                get {
                    return ((byte[])(this[this.tableClinic_Microscopy.GlucoseColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.GlucoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MicroEpithelial {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.MicroEpithelialColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.MicroEpithelialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MucousThreads {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.MucousThreadsColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.MucousThreadsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AmorphousMaterial {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.AmorphousMaterialColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.AmorphousMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PusCells {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.PusCellsColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.PusCellsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string rbc {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.rbcColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.rbcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bacteria {
                get {
                    return ((string)(this[this.tableClinic_Microscopy.bacteriaColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.bacteriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableClinic_Microscopy.ofw_idColumn]));
                }
                set {
                    this[this.tableClinic_Microscopy.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["Clinic_Microscopy_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Clinic_Microscopy_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HematologyRow : global::System.Data.DataRow {
            
            private HematologyDataTable tableHematology;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HematologyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHematology = ((HematologyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableHematology.idColumn]));
                }
                set {
                    this[this.tableHematology.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float wbc {
                get {
                    return ((float)(this[this.tableHematology.wbcColumn]));
                }
                set {
                    this[this.tableHematology.wbcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float rbc {
                get {
                    return ((float)(this[this.tableHematology.rbcColumn]));
                }
                set {
                    this[this.tableHematology.rbcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float hgb {
                get {
                    return ((float)(this[this.tableHematology.hgbColumn]));
                }
                set {
                    this[this.tableHematology.hgbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float hct {
                get {
                    return ((float)(this[this.tableHematology.hctColumn]));
                }
                set {
                    this[this.tableHematology.hctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int platelets {
                get {
                    return ((int)(this[this.tableHematology.plateletsColumn]));
                }
                set {
                    this[this.tableHematology.plateletsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float neutrophil {
                get {
                    return ((float)(this[this.tableHematology.neutrophilColumn]));
                }
                set {
                    this[this.tableHematology.neutrophilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float lymphocytes {
                get {
                    return ((float)(this[this.tableHematology.lymphocytesColumn]));
                }
                set {
                    this[this.tableHematology.lymphocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float monocyte {
                get {
                    return ((float)(this[this.tableHematology.monocyteColumn]));
                }
                set {
                    this[this.tableHematology.monocyteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableHematology.ofw_idColumn]));
                }
                set {
                    this[this.tableHematology.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["Hematology_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Hematology_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class historyRow : global::System.Data.DataRow {
            
            private historyDataTable tablehistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal historyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehistory = ((historyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablehistory.idColumn]));
                }
                set {
                    this[this.tablehistory.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] med1 {
                get {
                    return ((byte[])(this[this.tablehistory.med1Column]));
                }
                set {
                    this[this.tablehistory.med1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] med2 {
                get {
                    return ((byte[])(this[this.tablehistory.med2Column]));
                }
                set {
                    this[this.tablehistory.med2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string comment1 {
                get {
                    return ((string)(this[this.tablehistory.comment1Column]));
                }
                set {
                    this[this.tablehistory.comment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string comment2 {
                get {
                    return ((string)(this[this.tablehistory.comment2Column]));
                }
                set {
                    this[this.tablehistory.comment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int height {
                get {
                    return ((int)(this[this.tablehistory.heightColumn]));
                }
                set {
                    this[this.tablehistory.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int weight {
                get {
                    return ((int)(this[this.tablehistory.weightColumn]));
                }
                set {
                    this[this.tablehistory.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int systolic {
                get {
                    return ((int)(this[this.tablehistory.systolicColumn]));
                }
                set {
                    this[this.tablehistory.systolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int diastolic {
                get {
                    return ((int)(this[this.tablehistory.diastolicColumn]));
                }
                set {
                    this[this.tablehistory.diastolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int pulseRate {
                get {
                    return ((int)(this[this.tablehistory.pulseRateColumn]));
                }
                set {
                    this[this.tablehistory.pulseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int rhythm {
                get {
                    return ((int)(this[this.tablehistory.rhythmColumn]));
                }
                set {
                    this[this.tablehistory.rhythmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int respiration {
                get {
                    return ((int)(this[this.tablehistory.respirationColumn]));
                }
                set {
                    this[this.tablehistory.respirationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int bmi {
                get {
                    return ((int)(this[this.tablehistory.bmiColumn]));
                }
                set {
                    this[this.tablehistory.bmiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int farCor1 {
                get {
                    return ((int)(this[this.tablehistory.farCor1Column]));
                }
                set {
                    this[this.tablehistory.farCor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int farCor2 {
                get {
                    return ((int)(this[this.tablehistory.farCor2Column]));
                }
                set {
                    this[this.tablehistory.farCor2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nearCor1 {
                get {
                    return ((int)(this[this.tablehistory.nearCor1Column]));
                }
                set {
                    this[this.tablehistory.nearCor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nearCor2 {
                get {
                    return ((int)(this[this.tablehistory.nearCor2Column]));
                }
                set {
                    this[this.tablehistory.nearCor2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int farUn1 {
                get {
                    return ((int)(this[this.tablehistory.farUn1Column]));
                }
                set {
                    this[this.tablehistory.farUn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int farUn2 {
                get {
                    return ((int)(this[this.tablehistory.farUn2Column]));
                }
                set {
                    this[this.tablehistory.farUn2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nearUn1 {
                get {
                    return ((int)(this[this.tablehistory.nearUn1Column]));
                }
                set {
                    this[this.tablehistory.nearUn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nearUn2 {
                get {
                    return ((int)(this[this.tablehistory.nearUn2Column]));
                }
                set {
                    this[this.tablehistory.nearUn2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] ishihara {
                get {
                    return ((byte[])(this[this.tablehistory.ishiharaColumn]));
                }
                set {
                    this[this.tablehistory.ishiharaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] earRight {
                get {
                    return ((byte[])(this[this.tablehistory.earRightColumn]));
                }
                set {
                    this[this.tablehistory.earRightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] earLeft {
                get {
                    return ((byte[])(this[this.tablehistory.earLeftColumn]));
                }
                set {
                    this[this.tablehistory.earLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] speech {
                get {
                    return ((byte[])(this[this.tablehistory.speechColumn]));
                }
                set {
                    this[this.tablehistory.speechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] skin {
                get {
                    return ((byte[])(this[this.tablehistory.skinColumn]));
                }
                set {
                    this[this.tablehistory.skinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] head {
                get {
                    return ((byte[])(this[this.tablehistory.headColumn]));
                }
                set {
                    this[this.tablehistory.headColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] eyes {
                get {
                    return ((byte[])(this[this.tablehistory.eyesColumn]));
                }
                set {
                    this[this.tablehistory.eyesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] pupil {
                get {
                    return ((byte[])(this[this.tablehistory.pupilColumn]));
                }
                set {
                    this[this.tablehistory.pupilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] ears {
                get {
                    return ((byte[])(this[this.tablehistory.earsColumn]));
                }
                set {
                    this[this.tablehistory.earsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] nose {
                get {
                    return ((byte[])(this[this.tablehistory.noseColumn]));
                }
                set {
                    this[this.tablehistory.noseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] mouth {
                get {
                    return ((byte[])(this[this.tablehistory.mouthColumn]));
                }
                set {
                    this[this.tablehistory.mouthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] lymph {
                get {
                    return ((byte[])(this[this.tablehistory.lymphColumn]));
                }
                set {
                    this[this.tablehistory.lymphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] chestBreast {
                get {
                    return ((byte[])(this[this.tablehistory.chestBreastColumn]));
                }
                set {
                    this[this.tablehistory.chestBreastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] lungs {
                get {
                    return ((byte[])(this[this.tablehistory.lungsColumn]));
                }
                set {
                    this[this.tablehistory.lungsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] heart {
                get {
                    return ((byte[])(this[this.tablehistory.heartColumn]));
                }
                set {
                    this[this.tablehistory.heartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] abdomen {
                get {
                    return ((byte[])(this[this.tablehistory.abdomenColumn]));
                }
                set {
                    this[this.tablehistory.abdomenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] back {
                get {
                    return ((byte[])(this[this.tablehistory.backColumn]));
                }
                set {
                    this[this.tablehistory.backColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] anus {
                get {
                    return ((byte[])(this[this.tablehistory.anusColumn]));
                }
                set {
                    this[this.tablehistory.anusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] genito {
                get {
                    return ((byte[])(this[this.tablehistory.genitoColumn]));
                }
                set {
                    this[this.tablehistory.genitoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] inguinals {
                get {
                    return ((byte[])(this[this.tablehistory.inguinalsColumn]));
                }
                set {
                    this[this.tablehistory.inguinalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] extremities {
                get {
                    return ((byte[])(this[this.tablehistory.extremitiesColumn]));
                }
                set {
                    this[this.tablehistory.extremitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] reflexes {
                get {
                    return ((byte[])(this[this.tablehistory.reflexesColumn]));
                }
                set {
                    this[this.tablehistory.reflexesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] dental {
                get {
                    return ((byte[])(this[this.tablehistory.dentalColumn]));
                }
                set {
                    this[this.tablehistory.dentalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tablehistory.ofw_idColumn]));
                }
                set {
                    this[this.tablehistory.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["history_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["history_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ofwRow : global::System.Data.DataRow {
            
            private ofwDataTable tableofw;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ofwRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableofw = ((ofwDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableofw.idColumn]));
                }
                set {
                    this[this.tableofw.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string lastName {
                get {
                    return ((string)(this[this.tableofw.lastNameColumn]));
                }
                set {
                    this[this.tableofw.lastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string givenName {
                get {
                    return ((string)(this[this.tableofw.givenNameColumn]));
                }
                set {
                    this[this.tableofw.givenNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string middleName {
                get {
                    return ((string)(this[this.tableofw.middleNameColumn]));
                }
                set {
                    this[this.tableofw.middleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int age {
                get {
                    return ((int)(this[this.tableofw.ageColumn]));
                }
                set {
                    this[this.tableofw.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime birthDate {
                get {
                    return ((global::System.DateTime)(this[this.tableofw.birthDateColumn]));
                }
                set {
                    this[this.tableofw.birthDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string birthPlace {
                get {
                    return ((string)(this[this.tableofw.birthPlaceColumn]));
                }
                set {
                    this[this.tableofw.birthPlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] gender {
                get {
                    return ((byte[])(this[this.tableofw.genderColumn]));
                }
                set {
                    this[this.tableofw.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] civilStatus {
                get {
                    return ((byte[])(this[this.tableofw.civilStatusColumn]));
                }
                set {
                    this[this.tableofw.civilStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string religion {
                get {
                    return ((string)(this[this.tableofw.religionColumn]));
                }
                set {
                    this[this.tableofw.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    return ((string)(this[this.tableofw.addressColumn]));
                }
                set {
                    this[this.tableofw.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string contact {
                get {
                    return ((string)(this[this.tableofw.contactColumn]));
                }
                set {
                    this[this.tableofw.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int passportNum {
                get {
                    return ((int)(this[this.tableofw.passportNumColumn]));
                }
                set {
                    this[this.tableofw.passportNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string seamanBookNum {
                get {
                    return ((string)(this[this.tableofw.seamanBookNumColumn]));
                }
                set {
                    this[this.tableofw.seamanBookNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string destination {
                get {
                    return ((string)(this[this.tableofw.destinationColumn]));
                }
                set {
                    this[this.tableofw.destinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string position {
                get {
                    return ((string)(this[this.tableofw.positionColumn]));
                }
                set {
                    this[this.tableofw.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string employer {
                get {
                    return ((string)(this[this.tableofw.employerColumn]));
                }
                set {
                    this[this.tableofw.employerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow[] GetancillaryResultRows() {
                if ((this.Table.ChildRelations["ancillaryResult_ofw"] == null)) {
                    return new ancillaryResultRow[0];
                }
                else {
                    return ((ancillaryResultRow[])(base.GetChildRows(this.Table.ChildRelations["ancillaryResult_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow[] GetassessmentRows() {
                if ((this.Table.ChildRelations["assessment_ofw"] == null)) {
                    return new assessmentRow[0];
                }
                else {
                    return ((assessmentRow[])(base.GetChildRows(this.Table.ChildRelations["assessment_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow[] GetBlood_ChemistrtyRows() {
                if ((this.Table.ChildRelations["Blood_Chemistrty_ofw"] == null)) {
                    return new Blood_ChemistrtyRow[0];
                }
                else {
                    return ((Blood_ChemistrtyRow[])(base.GetChildRows(this.Table.ChildRelations["Blood_Chemistrty_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow[] GetClinic_MicroscopyRows() {
                if ((this.Table.ChildRelations["Clinic_Microscopy_ofw"] == null)) {
                    return new Clinic_MicroscopyRow[0];
                }
                else {
                    return ((Clinic_MicroscopyRow[])(base.GetChildRows(this.Table.ChildRelations["Clinic_Microscopy_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow[] GetHematologyRows() {
                if ((this.Table.ChildRelations["Hematology_ofw"] == null)) {
                    return new HematologyRow[0];
                }
                else {
                    return ((HematologyRow[])(base.GetChildRows(this.Table.ChildRelations["Hematology_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow[] GethistoryRows() {
                if ((this.Table.ChildRelations["history_ofw"] == null)) {
                    return new historyRow[0];
                }
                else {
                    return ((historyRow[])(base.GetChildRows(this.Table.ChildRelations["history_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow[] GetSerologyRows() {
                if ((this.Table.ChildRelations["Serology_ofw"] == null)) {
                    return new SerologyRow[0];
                }
                else {
                    return ((SerologyRow[])(base.GetChildRows(this.Table.ChildRelations["Serology_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow[] GetStool_ExaminationRows() {
                if ((this.Table.ChildRelations["Stool_Examination_ofw"] == null)) {
                    return new Stool_ExaminationRow[0];
                }
                else {
                    return ((Stool_ExaminationRow[])(base.GetChildRows(this.Table.ChildRelations["Stool_Examination_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow[] GetsummaryRows() {
                if ((this.Table.ChildRelations["summary_ofw"] == null)) {
                    return new summaryRow[0];
                }
                else {
                    return ((summaryRow[])(base.GetChildRows(this.Table.ChildRelations["summary_ofw"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow[] GetuserAccRows() {
                if ((this.Table.ChildRelations["userAcc_ofw"] == null)) {
                    return new userAccRow[0];
                }
                else {
                    return ((userAccRow[])(base.GetChildRows(this.Table.ChildRelations["userAcc_ofw"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SerologyRow : global::System.Data.DataRow {
            
            private SerologyDataTable tableSerology;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerologyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSerology = ((SerologyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableSerology.idColumn]));
                }
                set {
                    this[this.tableSerology.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] pregnancySerum {
                get {
                    return ((byte[])(this[this.tableSerology.pregnancySerumColumn]));
                }
                set {
                    this[this.tableSerology.pregnancySerumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lastenstrualPeriod {
                get {
                    return ((global::System.DateTime)(this[this.tableSerology.lastenstrualPeriodColumn]));
                }
                set {
                    this[this.tableSerology.lastenstrualPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lastSexualContact {
                get {
                    return ((global::System.DateTime)(this[this.tableSerology.lastSexualContactColumn]));
                }
                set {
                    this[this.tableSerology.lastSexualContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string bloodType {
                get {
                    return ((string)(this[this.tableSerology.bloodTypeColumn]));
                }
                set {
                    this[this.tableSerology.bloodTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float alphaFetoProtein {
                get {
                    return ((float)(this[this.tableSerology.alphaFetoProteinColumn]));
                }
                set {
                    this[this.tableSerology.alphaFetoProteinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float cancerAntigen {
                get {
                    return ((float)(this[this.tableSerology.cancerAntigenColumn]));
                }
                set {
                    this[this.tableSerology.cancerAntigenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float carcinoEmbryonicAntigen {
                get {
                    return ((float)(this[this.tableSerology.carcinoEmbryonicAntigenColumn]));
                }
                set {
                    this[this.tableSerology.carcinoEmbryonicAntigenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float tsh {
                get {
                    return ((float)(this[this.tableSerology.tshColumn]));
                }
                set {
                    this[this.tableSerology.tshColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float HBsAgPC {
                get {
                    return ((float)(this[this.tableSerology.HBsAgPCColumn]));
                }
                set {
                    this[this.tableSerology.HBsAgPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float HBsAgCV {
                get {
                    return ((float)(this[this.tableSerology.HBsAgCVColumn]));
                }
                set {
                    this[this.tableSerology.HBsAgCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBsPC {
                get {
                    return ((float)(this[this.tableSerology.AntiHBsPCColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBsPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBsCV {
                get {
                    return ((float)(this[this.tableSerology.AntiHBsCVColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBsCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float HBeAgPC {
                get {
                    return ((float)(this[this.tableSerology.HBeAgPCColumn]));
                }
                set {
                    this[this.tableSerology.HBeAgPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float HBeAgCV {
                get {
                    return ((float)(this[this.tableSerology.HBeAgCVColumn]));
                }
                set {
                    this[this.tableSerology.HBeAgCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHbePC {
                get {
                    return ((float)(this[this.tableSerology.AntiHbePCColumn]));
                }
                set {
                    this[this.tableSerology.AntiHbePCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHbeCV {
                get {
                    return ((float)(this[this.tableSerology.AntiHbeCVColumn]));
                }
                set {
                    this[this.tableSerology.AntiHbeCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBclgMPC {
                get {
                    return ((float)(this[this.tableSerology.AntiHBclgMPCColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBclgMPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBclgMCV {
                get {
                    return ((float)(this[this.tableSerology.AntiHBclgMCVColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBclgMCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBclgGPC {
                get {
                    return ((float)(this[this.tableSerology.AntiHBclgGPCColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBclgGPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AntiHBclgGCV {
                get {
                    return ((float)(this[this.tableSerology.AntiHBclgGCVColumn]));
                }
                set {
                    this[this.tableSerology.AntiHBclgGCVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] hepatitisB {
                get {
                    return ((byte[])(this[this.tableSerology.hepatitisBColumn]));
                }
                set {
                    this[this.tableSerology.hepatitisBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] hiv12 {
                get {
                    return ((byte[])(this[this.tableSerology.hiv12Column]));
                }
                set {
                    this[this.tableSerology.hiv12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableSerology.ofw_idColumn]));
                }
                set {
                    this[this.tableSerology.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["Serology_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Serology_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Stool_ExaminationRow : global::System.Data.DataRow {
            
            private Stool_ExaminationDataTable tableStool_Examination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Stool_ExaminationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStool_Examination = ((Stool_ExaminationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableStool_Examination.idColumn]));
                }
                set {
                    this[this.tableStool_Examination.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string color {
                get {
                    return ((string)(this[this.tableStool_Examination.colorColumn]));
                }
                set {
                    this[this.tableStool_Examination.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string consistency {
                get {
                    return ((string)(this[this.tableStool_Examination.consistencyColumn]));
                }
                set {
                    this[this.tableStool_Examination.consistencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string pus {
                get {
                    return ((string)(this[this.tableStool_Examination.pusColumn]));
                }
                set {
                    this[this.tableStool_Examination.pusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string rbc {
                get {
                    return ((string)(this[this.tableStool_Examination.rbcColumn]));
                }
                set {
                    this[this.tableStool_Examination.rbcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string others {
                get {
                    return ((string)(this[this.tableStool_Examination.othersColumn]));
                }
                set {
                    this[this.tableStool_Examination.othersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableStool_Examination.ofw_idColumn]));
                }
                set {
                    this[this.tableStool_Examination.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["Stool_Examination_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Stool_Examination_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class summaryRow : global::System.Data.DataRow {
            
            private summaryDataTable tablesummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal summaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesummary = ((summaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablesummary.idColumn]));
                }
                set {
                    this[this.tablesummary.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DOHmandatory {
                get {
                    return ((int)(this[this.tablesummary.DOHmandatoryColumn]));
                }
                set {
                    this[this.tablesummary.DOHmandatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int additional {
                get {
                    return ((int)(this[this.tablesummary.additionalColumn]));
                }
                set {
                    this[this.tablesummary.additionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int flag {
                get {
                    return ((int)(this[this.tablesummary.flagColumn]));
                }
                set {
                    this[this.tablesummary.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int remarks {
                get {
                    return ((int)(this[this.tablesummary.remarksColumn]));
                }
                set {
                    this[this.tablesummary.remarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime dateExam {
                get {
                    return ((global::System.DateTime)(this[this.tablesummary.dateExamColumn]));
                }
                set {
                    this[this.tablesummary.dateExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime expiry {
                get {
                    return ((global::System.DateTime)(this[this.tablesummary.expiryColumn]));
                }
                set {
                    this[this.tablesummary.expiryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int reportNum {
                get {
                    return ((int)(this[this.tablesummary.reportNumColumn]));
                }
                set {
                    this[this.tablesummary.reportNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tablesummary.ofw_idColumn]));
                }
                set {
                    this[this.tablesummary.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["summary_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["summary_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class userAccRow : global::System.Data.DataRow {
            
            private userAccDataTable tableuserAcc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal userAccRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuserAcc = ((userAccDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableuserAcc.idColumn]));
                }
                set {
                    this[this.tableuserAcc.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string username {
                get {
                    return ((string)(this[this.tableuserAcc.usernameColumn]));
                }
                set {
                    this[this.tableuserAcc.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string userpass {
                get {
                    return ((string)(this[this.tableuserAcc.userpassColumn]));
                }
                set {
                    this[this.tableuserAcc.userpassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableuserAcc.nameColumn]));
                }
                set {
                    this[this.tableuserAcc.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int license {
                get {
                    return ((int)(this[this.tableuserAcc.licenseColumn]));
                }
                set {
                    this[this.tableuserAcc.licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string address {
                get {
                    return ((string)(this[this.tableuserAcc.addressColumn]));
                }
                set {
                    this[this.tableuserAcc.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string eSignatue {
                get {
                    return ((string)(this[this.tableuserAcc.eSignatueColumn]));
                }
                set {
                    this[this.tableuserAcc.eSignatueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ofw_id {
                get {
                    return ((int)(this[this.tableuserAcc.ofw_idColumn]));
                }
                set {
                    this[this.tableuserAcc.ofw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow ofwRow {
                get {
                    return ((ofwRow)(this.GetParentRow(this.Table.ParentRelations["userAcc_ofw"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["userAcc_ofw"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ancillaryResultRowChangeEvent : global::System.EventArgs {
            
            private ancillaryResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRowChangeEvent(ancillaryResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ancillaryResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class assessmentRowChangeEvent : global::System.EventArgs {
            
            private assessmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRowChangeEvent(assessmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public assessmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Blood_ChemistrtyRowChangeEvent : global::System.EventArgs {
            
            private Blood_ChemistrtyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRowChangeEvent(Blood_ChemistrtyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Blood_ChemistrtyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Clinic_MicroscopyRowChangeEvent : global::System.EventArgs {
            
            private Clinic_MicroscopyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRowChangeEvent(Clinic_MicroscopyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Clinic_MicroscopyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class HematologyRowChangeEvent : global::System.EventArgs {
            
            private HematologyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRowChangeEvent(HematologyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HematologyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class historyRowChangeEvent : global::System.EventArgs {
            
            private historyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRowChangeEvent(historyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public historyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ofwRowChangeEvent : global::System.EventArgs {
            
            private ofwRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRowChangeEvent(ofwRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ofwRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SerologyRowChangeEvent : global::System.EventArgs {
            
            private SerologyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRowChangeEvent(SerologyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerologyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Stool_ExaminationRowChangeEvent : global::System.EventArgs {
            
            private Stool_ExaminationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRowChangeEvent(Stool_ExaminationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Stool_ExaminationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class summaryRowChangeEvent : global::System.EventArgs {
            
            private summaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRowChangeEvent(summaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public summaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class userAccRowChangeEvent : global::System.EventArgs {
            
            private userAccRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRowChangeEvent(userAccRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public userAccRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SouthJLAInformationSystemC.DatabaseDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ancillaryResultTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ancillaryResultTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ancillaryResult";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("xray", "xray");
            tableMapping.ColumnMappings.Add("ecg", "ecg");
            tableMapping.ColumnMappings.Add("cbc", "cbc");
            tableMapping.ColumnMappings.Add("urinalysis", "urinalysis");
            tableMapping.ColumnMappings.Add("stool", "stool");
            tableMapping.ColumnMappings.Add("hepaB", "hepaB");
            tableMapping.ColumnMappings.Add("hiv", "hiv");
            tableMapping.ColumnMappings.Add("rpr", "rpr");
            tableMapping.ColumnMappings.Add("bloodType", "bloodType");
            tableMapping.ColumnMappings.Add("psychological", "psychological");
            tableMapping.ColumnMappings.Add("specialNeeds", "specialNeeds");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ancillaryResult] WHERE (([id] = @Original_id) AND ([xray] = @Original_xray) AND ([ecg] = @Original_ecg) AND ([cbc] = @Original_cbc) AND ([urinalysis] = @Original_urinalysis) AND ([stool] = @Original_stool) AND ([hepaB] = @Original_hepaB) AND ([hiv] = @Original_hiv) AND ([rpr] = @Original_rpr) AND ([bloodType] = @Original_bloodType) AND ([psychological] = @Original_psychological) AND ([specialNeeds] = @Original_specialNeeds) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xray", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xray", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ecg", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cbc", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_urinalysis", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urinalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stool", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hepaB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepaB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hiv", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rpr", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rpr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bloodType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_psychological", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "psychological", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specialNeeds", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specialNeeds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ancillaryResult] ([id], [xray], [ecg], [cbc], [urinalysis], [stool], [hepaB], [hiv], [rpr], [bloodType], [psychological], [specialNeeds], [ofw_id]) VALUES (@id, @xray, @ecg, @cbc, @urinalysis, @stool, @hepaB, @hiv, @rpr, @bloodType, @psychological, @specialNeeds, @ofw_id);
SELECT id, xray, ecg, cbc, urinalysis, stool, hepaB, hiv, rpr, bloodType, psychological, specialNeeds, ofw_id FROM ancillaryResult WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xray", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ecg", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cbc", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urinalysis", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urinalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stool", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hepaB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepaB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hiv", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rpr", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rpr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@psychological", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "psychological", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specialNeeds", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specialNeeds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ancillaryResult] SET [id] = @id, [xray] = @xray, [ecg] = @ecg, [cbc] = @cbc, [urinalysis] = @urinalysis, [stool] = @stool, [hepaB] = @hepaB, [hiv] = @hiv, [rpr] = @rpr, [bloodType] = @bloodType, [psychological] = @psychological, [specialNeeds] = @specialNeeds, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([xray] = @Original_xray) AND ([ecg] = @Original_ecg) AND ([cbc] = @Original_cbc) AND ([urinalysis] = @Original_urinalysis) AND ([stool] = @Original_stool) AND ([hepaB] = @Original_hepaB) AND ([hiv] = @Original_hiv) AND ([rpr] = @Original_rpr) AND ([bloodType] = @Original_bloodType) AND ([psychological] = @Original_psychological) AND ([specialNeeds] = @Original_specialNeeds) AND ([ofw_id] = @Original_ofw_id));
SELECT id, xray, ecg, cbc, urinalysis, stool, hepaB, hiv, rpr, bloodType, psychological, specialNeeds, ofw_id FROM ancillaryResult WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xray", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ecg", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cbc", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urinalysis", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urinalysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stool", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hepaB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepaB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hiv", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rpr", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rpr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@psychological", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "psychological", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specialNeeds", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specialNeeds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xray", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xray", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ecg", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cbc", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_urinalysis", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urinalysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stool", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hepaB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepaB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hiv", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rpr", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rpr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bloodType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_psychological", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "psychological", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_specialNeeds", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "specialNeeds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, xray, ecg, cbc, urinalysis, stool, hepaB, hiv, rpr, bloodType, psychol" +
                "ogical, specialNeeds, ofw_id FROM dbo.ancillaryResult";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.ancillaryResultDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.ancillaryResultDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.ancillaryResultDataTable dataTable = new DatabaseDataSet.ancillaryResultDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.ancillaryResultDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ancillaryResult");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, byte[] Original_xray, byte[] Original_ecg, byte[] Original_cbc, byte[] Original_urinalysis, byte[] Original_stool, byte[] Original_hepaB, byte[] Original_hiv, byte[] Original_rpr, string Original_bloodType, byte[] Original_psychological, string Original_specialNeeds, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_xray == null)) {
                throw new global::System.ArgumentNullException("Original_xray");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_xray));
            }
            if ((Original_ecg == null)) {
                throw new global::System.ArgumentNullException("Original_ecg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((byte[])(Original_ecg));
            }
            if ((Original_cbc == null)) {
                throw new global::System.ArgumentNullException("Original_cbc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((byte[])(Original_cbc));
            }
            if ((Original_urinalysis == null)) {
                throw new global::System.ArgumentNullException("Original_urinalysis");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((byte[])(Original_urinalysis));
            }
            if ((Original_stool == null)) {
                throw new global::System.ArgumentNullException("Original_stool");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((byte[])(Original_stool));
            }
            if ((Original_hepaB == null)) {
                throw new global::System.ArgumentNullException("Original_hepaB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((byte[])(Original_hepaB));
            }
            if ((Original_hiv == null)) {
                throw new global::System.ArgumentNullException("Original_hiv");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((byte[])(Original_hiv));
            }
            if ((Original_rpr == null)) {
                throw new global::System.ArgumentNullException("Original_rpr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_rpr));
            }
            if ((Original_bloodType == null)) {
                throw new global::System.ArgumentNullException("Original_bloodType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_bloodType));
            }
            if ((Original_psychological == null)) {
                throw new global::System.ArgumentNullException("Original_psychological");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte[])(Original_psychological));
            }
            if ((Original_specialNeeds == null)) {
                throw new global::System.ArgumentNullException("Original_specialNeeds");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_specialNeeds));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, byte[] xray, byte[] ecg, byte[] cbc, byte[] urinalysis, byte[] stool, byte[] hepaB, byte[] hiv, byte[] rpr, string bloodType, byte[] psychological, string specialNeeds, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((xray == null)) {
                throw new global::System.ArgumentNullException("xray");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(xray));
            }
            if ((ecg == null)) {
                throw new global::System.ArgumentNullException("ecg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte[])(ecg));
            }
            if ((cbc == null)) {
                throw new global::System.ArgumentNullException("cbc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((byte[])(cbc));
            }
            if ((urinalysis == null)) {
                throw new global::System.ArgumentNullException("urinalysis");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(urinalysis));
            }
            if ((stool == null)) {
                throw new global::System.ArgumentNullException("stool");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte[])(stool));
            }
            if ((hepaB == null)) {
                throw new global::System.ArgumentNullException("hepaB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(hepaB));
            }
            if ((hiv == null)) {
                throw new global::System.ArgumentNullException("hiv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(hiv));
            }
            if ((rpr == null)) {
                throw new global::System.ArgumentNullException("rpr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(rpr));
            }
            if ((bloodType == null)) {
                throw new global::System.ArgumentNullException("bloodType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(bloodType));
            }
            if ((psychological == null)) {
                throw new global::System.ArgumentNullException("psychological");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((byte[])(psychological));
            }
            if ((specialNeeds == null)) {
                throw new global::System.ArgumentNullException("specialNeeds");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(specialNeeds));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    byte[] xray, 
                    byte[] ecg, 
                    byte[] cbc, 
                    byte[] urinalysis, 
                    byte[] stool, 
                    byte[] hepaB, 
                    byte[] hiv, 
                    byte[] rpr, 
                    string bloodType, 
                    byte[] psychological, 
                    string specialNeeds, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_xray, 
                    byte[] Original_ecg, 
                    byte[] Original_cbc, 
                    byte[] Original_urinalysis, 
                    byte[] Original_stool, 
                    byte[] Original_hepaB, 
                    byte[] Original_hiv, 
                    byte[] Original_rpr, 
                    string Original_bloodType, 
                    byte[] Original_psychological, 
                    string Original_specialNeeds, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((xray == null)) {
                throw new global::System.ArgumentNullException("xray");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(xray));
            }
            if ((ecg == null)) {
                throw new global::System.ArgumentNullException("ecg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte[])(ecg));
            }
            if ((cbc == null)) {
                throw new global::System.ArgumentNullException("cbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((byte[])(cbc));
            }
            if ((urinalysis == null)) {
                throw new global::System.ArgumentNullException("urinalysis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(urinalysis));
            }
            if ((stool == null)) {
                throw new global::System.ArgumentNullException("stool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte[])(stool));
            }
            if ((hepaB == null)) {
                throw new global::System.ArgumentNullException("hepaB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(hepaB));
            }
            if ((hiv == null)) {
                throw new global::System.ArgumentNullException("hiv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(hiv));
            }
            if ((rpr == null)) {
                throw new global::System.ArgumentNullException("rpr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(rpr));
            }
            if ((bloodType == null)) {
                throw new global::System.ArgumentNullException("bloodType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(bloodType));
            }
            if ((psychological == null)) {
                throw new global::System.ArgumentNullException("psychological");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((byte[])(psychological));
            }
            if ((specialNeeds == null)) {
                throw new global::System.ArgumentNullException("specialNeeds");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(specialNeeds));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_id));
            if ((Original_xray == null)) {
                throw new global::System.ArgumentNullException("Original_xray");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((byte[])(Original_xray));
            }
            if ((Original_ecg == null)) {
                throw new global::System.ArgumentNullException("Original_ecg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte[])(Original_ecg));
            }
            if ((Original_cbc == null)) {
                throw new global::System.ArgumentNullException("Original_cbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((byte[])(Original_cbc));
            }
            if ((Original_urinalysis == null)) {
                throw new global::System.ArgumentNullException("Original_urinalysis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte[])(Original_urinalysis));
            }
            if ((Original_stool == null)) {
                throw new global::System.ArgumentNullException("Original_stool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((byte[])(Original_stool));
            }
            if ((Original_hepaB == null)) {
                throw new global::System.ArgumentNullException("Original_hepaB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((byte[])(Original_hepaB));
            }
            if ((Original_hiv == null)) {
                throw new global::System.ArgumentNullException("Original_hiv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((byte[])(Original_hiv));
            }
            if ((Original_rpr == null)) {
                throw new global::System.ArgumentNullException("Original_rpr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte[])(Original_rpr));
            }
            if ((Original_bloodType == null)) {
                throw new global::System.ArgumentNullException("Original_bloodType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_bloodType));
            }
            if ((Original_psychological == null)) {
                throw new global::System.ArgumentNullException("Original_psychological");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((byte[])(Original_psychological));
            }
            if ((Original_specialNeeds == null)) {
                throw new global::System.ArgumentNullException("Original_specialNeeds");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_specialNeeds));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte[] xray, 
                    byte[] ecg, 
                    byte[] cbc, 
                    byte[] urinalysis, 
                    byte[] stool, 
                    byte[] hepaB, 
                    byte[] hiv, 
                    byte[] rpr, 
                    string bloodType, 
                    byte[] psychological, 
                    string specialNeeds, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_xray, 
                    byte[] Original_ecg, 
                    byte[] Original_cbc, 
                    byte[] Original_urinalysis, 
                    byte[] Original_stool, 
                    byte[] Original_hepaB, 
                    byte[] Original_hiv, 
                    byte[] Original_rpr, 
                    string Original_bloodType, 
                    byte[] Original_psychological, 
                    string Original_specialNeeds, 
                    int Original_ofw_id) {
            return this.Update(Original_id, xray, ecg, cbc, urinalysis, stool, hepaB, hiv, rpr, bloodType, psychological, specialNeeds, ofw_id, Original_id, Original_xray, Original_ecg, Original_cbc, Original_urinalysis, Original_stool, Original_hepaB, Original_hiv, Original_rpr, Original_bloodType, Original_psychological, Original_specialNeeds, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class assessmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public assessmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "assessment";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("fit", "fit");
            tableMapping.ColumnMappings.Add("deck", "deck");
            tableMapping.ColumnMappings.Add("engine", "engine");
            tableMapping.ColumnMappings.Add("catering", "catering");
            tableMapping.ColumnMappings.Add("other", "other");
            tableMapping.ColumnMappings.Add("restriction", "restriction");
            tableMapping.ColumnMappings.Add("visualAids", "visualAids");
            tableMapping.ColumnMappings.Add("restrctions", "restrctions");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[assessment] WHERE (([id] = @Original_id) AND ([fit] = @Original_fit) AND ([deck] = @Original_deck) AND ([engine] = @Original_engine) AND ([catering] = @Original_catering) AND ([other] = @Original_other) AND ([restriction] = @Original_restriction) AND ([visualAids] = @Original_visualAids) AND ([restrctions] = @Original_restrctions) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fit", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deck", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_catering", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "catering", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_other", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_restriction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restriction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_visualAids", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visualAids", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_restrctions", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restrctions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[assessment] ([id], [fit], [deck], [engine], [catering], [other], [restriction], [visualAids], [restrctions], [ofw_id]) VALUES (@id, @fit, @deck, @engine, @catering, @other, @restriction, @visualAids, @restrctions, @ofw_id);
SELECT id, fit, deck, engine, catering, other, restriction, visualAids, restrctions, ofw_id FROM assessment WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fit", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deck", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@catering", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "catering", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@restriction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restriction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visualAids", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visualAids", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@restrctions", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restrctions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[assessment] SET [id] = @id, [fit] = @fit, [deck] = @deck, [engine] = @engine, [catering] = @catering, [other] = @other, [restriction] = @restriction, [visualAids] = @visualAids, [restrctions] = @restrctions, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([fit] = @Original_fit) AND ([deck] = @Original_deck) AND ([engine] = @Original_engine) AND ([catering] = @Original_catering) AND ([other] = @Original_other) AND ([restriction] = @Original_restriction) AND ([visualAids] = @Original_visualAids) AND ([restrctions] = @Original_restrctions) AND ([ofw_id] = @Original_ofw_id));
SELECT id, fit, deck, engine, catering, other, restriction, visualAids, restrctions, ofw_id FROM assessment WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fit", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deck", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@catering", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "catering", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@restriction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restriction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visualAids", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visualAids", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@restrctions", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restrctions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fit", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deck", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deck", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_catering", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "catering", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_other", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_restriction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restriction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_visualAids", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visualAids", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_restrctions", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "restrctions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, fit, deck, engine, catering, other, restriction, visualAids, restrctio" +
                "ns, ofw_id FROM dbo.assessment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.assessmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.assessmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.assessmentDataTable dataTable = new DatabaseDataSet.assessmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.assessmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "assessment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, byte[] Original_fit, int Original_deck, int Original_engine, int Original_catering, int Original_other, int Original_restriction, int Original_visualAids, byte[] Original_restrctions, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_fit == null)) {
                throw new global::System.ArgumentNullException("Original_fit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_fit));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_deck));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_engine));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_catering));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_other));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_restriction));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_visualAids));
            if ((Original_restrctions == null)) {
                throw new global::System.ArgumentNullException("Original_restrctions");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_restrctions));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, byte[] fit, int deck, int engine, int catering, int other, int restriction, int visualAids, byte[] restrctions, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((fit == null)) {
                throw new global::System.ArgumentNullException("fit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(fit));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(deck));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(engine));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(catering));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(other));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(restriction));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(visualAids));
            if ((restrctions == null)) {
                throw new global::System.ArgumentNullException("restrctions");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(restrctions));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    byte[] fit, 
                    int deck, 
                    int engine, 
                    int catering, 
                    int other, 
                    int restriction, 
                    int visualAids, 
                    byte[] restrctions, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_fit, 
                    int Original_deck, 
                    int Original_engine, 
                    int Original_catering, 
                    int Original_other, 
                    int Original_restriction, 
                    int Original_visualAids, 
                    byte[] Original_restrctions, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((fit == null)) {
                throw new global::System.ArgumentNullException("fit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(fit));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(deck));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(engine));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(catering));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(other));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(restriction));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(visualAids));
            if ((restrctions == null)) {
                throw new global::System.ArgumentNullException("restrctions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(restrctions));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_id));
            if ((Original_fit == null)) {
                throw new global::System.ArgumentNullException("Original_fit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((byte[])(Original_fit));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_deck));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_engine));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_catering));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_other));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_restriction));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_visualAids));
            if ((Original_restrctions == null)) {
                throw new global::System.ArgumentNullException("Original_restrctions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((byte[])(Original_restrctions));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte[] fit, 
                    int deck, 
                    int engine, 
                    int catering, 
                    int other, 
                    int restriction, 
                    int visualAids, 
                    byte[] restrctions, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_fit, 
                    int Original_deck, 
                    int Original_engine, 
                    int Original_catering, 
                    int Original_other, 
                    int Original_restriction, 
                    int Original_visualAids, 
                    byte[] Original_restrctions, 
                    int Original_ofw_id) {
            return this.Update(Original_id, fit, deck, engine, catering, other, restriction, visualAids, restrctions, ofw_id, Original_id, Original_fit, Original_deck, Original_engine, Original_catering, Original_other, Original_restriction, Original_visualAids, Original_restrctions, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Blood_ChemistrtyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Blood_ChemistrtyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Blood_Chemistrty";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("potassium", "potassium");
            tableMapping.ColumnMappings.Add("fbs", "fbs");
            tableMapping.ColumnMappings.Add("bun", "bun");
            tableMapping.ColumnMappings.Add("creatinine", "creatinine");
            tableMapping.ColumnMappings.Add("totalCholesterol", "totalCholesterol");
            tableMapping.ColumnMappings.Add("triglycerides", "triglycerides");
            tableMapping.ColumnMappings.Add("hdl", "hdl");
            tableMapping.ColumnMappings.Add("ldl", "ldl");
            tableMapping.ColumnMappings.Add("vldl", "vldl");
            tableMapping.ColumnMappings.Add("uricAcid", "uricAcid");
            tableMapping.ColumnMappings.Add("sgotAst", "sgotAst");
            tableMapping.ColumnMappings.Add("sgptAlt", "sgptAlt");
            tableMapping.ColumnMappings.Add("hemoglobinA1C", "hemoglobinA1C");
            tableMapping.ColumnMappings.Add("albumin", "albumin");
            tableMapping.ColumnMappings.Add("globulin", "globulin");
            tableMapping.ColumnMappings.Add("AGRatio", "AGRatio");
            tableMapping.ColumnMappings.Add("alp", "alp");
            tableMapping.ColumnMappings.Add("IndirectBilirubin", "IndirectBilirubin");
            tableMapping.ColumnMappings.Add("DirectBilirubin", "DirectBilirubin");
            tableMapping.ColumnMappings.Add("TotalBilirubin", "TotalBilirubin");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Blood_Chemistrty] WHERE (([id] = @Original_id) AND ([potassium] = @Original_potassium) AND ([fbs] = @Original_fbs) AND ([bun] = @Original_bun) AND ([creatinine] = @Original_creatinine) AND ([totalCholesterol] = @Original_totalCholesterol) AND ([triglycerides] = @Original_triglycerides) AND ([hdl] = @Original_hdl) AND ([ldl] = @Original_ldl) AND ([vldl] = @Original_vldl) AND ([uricAcid] = @Original_uricAcid) AND ([sgotAst] = @Original_sgotAst) AND ([sgptAlt] = @Original_sgptAlt) AND ([hemoglobinA1C] = @Original_hemoglobinA1C) AND ([albumin] = @Original_albumin) AND ([globulin] = @Original_globulin) AND ([AGRatio] = @Original_AGRatio) AND ([alp] = @Original_alp) AND ([IndirectBilirubin] = @Original_IndirectBilirubin) AND ([DirectBilirubin] = @Original_DirectBilirubin) AND ([TotalBilirubin] = @Original_TotalBilirubin) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_potassium", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "potassium", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fbs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bun", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_creatinine", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creatinine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalCholesterol", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalCholesterol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_triglycerides", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "triglycerides", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hdl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hdl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ldl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vldl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uricAcid", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uricAcid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sgotAst", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgotAst", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sgptAlt", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgptAlt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hemoglobinA1C", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hemoglobinA1C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_albumin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "albumin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_globulin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "globulin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AGRatio", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGRatio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Blood_Chemistrty] ([id], [potassium], [fbs], [bun], [creatinine], [totalCholesterol], [triglycerides], [hdl], [ldl], [vldl], [uricAcid], [sgotAst], [sgptAlt], [hemoglobinA1C], [albumin], [globulin], [AGRatio], [alp], [IndirectBilirubin], [DirectBilirubin], [TotalBilirubin], [ofw_id]) VALUES (@id, @potassium, @fbs, @bun, @creatinine, @totalCholesterol, @triglycerides, @hdl, @ldl, @vldl, @uricAcid, @sgotAst, @sgptAlt, @hemoglobinA1C, @albumin, @globulin, @AGRatio, @alp, @IndirectBilirubin, @DirectBilirubin, @TotalBilirubin, @ofw_id);
SELECT id, potassium, fbs, bun, creatinine, totalCholesterol, triglycerides, hdl, ldl, vldl, uricAcid, sgotAst, sgptAlt, hemoglobinA1C, albumin, globulin, AGRatio, alp, IndirectBilirubin, DirectBilirubin, TotalBilirubin, ofw_id FROM Blood_Chemistrty WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@potassium", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "potassium", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fbs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bun", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@creatinine", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creatinine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalCholesterol", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalCholesterol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@triglycerides", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "triglycerides", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hdl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hdl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ldl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vldl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uricAcid", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uricAcid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sgotAst", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgotAst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sgptAlt", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgptAlt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hemoglobinA1C", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hemoglobinA1C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@albumin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "albumin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@globulin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "globulin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGRatio", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGRatio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Blood_Chemistrty] SET [id] = @id, [potassium] = @potassium, [fbs] =" +
                " @fbs, [bun] = @bun, [creatinine] = @creatinine, [totalCholesterol] = @totalChol" +
                "esterol, [triglycerides] = @triglycerides, [hdl] = @hdl, [ldl] = @ldl, [vldl] = " +
                "@vldl, [uricAcid] = @uricAcid, [sgotAst] = @sgotAst, [sgptAlt] = @sgptAlt, [hemo" +
                "globinA1C] = @hemoglobinA1C, [albumin] = @albumin, [globulin] = @globulin, [AGRa" +
                "tio] = @AGRatio, [alp] = @alp, [IndirectBilirubin] = @IndirectBilirubin, [Direct" +
                "Bilirubin] = @DirectBilirubin, [TotalBilirubin] = @TotalBilirubin, [ofw_id] = @o" +
                "fw_id WHERE (([id] = @Original_id) AND ([potassium] = @Original_potassium) AND (" +
                "[fbs] = @Original_fbs) AND ([bun] = @Original_bun) AND ([creatinine] = @Original" +
                "_creatinine) AND ([totalCholesterol] = @Original_totalCholesterol) AND ([triglyc" +
                "erides] = @Original_triglycerides) AND ([hdl] = @Original_hdl) AND ([ldl] = @Ori" +
                "ginal_ldl) AND ([vldl] = @Original_vldl) AND ([uricAcid] = @Original_uricAcid) A" +
                "ND ([sgotAst] = @Original_sgotAst) AND ([sgptAlt] = @Original_sgptAlt) AND ([hem" +
                "oglobinA1C] = @Original_hemoglobinA1C) AND ([albumin] = @Original_albumin) AND (" +
                "[globulin] = @Original_globulin) AND ([AGRatio] = @Original_AGRatio) AND ([alp] " +
                "= @Original_alp) AND ([IndirectBilirubin] = @Original_IndirectBilirubin) AND ([D" +
                "irectBilirubin] = @Original_DirectBilirubin) AND ([TotalBilirubin] = @Original_T" +
                "otalBilirubin) AND ([ofw_id] = @Original_ofw_id));\r\nSELECT id, potassium, fbs, b" +
                "un, creatinine, totalCholesterol, triglycerides, hdl, ldl, vldl, uricAcid, sgotA" +
                "st, sgptAlt, hemoglobinA1C, albumin, globulin, AGRatio, alp, IndirectBilirubin, " +
                "DirectBilirubin, TotalBilirubin, ofw_id FROM Blood_Chemistrty WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@potassium", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "potassium", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fbs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bun", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@creatinine", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creatinine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalCholesterol", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalCholesterol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@triglycerides", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "triglycerides", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hdl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hdl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ldl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vldl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uricAcid", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uricAcid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sgotAst", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgotAst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sgptAlt", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgptAlt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hemoglobinA1C", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hemoglobinA1C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@albumin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "albumin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@globulin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "globulin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGRatio", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGRatio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalBilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_potassium", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "potassium", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fbs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fbs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bun", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_creatinine", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creatinine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalCholesterol", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalCholesterol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_triglycerides", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "triglycerides", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hdl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hdl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ldl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vldl", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vldl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uricAcid", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uricAcid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sgotAst", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgotAst", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sgptAlt", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sgptAlt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hemoglobinA1C", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hemoglobinA1C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_albumin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "albumin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_globulin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "globulin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AGRatio", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGRatio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DirectBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalBilirubin", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalBilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, potassium, fbs, bun, creatinine, totalCholesterol, triglycerides, hdl," +
                " ldl, vldl, uricAcid, sgotAst, sgptAlt, hemoglobinA1C, albumin, globulin, AGRati" +
                "o, alp, IndirectBilirubin, DirectBilirubin, TotalBilirubin, ofw_id FROM dbo.Bloo" +
                "d_Chemistrty";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.Blood_ChemistrtyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.Blood_ChemistrtyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.Blood_ChemistrtyDataTable dataTable = new DatabaseDataSet.Blood_ChemistrtyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.Blood_ChemistrtyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Blood_Chemistrty");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    float Original_potassium, 
                    float Original_fbs, 
                    float Original_bun, 
                    float Original_creatinine, 
                    float Original_totalCholesterol, 
                    float Original_triglycerides, 
                    float Original_hdl, 
                    float Original_ldl, 
                    float Original_vldl, 
                    float Original_uricAcid, 
                    float Original_sgotAst, 
                    float Original_sgptAlt, 
                    float Original_hemoglobinA1C, 
                    float Original_albumin, 
                    float Original_globulin, 
                    float Original_AGRatio, 
                    float Original_alp, 
                    float Original_IndirectBilirubin, 
                    float Original_DirectBilirubin, 
                    float Original_TotalBilirubin, 
                    int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((float)(Original_potassium));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((float)(Original_fbs));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((float)(Original_bun));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_creatinine));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((float)(Original_totalCholesterol));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_triglycerides));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((float)(Original_hdl));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((float)(Original_ldl));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((float)(Original_vldl));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_uricAcid));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((float)(Original_sgotAst));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(Original_sgptAlt));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((float)(Original_hemoglobinA1C));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_albumin));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((float)(Original_globulin));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((float)(Original_AGRatio));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((float)(Original_alp));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((float)(Original_IndirectBilirubin));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((float)(Original_DirectBilirubin));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((float)(Original_TotalBilirubin));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    float potassium, 
                    float fbs, 
                    float bun, 
                    float creatinine, 
                    float totalCholesterol, 
                    float triglycerides, 
                    float hdl, 
                    float ldl, 
                    float vldl, 
                    float uricAcid, 
                    float sgotAst, 
                    float sgptAlt, 
                    float hemoglobinA1C, 
                    float albumin, 
                    float globulin, 
                    float AGRatio, 
                    float alp, 
                    float IndirectBilirubin, 
                    float DirectBilirubin, 
                    float TotalBilirubin, 
                    int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((float)(potassium));
            this.Adapter.InsertCommand.Parameters[2].Value = ((float)(fbs));
            this.Adapter.InsertCommand.Parameters[3].Value = ((float)(bun));
            this.Adapter.InsertCommand.Parameters[4].Value = ((float)(creatinine));
            this.Adapter.InsertCommand.Parameters[5].Value = ((float)(totalCholesterol));
            this.Adapter.InsertCommand.Parameters[6].Value = ((float)(triglycerides));
            this.Adapter.InsertCommand.Parameters[7].Value = ((float)(hdl));
            this.Adapter.InsertCommand.Parameters[8].Value = ((float)(ldl));
            this.Adapter.InsertCommand.Parameters[9].Value = ((float)(vldl));
            this.Adapter.InsertCommand.Parameters[10].Value = ((float)(uricAcid));
            this.Adapter.InsertCommand.Parameters[11].Value = ((float)(sgotAst));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(sgptAlt));
            this.Adapter.InsertCommand.Parameters[13].Value = ((float)(hemoglobinA1C));
            this.Adapter.InsertCommand.Parameters[14].Value = ((float)(albumin));
            this.Adapter.InsertCommand.Parameters[15].Value = ((float)(globulin));
            this.Adapter.InsertCommand.Parameters[16].Value = ((float)(AGRatio));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(alp));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(IndirectBilirubin));
            this.Adapter.InsertCommand.Parameters[19].Value = ((float)(DirectBilirubin));
            this.Adapter.InsertCommand.Parameters[20].Value = ((float)(TotalBilirubin));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    float potassium, 
                    float fbs, 
                    float bun, 
                    float creatinine, 
                    float totalCholesterol, 
                    float triglycerides, 
                    float hdl, 
                    float ldl, 
                    float vldl, 
                    float uricAcid, 
                    float sgotAst, 
                    float sgptAlt, 
                    float hemoglobinA1C, 
                    float albumin, 
                    float globulin, 
                    float AGRatio, 
                    float alp, 
                    float IndirectBilirubin, 
                    float DirectBilirubin, 
                    float TotalBilirubin, 
                    int ofw_id, 
                    int Original_id, 
                    float Original_potassium, 
                    float Original_fbs, 
                    float Original_bun, 
                    float Original_creatinine, 
                    float Original_totalCholesterol, 
                    float Original_triglycerides, 
                    float Original_hdl, 
                    float Original_ldl, 
                    float Original_vldl, 
                    float Original_uricAcid, 
                    float Original_sgotAst, 
                    float Original_sgptAlt, 
                    float Original_hemoglobinA1C, 
                    float Original_albumin, 
                    float Original_globulin, 
                    float Original_AGRatio, 
                    float Original_alp, 
                    float Original_IndirectBilirubin, 
                    float Original_DirectBilirubin, 
                    float Original_TotalBilirubin, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(potassium));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(fbs));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(bun));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(creatinine));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((float)(totalCholesterol));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(triglycerides));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(hdl));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(ldl));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(vldl));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(uricAcid));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(sgotAst));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(sgptAlt));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(hemoglobinA1C));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(albumin));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(globulin));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(AGRatio));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(alp));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(IndirectBilirubin));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(DirectBilirubin));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((float)(TotalBilirubin));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((float)(Original_potassium));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((float)(Original_fbs));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(Original_bun));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((float)(Original_creatinine));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(Original_totalCholesterol));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((float)(Original_triglycerides));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(Original_hdl));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((float)(Original_ldl));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(Original_vldl));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(Original_uricAcid));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((float)(Original_sgotAst));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((float)(Original_sgptAlt));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(Original_hemoglobinA1C));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((float)(Original_albumin));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((float)(Original_globulin));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((float)(Original_AGRatio));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((float)(Original_alp));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((float)(Original_IndirectBilirubin));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((float)(Original_DirectBilirubin));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((float)(Original_TotalBilirubin));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    float potassium, 
                    float fbs, 
                    float bun, 
                    float creatinine, 
                    float totalCholesterol, 
                    float triglycerides, 
                    float hdl, 
                    float ldl, 
                    float vldl, 
                    float uricAcid, 
                    float sgotAst, 
                    float sgptAlt, 
                    float hemoglobinA1C, 
                    float albumin, 
                    float globulin, 
                    float AGRatio, 
                    float alp, 
                    float IndirectBilirubin, 
                    float DirectBilirubin, 
                    float TotalBilirubin, 
                    int ofw_id, 
                    int Original_id, 
                    float Original_potassium, 
                    float Original_fbs, 
                    float Original_bun, 
                    float Original_creatinine, 
                    float Original_totalCholesterol, 
                    float Original_triglycerides, 
                    float Original_hdl, 
                    float Original_ldl, 
                    float Original_vldl, 
                    float Original_uricAcid, 
                    float Original_sgotAst, 
                    float Original_sgptAlt, 
                    float Original_hemoglobinA1C, 
                    float Original_albumin, 
                    float Original_globulin, 
                    float Original_AGRatio, 
                    float Original_alp, 
                    float Original_IndirectBilirubin, 
                    float Original_DirectBilirubin, 
                    float Original_TotalBilirubin, 
                    int Original_ofw_id) {
            return this.Update(Original_id, potassium, fbs, bun, creatinine, totalCholesterol, triglycerides, hdl, ldl, vldl, uricAcid, sgotAst, sgptAlt, hemoglobinA1C, albumin, globulin, AGRatio, alp, IndirectBilirubin, DirectBilirubin, TotalBilirubin, ofw_id, Original_id, Original_potassium, Original_fbs, Original_bun, Original_creatinine, Original_totalCholesterol, Original_triglycerides, Original_hdl, Original_ldl, Original_vldl, Original_uricAcid, Original_sgotAst, Original_sgptAlt, Original_hemoglobinA1C, Original_albumin, Original_globulin, Original_AGRatio, Original_alp, Original_IndirectBilirubin, Original_DirectBilirubin, Original_TotalBilirubin, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Clinic_MicroscopyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Clinic_MicroscopyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Clinic_Microscopy";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("MacroColor", "MacroColor");
            tableMapping.ColumnMappings.Add("MacroTransparency", "MacroTransparency");
            tableMapping.ColumnMappings.Add("Leukocyte", "Leukocyte");
            tableMapping.ColumnMappings.Add("Nitrite", "Nitrite");
            tableMapping.ColumnMappings.Add("Urobilinogen", "Urobilinogen");
            tableMapping.ColumnMappings.Add("Protein", "Protein");
            tableMapping.ColumnMappings.Add("PH", "PH");
            tableMapping.ColumnMappings.Add("Blood", "Blood");
            tableMapping.ColumnMappings.Add("SpecificGravity", "SpecificGravity");
            tableMapping.ColumnMappings.Add("Ketone", "Ketone");
            tableMapping.ColumnMappings.Add("Bilirubin", "Bilirubin");
            tableMapping.ColumnMappings.Add("Glucose", "Glucose");
            tableMapping.ColumnMappings.Add("MicroEpithelial", "MicroEpithelial");
            tableMapping.ColumnMappings.Add("MucousThreads", "MucousThreads");
            tableMapping.ColumnMappings.Add("AmorphousMaterial", "AmorphousMaterial");
            tableMapping.ColumnMappings.Add("PusCells", "PusCells");
            tableMapping.ColumnMappings.Add("rbc", "rbc");
            tableMapping.ColumnMappings.Add("bacteria", "bacteria");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Clinic_Microscopy] WHERE (([id] = @Original_id) AND ([MacroColor] = @Original_MacroColor) AND ([MacroTransparency] = @Original_MacroTransparency) AND ([Leukocyte] = @Original_Leukocyte) AND ([Nitrite] = @Original_Nitrite) AND ([Urobilinogen] = @Original_Urobilinogen) AND ([Protein] = @Original_Protein) AND ([PH] = @Original_PH) AND ([Blood] = @Original_Blood) AND ([SpecificGravity] = @Original_SpecificGravity) AND ([Ketone] = @Original_Ketone) AND ([Bilirubin] = @Original_Bilirubin) AND ([Glucose] = @Original_Glucose) AND ([MicroEpithelial] = @Original_MicroEpithelial) AND ([MucousThreads] = @Original_MucousThreads) AND ([AmorphousMaterial] = @Original_AmorphousMaterial) AND ([PusCells] = @Original_PusCells) AND ([rbc] = @Original_rbc) AND ([bacteria] = @Original_bacteria) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MacroColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MacroTransparency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroTransparency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leukocyte", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leukocyte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nitrite", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrite", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Urobilinogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Urobilinogen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Protein", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Protein", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PH", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blood", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecificGravity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ketone", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ketone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bilirubin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Glucose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Glucose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicroEpithelial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicroEpithelial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MucousThreads", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MucousThreads", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmorphousMaterial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmorphousMaterial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PusCells", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PusCells", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bacteria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bacteria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Clinic_Microscopy] ([id], [MacroColor], [MacroTransparency], [Leukocyte], [Nitrite], [Urobilinogen], [Protein], [PH], [Blood], [SpecificGravity], [Ketone], [Bilirubin], [Glucose], [MicroEpithelial], [MucousThreads], [AmorphousMaterial], [PusCells], [rbc], [bacteria], [ofw_id]) VALUES (@id, @MacroColor, @MacroTransparency, @Leukocyte, @Nitrite, @Urobilinogen, @Protein, @PH, @Blood, @SpecificGravity, @Ketone, @Bilirubin, @Glucose, @MicroEpithelial, @MucousThreads, @AmorphousMaterial, @PusCells, @rbc, @bacteria, @ofw_id);
SELECT id, MacroColor, MacroTransparency, Leukocyte, Nitrite, Urobilinogen, Protein, PH, Blood, SpecificGravity, Ketone, Bilirubin, Glucose, MicroEpithelial, MucousThreads, AmorphousMaterial, PusCells, rbc, bacteria, ofw_id FROM Clinic_Microscopy WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MacroColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MacroTransparency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroTransparency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leukocyte", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leukocyte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nitrite", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Urobilinogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Urobilinogen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Protein", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Protein", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PH", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blood", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecificGravity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ketone", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ketone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bilirubin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Glucose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Glucose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicroEpithelial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicroEpithelial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MucousThreads", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MucousThreads", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmorphousMaterial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmorphousMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PusCells", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PusCells", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bacteria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bacteria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Clinic_Microscopy] SET [id] = @id, [MacroColor] = @MacroColor, [Mac" +
                "roTransparency] = @MacroTransparency, [Leukocyte] = @Leukocyte, [Nitrite] = @Nit" +
                "rite, [Urobilinogen] = @Urobilinogen, [Protein] = @Protein, [PH] = @PH, [Blood] " +
                "= @Blood, [SpecificGravity] = @SpecificGravity, [Ketone] = @Ketone, [Bilirubin] " +
                "= @Bilirubin, [Glucose] = @Glucose, [MicroEpithelial] = @MicroEpithelial, [Mucou" +
                "sThreads] = @MucousThreads, [AmorphousMaterial] = @AmorphousMaterial, [PusCells]" +
                " = @PusCells, [rbc] = @rbc, [bacteria] = @bacteria, [ofw_id] = @ofw_id WHERE (([" +
                "id] = @Original_id) AND ([MacroColor] = @Original_MacroColor) AND ([MacroTranspa" +
                "rency] = @Original_MacroTransparency) AND ([Leukocyte] = @Original_Leukocyte) AN" +
                "D ([Nitrite] = @Original_Nitrite) AND ([Urobilinogen] = @Original_Urobilinogen) " +
                "AND ([Protein] = @Original_Protein) AND ([PH] = @Original_PH) AND ([Blood] = @Or" +
                "iginal_Blood) AND ([SpecificGravity] = @Original_SpecificGravity) AND ([Ketone] " +
                "= @Original_Ketone) AND ([Bilirubin] = @Original_Bilirubin) AND ([Glucose] = @Or" +
                "iginal_Glucose) AND ([MicroEpithelial] = @Original_MicroEpithelial) AND ([Mucous" +
                "Threads] = @Original_MucousThreads) AND ([AmorphousMaterial] = @Original_Amorpho" +
                "usMaterial) AND ([PusCells] = @Original_PusCells) AND ([rbc] = @Original_rbc) AN" +
                "D ([bacteria] = @Original_bacteria) AND ([ofw_id] = @Original_ofw_id));\r\nSELECT " +
                "id, MacroColor, MacroTransparency, Leukocyte, Nitrite, Urobilinogen, Protein, PH" +
                ", Blood, SpecificGravity, Ketone, Bilirubin, Glucose, MicroEpithelial, MucousThr" +
                "eads, AmorphousMaterial, PusCells, rbc, bacteria, ofw_id FROM Clinic_Microscopy " +
                "WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MacroColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MacroTransparency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroTransparency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leukocyte", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leukocyte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nitrite", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Urobilinogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Urobilinogen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Protein", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Protein", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PH", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blood", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecificGravity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ketone", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ketone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bilirubin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bilirubin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Glucose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Glucose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MicroEpithelial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicroEpithelial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MucousThreads", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MucousThreads", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmorphousMaterial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmorphousMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PusCells", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PusCells", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bacteria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bacteria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MacroColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MacroTransparency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MacroTransparency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leukocyte", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leukocyte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nitrite", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrite", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Urobilinogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Urobilinogen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Protein", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Protein", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PH", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blood", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecificGravity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ketone", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ketone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bilirubin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bilirubin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Glucose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Glucose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MicroEpithelial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MicroEpithelial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MucousThreads", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MucousThreads", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmorphousMaterial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmorphousMaterial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PusCells", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PusCells", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bacteria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bacteria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, MacroColor, MacroTransparency, Leukocyte, Nitrite, Urobilinogen, Prote" +
                "in, PH, Blood, SpecificGravity, Ketone, Bilirubin, Glucose, MicroEpithelial, Muc" +
                "ousThreads, AmorphousMaterial, PusCells, rbc, bacteria, ofw_id FROM dbo.Clinic_M" +
                "icroscopy";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.Clinic_MicroscopyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.Clinic_MicroscopyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.Clinic_MicroscopyDataTable dataTable = new DatabaseDataSet.Clinic_MicroscopyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.Clinic_MicroscopyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Clinic_Microscopy");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_MacroColor, 
                    string Original_MacroTransparency, 
                    byte[] Original_Leukocyte, 
                    byte[] Original_Nitrite, 
                    string Original_Urobilinogen, 
                    byte[] Original_Protein, 
                    float Original_PH, 
                    string Original_Blood, 
                    float Original_SpecificGravity, 
                    byte[] Original_Ketone, 
                    byte[] Original_Bilirubin, 
                    byte[] Original_Glucose, 
                    string Original_MicroEpithelial, 
                    string Original_MucousThreads, 
                    string Original_AmorphousMaterial, 
                    string Original_PusCells, 
                    string Original_rbc, 
                    string Original_bacteria, 
                    int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_MacroColor == null)) {
                throw new global::System.ArgumentNullException("Original_MacroColor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MacroColor));
            }
            if ((Original_MacroTransparency == null)) {
                throw new global::System.ArgumentNullException("Original_MacroTransparency");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MacroTransparency));
            }
            if ((Original_Leukocyte == null)) {
                throw new global::System.ArgumentNullException("Original_Leukocyte");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((byte[])(Original_Leukocyte));
            }
            if ((Original_Nitrite == null)) {
                throw new global::System.ArgumentNullException("Original_Nitrite");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((byte[])(Original_Nitrite));
            }
            if ((Original_Urobilinogen == null)) {
                throw new global::System.ArgumentNullException("Original_Urobilinogen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Urobilinogen));
            }
            if ((Original_Protein == null)) {
                throw new global::System.ArgumentNullException("Original_Protein");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((byte[])(Original_Protein));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((float)(Original_PH));
            if ((Original_Blood == null)) {
                throw new global::System.ArgumentNullException("Original_Blood");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Blood));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((float)(Original_SpecificGravity));
            if ((Original_Ketone == null)) {
                throw new global::System.ArgumentNullException("Original_Ketone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte[])(Original_Ketone));
            }
            if ((Original_Bilirubin == null)) {
                throw new global::System.ArgumentNullException("Original_Bilirubin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((byte[])(Original_Bilirubin));
            }
            if ((Original_Glucose == null)) {
                throw new global::System.ArgumentNullException("Original_Glucose");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((byte[])(Original_Glucose));
            }
            if ((Original_MicroEpithelial == null)) {
                throw new global::System.ArgumentNullException("Original_MicroEpithelial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MicroEpithelial));
            }
            if ((Original_MucousThreads == null)) {
                throw new global::System.ArgumentNullException("Original_MucousThreads");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MucousThreads));
            }
            if ((Original_AmorphousMaterial == null)) {
                throw new global::System.ArgumentNullException("Original_AmorphousMaterial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_AmorphousMaterial));
            }
            if ((Original_PusCells == null)) {
                throw new global::System.ArgumentNullException("Original_PusCells");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PusCells));
            }
            if ((Original_rbc == null)) {
                throw new global::System.ArgumentNullException("Original_rbc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_rbc));
            }
            if ((Original_bacteria == null)) {
                throw new global::System.ArgumentNullException("Original_bacteria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_bacteria));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    string MacroColor, 
                    string MacroTransparency, 
                    byte[] Leukocyte, 
                    byte[] Nitrite, 
                    string Urobilinogen, 
                    byte[] Protein, 
                    float PH, 
                    string Blood, 
                    float SpecificGravity, 
                    byte[] Ketone, 
                    byte[] Bilirubin, 
                    byte[] Glucose, 
                    string MicroEpithelial, 
                    string MucousThreads, 
                    string AmorphousMaterial, 
                    string PusCells, 
                    string rbc, 
                    string bacteria, 
                    int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((MacroColor == null)) {
                throw new global::System.ArgumentNullException("MacroColor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MacroColor));
            }
            if ((MacroTransparency == null)) {
                throw new global::System.ArgumentNullException("MacroTransparency");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MacroTransparency));
            }
            if ((Leukocyte == null)) {
                throw new global::System.ArgumentNullException("Leukocyte");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((byte[])(Leukocyte));
            }
            if ((Nitrite == null)) {
                throw new global::System.ArgumentNullException("Nitrite");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(Nitrite));
            }
            if ((Urobilinogen == null)) {
                throw new global::System.ArgumentNullException("Urobilinogen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Urobilinogen));
            }
            if ((Protein == null)) {
                throw new global::System.ArgumentNullException("Protein");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(Protein));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((float)(PH));
            if ((Blood == null)) {
                throw new global::System.ArgumentNullException("Blood");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Blood));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((float)(SpecificGravity));
            if ((Ketone == null)) {
                throw new global::System.ArgumentNullException("Ketone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((byte[])(Ketone));
            }
            if ((Bilirubin == null)) {
                throw new global::System.ArgumentNullException("Bilirubin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((byte[])(Bilirubin));
            }
            if ((Glucose == null)) {
                throw new global::System.ArgumentNullException("Glucose");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((byte[])(Glucose));
            }
            if ((MicroEpithelial == null)) {
                throw new global::System.ArgumentNullException("MicroEpithelial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MicroEpithelial));
            }
            if ((MucousThreads == null)) {
                throw new global::System.ArgumentNullException("MucousThreads");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(MucousThreads));
            }
            if ((AmorphousMaterial == null)) {
                throw new global::System.ArgumentNullException("AmorphousMaterial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(AmorphousMaterial));
            }
            if ((PusCells == null)) {
                throw new global::System.ArgumentNullException("PusCells");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PusCells));
            }
            if ((rbc == null)) {
                throw new global::System.ArgumentNullException("rbc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(rbc));
            }
            if ((bacteria == null)) {
                throw new global::System.ArgumentNullException("bacteria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(bacteria));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    string MacroColor, 
                    string MacroTransparency, 
                    byte[] Leukocyte, 
                    byte[] Nitrite, 
                    string Urobilinogen, 
                    byte[] Protein, 
                    float PH, 
                    string Blood, 
                    float SpecificGravity, 
                    byte[] Ketone, 
                    byte[] Bilirubin, 
                    byte[] Glucose, 
                    string MicroEpithelial, 
                    string MucousThreads, 
                    string AmorphousMaterial, 
                    string PusCells, 
                    string rbc, 
                    string bacteria, 
                    int ofw_id, 
                    int Original_id, 
                    string Original_MacroColor, 
                    string Original_MacroTransparency, 
                    byte[] Original_Leukocyte, 
                    byte[] Original_Nitrite, 
                    string Original_Urobilinogen, 
                    byte[] Original_Protein, 
                    float Original_PH, 
                    string Original_Blood, 
                    float Original_SpecificGravity, 
                    byte[] Original_Ketone, 
                    byte[] Original_Bilirubin, 
                    byte[] Original_Glucose, 
                    string Original_MicroEpithelial, 
                    string Original_MucousThreads, 
                    string Original_AmorphousMaterial, 
                    string Original_PusCells, 
                    string Original_rbc, 
                    string Original_bacteria, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((MacroColor == null)) {
                throw new global::System.ArgumentNullException("MacroColor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MacroColor));
            }
            if ((MacroTransparency == null)) {
                throw new global::System.ArgumentNullException("MacroTransparency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MacroTransparency));
            }
            if ((Leukocyte == null)) {
                throw new global::System.ArgumentNullException("Leukocyte");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((byte[])(Leukocyte));
            }
            if ((Nitrite == null)) {
                throw new global::System.ArgumentNullException("Nitrite");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(Nitrite));
            }
            if ((Urobilinogen == null)) {
                throw new global::System.ArgumentNullException("Urobilinogen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Urobilinogen));
            }
            if ((Protein == null)) {
                throw new global::System.ArgumentNullException("Protein");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(Protein));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(PH));
            if ((Blood == null)) {
                throw new global::System.ArgumentNullException("Blood");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Blood));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(SpecificGravity));
            if ((Ketone == null)) {
                throw new global::System.ArgumentNullException("Ketone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((byte[])(Ketone));
            }
            if ((Bilirubin == null)) {
                throw new global::System.ArgumentNullException("Bilirubin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((byte[])(Bilirubin));
            }
            if ((Glucose == null)) {
                throw new global::System.ArgumentNullException("Glucose");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((byte[])(Glucose));
            }
            if ((MicroEpithelial == null)) {
                throw new global::System.ArgumentNullException("MicroEpithelial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MicroEpithelial));
            }
            if ((MucousThreads == null)) {
                throw new global::System.ArgumentNullException("MucousThreads");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(MucousThreads));
            }
            if ((AmorphousMaterial == null)) {
                throw new global::System.ArgumentNullException("AmorphousMaterial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(AmorphousMaterial));
            }
            if ((PusCells == null)) {
                throw new global::System.ArgumentNullException("PusCells");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PusCells));
            }
            if ((rbc == null)) {
                throw new global::System.ArgumentNullException("rbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(rbc));
            }
            if ((bacteria == null)) {
                throw new global::System.ArgumentNullException("bacteria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(bacteria));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_id));
            if ((Original_MacroColor == null)) {
                throw new global::System.ArgumentNullException("Original_MacroColor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_MacroColor));
            }
            if ((Original_MacroTransparency == null)) {
                throw new global::System.ArgumentNullException("Original_MacroTransparency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MacroTransparency));
            }
            if ((Original_Leukocyte == null)) {
                throw new global::System.ArgumentNullException("Original_Leukocyte");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((byte[])(Original_Leukocyte));
            }
            if ((Original_Nitrite == null)) {
                throw new global::System.ArgumentNullException("Original_Nitrite");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((byte[])(Original_Nitrite));
            }
            if ((Original_Urobilinogen == null)) {
                throw new global::System.ArgumentNullException("Original_Urobilinogen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Urobilinogen));
            }
            if ((Original_Protein == null)) {
                throw new global::System.ArgumentNullException("Original_Protein");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((byte[])(Original_Protein));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(Original_PH));
            if ((Original_Blood == null)) {
                throw new global::System.ArgumentNullException("Original_Blood");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Blood));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(Original_SpecificGravity));
            if ((Original_Ketone == null)) {
                throw new global::System.ArgumentNullException("Original_Ketone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte[])(Original_Ketone));
            }
            if ((Original_Bilirubin == null)) {
                throw new global::System.ArgumentNullException("Original_Bilirubin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((byte[])(Original_Bilirubin));
            }
            if ((Original_Glucose == null)) {
                throw new global::System.ArgumentNullException("Original_Glucose");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((byte[])(Original_Glucose));
            }
            if ((Original_MicroEpithelial == null)) {
                throw new global::System.ArgumentNullException("Original_MicroEpithelial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_MicroEpithelial));
            }
            if ((Original_MucousThreads == null)) {
                throw new global::System.ArgumentNullException("Original_MucousThreads");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_MucousThreads));
            }
            if ((Original_AmorphousMaterial == null)) {
                throw new global::System.ArgumentNullException("Original_AmorphousMaterial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_AmorphousMaterial));
            }
            if ((Original_PusCells == null)) {
                throw new global::System.ArgumentNullException("Original_PusCells");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_PusCells));
            }
            if ((Original_rbc == null)) {
                throw new global::System.ArgumentNullException("Original_rbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_rbc));
            }
            if ((Original_bacteria == null)) {
                throw new global::System.ArgumentNullException("Original_bacteria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_bacteria));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MacroColor, 
                    string MacroTransparency, 
                    byte[] Leukocyte, 
                    byte[] Nitrite, 
                    string Urobilinogen, 
                    byte[] Protein, 
                    float PH, 
                    string Blood, 
                    float SpecificGravity, 
                    byte[] Ketone, 
                    byte[] Bilirubin, 
                    byte[] Glucose, 
                    string MicroEpithelial, 
                    string MucousThreads, 
                    string AmorphousMaterial, 
                    string PusCells, 
                    string rbc, 
                    string bacteria, 
                    int ofw_id, 
                    int Original_id, 
                    string Original_MacroColor, 
                    string Original_MacroTransparency, 
                    byte[] Original_Leukocyte, 
                    byte[] Original_Nitrite, 
                    string Original_Urobilinogen, 
                    byte[] Original_Protein, 
                    float Original_PH, 
                    string Original_Blood, 
                    float Original_SpecificGravity, 
                    byte[] Original_Ketone, 
                    byte[] Original_Bilirubin, 
                    byte[] Original_Glucose, 
                    string Original_MicroEpithelial, 
                    string Original_MucousThreads, 
                    string Original_AmorphousMaterial, 
                    string Original_PusCells, 
                    string Original_rbc, 
                    string Original_bacteria, 
                    int Original_ofw_id) {
            return this.Update(Original_id, MacroColor, MacroTransparency, Leukocyte, Nitrite, Urobilinogen, Protein, PH, Blood, SpecificGravity, Ketone, Bilirubin, Glucose, MicroEpithelial, MucousThreads, AmorphousMaterial, PusCells, rbc, bacteria, ofw_id, Original_id, Original_MacroColor, Original_MacroTransparency, Original_Leukocyte, Original_Nitrite, Original_Urobilinogen, Original_Protein, Original_PH, Original_Blood, Original_SpecificGravity, Original_Ketone, Original_Bilirubin, Original_Glucose, Original_MicroEpithelial, Original_MucousThreads, Original_AmorphousMaterial, Original_PusCells, Original_rbc, Original_bacteria, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HematologyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HematologyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Hematology";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("wbc", "wbc");
            tableMapping.ColumnMappings.Add("rbc", "rbc");
            tableMapping.ColumnMappings.Add("hgb", "hgb");
            tableMapping.ColumnMappings.Add("hct", "hct");
            tableMapping.ColumnMappings.Add("platelets", "platelets");
            tableMapping.ColumnMappings.Add("neutrophil", "neutrophil");
            tableMapping.ColumnMappings.Add("lymphocytes", "lymphocytes");
            tableMapping.ColumnMappings.Add("monocyte", "monocyte");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Hematology] WHERE (([id] = @Original_id) AND ([wbc] = @Original_wbc) AND ([rbc] = @Original_rbc) AND ([hgb] = @Original_hgb) AND ([hct] = @Original_hct) AND ([platelets] = @Original_platelets) AND ([neutrophil] = @Original_neutrophil) AND ([lymphocytes] = @Original_lymphocytes) AND ([monocyte] = @Original_monocyte) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hgb", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hgb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hct", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_platelets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platelets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_neutrophil", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neutrophil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lymphocytes", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monocyte", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monocyte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Hematology] ([id], [wbc], [rbc], [hgb], [hct], [platelets], [neutrophil], [lymphocytes], [monocyte], [ofw_id]) VALUES (@id, @wbc, @rbc, @hgb, @hct, @platelets, @neutrophil, @lymphocytes, @monocyte, @ofw_id);
SELECT id, wbc, rbc, hgb, hct, platelets, neutrophil, lymphocytes, monocyte, ofw_id FROM Hematology WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hgb", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hgb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hct", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@platelets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platelets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@neutrophil", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neutrophil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymphocytes", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monocyte", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monocyte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Hematology] SET [id] = @id, [wbc] = @wbc, [rbc] = @rbc, [hgb] = @hgb, [hct] = @hct, [platelets] = @platelets, [neutrophil] = @neutrophil, [lymphocytes] = @lymphocytes, [monocyte] = @monocyte, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([wbc] = @Original_wbc) AND ([rbc] = @Original_rbc) AND ([hgb] = @Original_hgb) AND ([hct] = @Original_hct) AND ([platelets] = @Original_platelets) AND ([neutrophil] = @Original_neutrophil) AND ([lymphocytes] = @Original_lymphocytes) AND ([monocyte] = @Original_monocyte) AND ([ofw_id] = @Original_ofw_id));
SELECT id, wbc, rbc, hgb, hct, platelets, neutrophil, lymphocytes, monocyte, ofw_id FROM Hematology WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hgb", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hgb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hct", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@platelets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platelets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@neutrophil", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neutrophil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymphocytes", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monocyte", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monocyte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hgb", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hgb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hct", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_platelets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platelets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_neutrophil", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "neutrophil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lymphocytes", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monocyte", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monocyte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, wbc, rbc, hgb, hct, platelets, neutrophil, lymphocytes, monocyte, ofw_" +
                "id FROM dbo.Hematology";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.HematologyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.HematologyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.HematologyDataTable dataTable = new DatabaseDataSet.HematologyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.HematologyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Hematology");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, float Original_wbc, float Original_rbc, float Original_hgb, float Original_hct, int Original_platelets, float Original_neutrophil, float Original_lymphocytes, float Original_monocyte, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((float)(Original_wbc));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((float)(Original_rbc));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((float)(Original_hgb));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_hct));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_platelets));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_neutrophil));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((float)(Original_lymphocytes));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((float)(Original_monocyte));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, float wbc, float rbc, float hgb, float hct, int platelets, float neutrophil, float lymphocytes, float monocyte, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((float)(wbc));
            this.Adapter.InsertCommand.Parameters[2].Value = ((float)(rbc));
            this.Adapter.InsertCommand.Parameters[3].Value = ((float)(hgb));
            this.Adapter.InsertCommand.Parameters[4].Value = ((float)(hct));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(platelets));
            this.Adapter.InsertCommand.Parameters[6].Value = ((float)(neutrophil));
            this.Adapter.InsertCommand.Parameters[7].Value = ((float)(lymphocytes));
            this.Adapter.InsertCommand.Parameters[8].Value = ((float)(monocyte));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    float wbc, 
                    float rbc, 
                    float hgb, 
                    float hct, 
                    int platelets, 
                    float neutrophil, 
                    float lymphocytes, 
                    float monocyte, 
                    int ofw_id, 
                    int Original_id, 
                    float Original_wbc, 
                    float Original_rbc, 
                    float Original_hgb, 
                    float Original_hct, 
                    int Original_platelets, 
                    float Original_neutrophil, 
                    float Original_lymphocytes, 
                    float Original_monocyte, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(wbc));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(rbc));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(hgb));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(hct));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(platelets));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(neutrophil));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(lymphocytes));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(monocyte));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(Original_wbc));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(Original_rbc));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(Original_hgb));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(Original_hct));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_platelets));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(Original_neutrophil));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(Original_lymphocytes));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(Original_monocyte));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    float wbc, 
                    float rbc, 
                    float hgb, 
                    float hct, 
                    int platelets, 
                    float neutrophil, 
                    float lymphocytes, 
                    float monocyte, 
                    int ofw_id, 
                    int Original_id, 
                    float Original_wbc, 
                    float Original_rbc, 
                    float Original_hgb, 
                    float Original_hct, 
                    int Original_platelets, 
                    float Original_neutrophil, 
                    float Original_lymphocytes, 
                    float Original_monocyte, 
                    int Original_ofw_id) {
            return this.Update(Original_id, wbc, rbc, hgb, hct, platelets, neutrophil, lymphocytes, monocyte, ofw_id, Original_id, Original_wbc, Original_rbc, Original_hgb, Original_hct, Original_platelets, Original_neutrophil, Original_lymphocytes, Original_monocyte, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class historyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public historyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "history";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("med1", "med1");
            tableMapping.ColumnMappings.Add("med2", "med2");
            tableMapping.ColumnMappings.Add("comment1", "comment1");
            tableMapping.ColumnMappings.Add("comment2", "comment2");
            tableMapping.ColumnMappings.Add("height", "height");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("systolic", "systolic");
            tableMapping.ColumnMappings.Add("diastolic", "diastolic");
            tableMapping.ColumnMappings.Add("pulseRate", "pulseRate");
            tableMapping.ColumnMappings.Add("rhythm", "rhythm");
            tableMapping.ColumnMappings.Add("respiration", "respiration");
            tableMapping.ColumnMappings.Add("bmi", "bmi");
            tableMapping.ColumnMappings.Add("farCor1", "farCor1");
            tableMapping.ColumnMappings.Add("farCor2", "farCor2");
            tableMapping.ColumnMappings.Add("nearCor1", "nearCor1");
            tableMapping.ColumnMappings.Add("nearCor2", "nearCor2");
            tableMapping.ColumnMappings.Add("farUn1", "farUn1");
            tableMapping.ColumnMappings.Add("farUn2", "farUn2");
            tableMapping.ColumnMappings.Add("nearUn1", "nearUn1");
            tableMapping.ColumnMappings.Add("nearUn2", "nearUn2");
            tableMapping.ColumnMappings.Add("ishihara", "ishihara");
            tableMapping.ColumnMappings.Add("earRight", "earRight");
            tableMapping.ColumnMappings.Add("earLeft", "earLeft");
            tableMapping.ColumnMappings.Add("speech", "speech");
            tableMapping.ColumnMappings.Add("skin", "skin");
            tableMapping.ColumnMappings.Add("head", "head");
            tableMapping.ColumnMappings.Add("eyes", "eyes");
            tableMapping.ColumnMappings.Add("pupil", "pupil");
            tableMapping.ColumnMappings.Add("ears", "ears");
            tableMapping.ColumnMappings.Add("nose", "nose");
            tableMapping.ColumnMappings.Add("mouth", "mouth");
            tableMapping.ColumnMappings.Add("lymph", "lymph");
            tableMapping.ColumnMappings.Add("chestBreast", "chestBreast");
            tableMapping.ColumnMappings.Add("lungs", "lungs");
            tableMapping.ColumnMappings.Add("heart", "heart");
            tableMapping.ColumnMappings.Add("abdomen", "abdomen");
            tableMapping.ColumnMappings.Add("back", "back");
            tableMapping.ColumnMappings.Add("anus", "anus");
            tableMapping.ColumnMappings.Add("genito", "genito");
            tableMapping.ColumnMappings.Add("inguinals", "inguinals");
            tableMapping.ColumnMappings.Add("extremities", "extremities");
            tableMapping.ColumnMappings.Add("reflexes", "reflexes");
            tableMapping.ColumnMappings.Add("dental", "dental");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[history] WHERE (([id] = @Original_id) AND ([med1] = @Original_" +
                "med1) AND ([med2] = @Original_med2) AND ([comment1] = @Original_comment1) AND ([" +
                "comment2] = @Original_comment2) AND ([height] = @Original_height) AND ([weight] " +
                "= @Original_weight) AND ([systolic] = @Original_systolic) AND ([diastolic] = @Or" +
                "iginal_diastolic) AND ([pulseRate] = @Original_pulseRate) AND ([rhythm] = @Origi" +
                "nal_rhythm) AND ([respiration] = @Original_respiration) AND ([bmi] = @Original_b" +
                "mi) AND ([farCor1] = @Original_farCor1) AND ([farCor2] = @Original_farCor2) AND " +
                "([nearCor1] = @Original_nearCor1) AND ([nearCor2] = @Original_nearCor2) AND ([fa" +
                "rUn1] = @Original_farUn1) AND ([farUn2] = @Original_farUn2) AND ([nearUn1] = @Or" +
                "iginal_nearUn1) AND ([nearUn2] = @Original_nearUn2) AND ([ishihara] = @Original_" +
                "ishihara) AND ([earRight] = @Original_earRight) AND ([earLeft] = @Original_earLe" +
                "ft) AND ([speech] = @Original_speech) AND ([skin] = @Original_skin) AND ([head] " +
                "= @Original_head) AND ([eyes] = @Original_eyes) AND ([pupil] = @Original_pupil) " +
                "AND ([ears] = @Original_ears) AND ([nose] = @Original_nose) AND ([mouth] = @Orig" +
                "inal_mouth) AND ([lymph] = @Original_lymph) AND ([chestBreast] = @Original_chest" +
                "Breast) AND ([lungs] = @Original_lungs) AND ([heart] = @Original_heart) AND ([ab" +
                "domen] = @Original_abdomen) AND ([back] = @Original_back) AND ([anus] = @Origina" +
                "l_anus) AND ([genito] = @Original_genito) AND ([inguinals] = @Original_inguinals" +
                ") AND ([extremities] = @Original_extremities) AND ([reflexes] = @Original_reflex" +
                "es) AND ([dental] = @Original_dental) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med1", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med2", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comment1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comment2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_height", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_systolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "systolic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diastolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diastolic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pulseRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pulseRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rhythm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rhythm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_respiration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bmi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bmi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ishihara", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ishihara", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_earRight", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earRight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_earLeft", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earLeft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_speech", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "speech", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_skin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_head", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_eyes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eyes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pupil", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pupil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ears", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mouth", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mouth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lymph", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymph", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_chestBreast", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chestBreast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lungs", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lungs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_heart", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "heart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_abdomen", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abdomen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_back", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "back", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_anus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_genito", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "genito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inguinals", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inguinals", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_extremities", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "extremities", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reflexes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reflexes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dental", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[history] ([id], [med1], [med2], [comment1], [comment2], [height], [weight], [systolic], [diastolic], [pulseRate], [rhythm], [respiration], [bmi], [farCor1], [farCor2], [nearCor1], [nearCor2], [farUn1], [farUn2], [nearUn1], [nearUn2], [ishihara], [earRight], [earLeft], [speech], [skin], [head], [eyes], [pupil], [ears], [nose], [mouth], [lymph], [chestBreast], [lungs], [heart], [abdomen], [back], [anus], [genito], [inguinals], [extremities], [reflexes], [dental], [ofw_id]) VALUES (@id, @med1, @med2, @comment1, @comment2, @height, @weight, @systolic, @diastolic, @pulseRate, @rhythm, @respiration, @bmi, @farCor1, @farCor2, @nearCor1, @nearCor2, @farUn1, @farUn2, @nearUn1, @nearUn2, @ishihara, @earRight, @earLeft, @speech, @skin, @head, @eyes, @pupil, @ears, @nose, @mouth, @lymph, @chestBreast, @lungs, @heart, @abdomen, @back, @anus, @genito, @inguinals, @extremities, @reflexes, @dental, @ofw_id);
SELECT id, med1, med2, comment1, comment2, height, weight, systolic, diastolic, pulseRate, rhythm, respiration, bmi, farCor1, farCor2, nearCor1, nearCor2, farUn1, farUn2, nearUn1, nearUn2, ishihara, earRight, earLeft, speech, skin, head, eyes, pupil, ears, nose, mouth, lymph, chestBreast, lungs, heart, abdomen, back, anus, genito, inguinals, extremities, reflexes, dental, ofw_id FROM history WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med1", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med2", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comment1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comment2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@height", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@systolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "systolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diastolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diastolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pulseRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pulseRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rhythm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rhythm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respiration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bmi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bmi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ishihara", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ishihara", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@earRight", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earRight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@earLeft", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earLeft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@speech", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "speech", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@skin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@head", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eyes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eyes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pupil", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pupil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ears", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mouth", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mouth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymph", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chestBreast", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chestBreast", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lungs", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lungs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@heart", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "heart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@abdomen", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abdomen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@back", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "back", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@genito", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "genito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inguinals", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inguinals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@extremities", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "extremities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reflexes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reflexes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dental", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[history] SET [id] = @id, [med1] = @med1, [med2] = @med2, [comment1]" +
                " = @comment1, [comment2] = @comment2, [height] = @height, [weight] = @weight, [s" +
                "ystolic] = @systolic, [diastolic] = @diastolic, [pulseRate] = @pulseRate, [rhyth" +
                "m] = @rhythm, [respiration] = @respiration, [bmi] = @bmi, [farCor1] = @farCor1, " +
                "[farCor2] = @farCor2, [nearCor1] = @nearCor1, [nearCor2] = @nearCor2, [farUn1] =" +
                " @farUn1, [farUn2] = @farUn2, [nearUn1] = @nearUn1, [nearUn2] = @nearUn2, [ishih" +
                "ara] = @ishihara, [earRight] = @earRight, [earLeft] = @earLeft, [speech] = @spee" +
                "ch, [skin] = @skin, [head] = @head, [eyes] = @eyes, [pupil] = @pupil, [ears] = @" +
                "ears, [nose] = @nose, [mouth] = @mouth, [lymph] = @lymph, [chestBreast] = @chest" +
                "Breast, [lungs] = @lungs, [heart] = @heart, [abdomen] = @abdomen, [back] = @back" +
                ", [anus] = @anus, [genito] = @genito, [inguinals] = @inguinals, [extremities] = " +
                "@extremities, [reflexes] = @reflexes, [dental] = @dental, [ofw_id] = @ofw_id WHE" +
                "RE (([id] = @Original_id) AND ([med1] = @Original_med1) AND ([med2] = @Original_" +
                "med2) AND ([comment1] = @Original_comment1) AND ([comment2] = @Original_comment2" +
                ") AND ([height] = @Original_height) AND ([weight] = @Original_weight) AND ([syst" +
                "olic] = @Original_systolic) AND ([diastolic] = @Original_diastolic) AND ([pulseR" +
                "ate] = @Original_pulseRate) AND ([rhythm] = @Original_rhythm) AND ([respiration]" +
                " = @Original_respiration) AND ([bmi] = @Original_bmi) AND ([farCor1] = @Original" +
                "_farCor1) AND ([farCor2] = @Original_farCor2) AND ([nearCor1] = @Original_nearCo" +
                "r1) AND ([nearCor2] = @Original_nearCor2) AND ([farUn1] = @Original_farUn1) AND " +
                "([farUn2] = @Original_farUn2) AND ([nearUn1] = @Original_nearUn1) AND ([nearUn2]" +
                " = @Original_nearUn2) AND ([ishihara] = @Original_ishihara) AND ([earRight] = @O" +
                "riginal_earRight) AND ([earLeft] = @Original_earLeft) AND ([speech] = @Original_" +
                "speech) AND ([skin] = @Original_skin) AND ([head] = @Original_head) AND ([eyes] " +
                "= @Original_eyes) AND ([pupil] = @Original_pupil) AND ([ears] = @Original_ears) " +
                "AND ([nose] = @Original_nose) AND ([mouth] = @Original_mouth) AND ([lymph] = @Or" +
                "iginal_lymph) AND ([chestBreast] = @Original_chestBreast) AND ([lungs] = @Origin" +
                "al_lungs) AND ([heart] = @Original_heart) AND ([abdomen] = @Original_abdomen) AN" +
                "D ([back] = @Original_back) AND ([anus] = @Original_anus) AND ([genito] = @Origi" +
                "nal_genito) AND ([inguinals] = @Original_inguinals) AND ([extremities] = @Origin" +
                "al_extremities) AND ([reflexes] = @Original_reflexes) AND ([dental] = @Original_" +
                "dental) AND ([ofw_id] = @Original_ofw_id));\r\nSELECT id, med1, med2, comment1, co" +
                "mment2, height, weight, systolic, diastolic, pulseRate, rhythm, respiration, bmi" +
                ", farCor1, farCor2, nearCor1, nearCor2, farUn1, farUn2, nearUn1, nearUn2, ishiha" +
                "ra, earRight, earLeft, speech, skin, head, eyes, pupil, ears, nose, mouth, lymph" +
                ", chestBreast, lungs, heart, abdomen, back, anus, genito, inguinals, extremities" +
                ", reflexes, dental, ofw_id FROM history WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med1", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med2", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comment1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comment2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@height", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@systolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "systolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diastolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diastolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pulseRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pulseRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rhythm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rhythm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respiration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bmi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bmi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@farUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nearUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ishihara", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ishihara", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@earRight", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earRight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@earLeft", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earLeft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@speech", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "speech", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@skin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@head", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eyes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eyes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pupil", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pupil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ears", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mouth", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mouth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymph", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chestBreast", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chestBreast", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lungs", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lungs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@heart", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "heart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@abdomen", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abdomen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@back", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "back", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@genito", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "genito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inguinals", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inguinals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@extremities", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "extremities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reflexes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reflexes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dental", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med1", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med2", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comment1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comment2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comment2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_height", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_systolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "systolic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_diastolic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diastolic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pulseRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pulseRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rhythm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rhythm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_respiration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bmi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bmi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farCor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearCor1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearCor2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearCor2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_farUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "farUn2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearUn1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nearUn2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nearUn2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ishihara", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ishihara", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_earRight", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earRight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_earLeft", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earLeft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_speech", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "speech", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_skin", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_head", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_eyes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eyes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pupil", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pupil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ears", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nose", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mouth", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mouth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lymph", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymph", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_chestBreast", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chestBreast", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lungs", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lungs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_heart", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "heart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_abdomen", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abdomen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_back", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "back", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_anus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_genito", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "genito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inguinals", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inguinals", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_extremities", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "extremities", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reflexes", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reflexes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dental", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, med1, med2, comment1, comment2, height, weight, systolic, diastolic, pulseRate, rhythm, respiration, bmi, farCor1, farCor2, nearCor1, nearCor2, farUn1, farUn2, nearUn1, nearUn2, ishihara, earRight, earLeft, speech, skin, head, eyes, pupil, ears, nose, mouth, lymph, chestBreast, lungs, heart, abdomen, back, anus, genito, inguinals, extremities, reflexes, dental, ofw_id FROM dbo.history";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.historyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.historyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.historyDataTable dataTable = new DatabaseDataSet.historyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.historyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "history");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    byte[] Original_med1, 
                    byte[] Original_med2, 
                    string Original_comment1, 
                    string Original_comment2, 
                    int Original_height, 
                    int Original_weight, 
                    int Original_systolic, 
                    int Original_diastolic, 
                    int Original_pulseRate, 
                    int Original_rhythm, 
                    int Original_respiration, 
                    int Original_bmi, 
                    int Original_farCor1, 
                    int Original_farCor2, 
                    int Original_nearCor1, 
                    int Original_nearCor2, 
                    int Original_farUn1, 
                    int Original_farUn2, 
                    int Original_nearUn1, 
                    int Original_nearUn2, 
                    byte[] Original_ishihara, 
                    byte[] Original_earRight, 
                    byte[] Original_earLeft, 
                    byte[] Original_speech, 
                    byte[] Original_skin, 
                    byte[] Original_head, 
                    byte[] Original_eyes, 
                    byte[] Original_pupil, 
                    byte[] Original_ears, 
                    byte[] Original_nose, 
                    byte[] Original_mouth, 
                    byte[] Original_lymph, 
                    byte[] Original_chestBreast, 
                    byte[] Original_lungs, 
                    byte[] Original_heart, 
                    byte[] Original_abdomen, 
                    byte[] Original_back, 
                    byte[] Original_anus, 
                    byte[] Original_genito, 
                    byte[] Original_inguinals, 
                    byte[] Original_extremities, 
                    byte[] Original_reflexes, 
                    byte[] Original_dental, 
                    int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_med1 == null)) {
                throw new global::System.ArgumentNullException("Original_med1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_med1));
            }
            if ((Original_med2 == null)) {
                throw new global::System.ArgumentNullException("Original_med2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((byte[])(Original_med2));
            }
            if ((Original_comment1 == null)) {
                throw new global::System.ArgumentNullException("Original_comment1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_comment1));
            }
            if ((Original_comment2 == null)) {
                throw new global::System.ArgumentNullException("Original_comment2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_comment2));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_height));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_weight));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_systolic));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_diastolic));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_pulseRate));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_rhythm));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_respiration));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_bmi));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_farCor1));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_farCor2));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_nearCor1));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_nearCor2));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_farUn1));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_farUn2));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_nearUn1));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_nearUn2));
            if ((Original_ishihara == null)) {
                throw new global::System.ArgumentNullException("Original_ishihara");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((byte[])(Original_ishihara));
            }
            if ((Original_earRight == null)) {
                throw new global::System.ArgumentNullException("Original_earRight");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((byte[])(Original_earRight));
            }
            if ((Original_earLeft == null)) {
                throw new global::System.ArgumentNullException("Original_earLeft");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((byte[])(Original_earLeft));
            }
            if ((Original_speech == null)) {
                throw new global::System.ArgumentNullException("Original_speech");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((byte[])(Original_speech));
            }
            if ((Original_skin == null)) {
                throw new global::System.ArgumentNullException("Original_skin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((byte[])(Original_skin));
            }
            if ((Original_head == null)) {
                throw new global::System.ArgumentNullException("Original_head");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((byte[])(Original_head));
            }
            if ((Original_eyes == null)) {
                throw new global::System.ArgumentNullException("Original_eyes");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((byte[])(Original_eyes));
            }
            if ((Original_pupil == null)) {
                throw new global::System.ArgumentNullException("Original_pupil");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((byte[])(Original_pupil));
            }
            if ((Original_ears == null)) {
                throw new global::System.ArgumentNullException("Original_ears");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((byte[])(Original_ears));
            }
            if ((Original_nose == null)) {
                throw new global::System.ArgumentNullException("Original_nose");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((byte[])(Original_nose));
            }
            if ((Original_mouth == null)) {
                throw new global::System.ArgumentNullException("Original_mouth");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((byte[])(Original_mouth));
            }
            if ((Original_lymph == null)) {
                throw new global::System.ArgumentNullException("Original_lymph");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((byte[])(Original_lymph));
            }
            if ((Original_chestBreast == null)) {
                throw new global::System.ArgumentNullException("Original_chestBreast");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((byte[])(Original_chestBreast));
            }
            if ((Original_lungs == null)) {
                throw new global::System.ArgumentNullException("Original_lungs");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((byte[])(Original_lungs));
            }
            if ((Original_heart == null)) {
                throw new global::System.ArgumentNullException("Original_heart");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((byte[])(Original_heart));
            }
            if ((Original_abdomen == null)) {
                throw new global::System.ArgumentNullException("Original_abdomen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((byte[])(Original_abdomen));
            }
            if ((Original_back == null)) {
                throw new global::System.ArgumentNullException("Original_back");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((byte[])(Original_back));
            }
            if ((Original_anus == null)) {
                throw new global::System.ArgumentNullException("Original_anus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((byte[])(Original_anus));
            }
            if ((Original_genito == null)) {
                throw new global::System.ArgumentNullException("Original_genito");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((byte[])(Original_genito));
            }
            if ((Original_inguinals == null)) {
                throw new global::System.ArgumentNullException("Original_inguinals");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((byte[])(Original_inguinals));
            }
            if ((Original_extremities == null)) {
                throw new global::System.ArgumentNullException("Original_extremities");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((byte[])(Original_extremities));
            }
            if ((Original_reflexes == null)) {
                throw new global::System.ArgumentNullException("Original_reflexes");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((byte[])(Original_reflexes));
            }
            if ((Original_dental == null)) {
                throw new global::System.ArgumentNullException("Original_dental");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((byte[])(Original_dental));
            }
            this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    byte[] med1, 
                    byte[] med2, 
                    string comment1, 
                    string comment2, 
                    int height, 
                    int weight, 
                    int systolic, 
                    int diastolic, 
                    int pulseRate, 
                    int rhythm, 
                    int respiration, 
                    int bmi, 
                    int farCor1, 
                    int farCor2, 
                    int nearCor1, 
                    int nearCor2, 
                    int farUn1, 
                    int farUn2, 
                    int nearUn1, 
                    int nearUn2, 
                    byte[] ishihara, 
                    byte[] earRight, 
                    byte[] earLeft, 
                    byte[] speech, 
                    byte[] skin, 
                    byte[] head, 
                    byte[] eyes, 
                    byte[] pupil, 
                    byte[] ears, 
                    byte[] nose, 
                    byte[] mouth, 
                    byte[] lymph, 
                    byte[] chestBreast, 
                    byte[] lungs, 
                    byte[] heart, 
                    byte[] abdomen, 
                    byte[] back, 
                    byte[] anus, 
                    byte[] genito, 
                    byte[] inguinals, 
                    byte[] extremities, 
                    byte[] reflexes, 
                    byte[] dental, 
                    int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((med1 == null)) {
                throw new global::System.ArgumentNullException("med1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(med1));
            }
            if ((med2 == null)) {
                throw new global::System.ArgumentNullException("med2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte[])(med2));
            }
            if ((comment1 == null)) {
                throw new global::System.ArgumentNullException("comment1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(comment1));
            }
            if ((comment2 == null)) {
                throw new global::System.ArgumentNullException("comment2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(comment2));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(height));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(weight));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(systolic));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(diastolic));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(pulseRate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(rhythm));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(respiration));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(bmi));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(farCor1));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(farCor2));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(nearCor1));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(nearCor2));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(farUn1));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(farUn2));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(nearUn1));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(nearUn2));
            if ((ishihara == null)) {
                throw new global::System.ArgumentNullException("ishihara");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte[])(ishihara));
            }
            if ((earRight == null)) {
                throw new global::System.ArgumentNullException("earRight");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((byte[])(earRight));
            }
            if ((earLeft == null)) {
                throw new global::System.ArgumentNullException("earLeft");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((byte[])(earLeft));
            }
            if ((speech == null)) {
                throw new global::System.ArgumentNullException("speech");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((byte[])(speech));
            }
            if ((skin == null)) {
                throw new global::System.ArgumentNullException("skin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((byte[])(skin));
            }
            if ((head == null)) {
                throw new global::System.ArgumentNullException("head");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((byte[])(head));
            }
            if ((eyes == null)) {
                throw new global::System.ArgumentNullException("eyes");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((byte[])(eyes));
            }
            if ((pupil == null)) {
                throw new global::System.ArgumentNullException("pupil");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte[])(pupil));
            }
            if ((ears == null)) {
                throw new global::System.ArgumentNullException("ears");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte[])(ears));
            }
            if ((nose == null)) {
                throw new global::System.ArgumentNullException("nose");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((byte[])(nose));
            }
            if ((mouth == null)) {
                throw new global::System.ArgumentNullException("mouth");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((byte[])(mouth));
            }
            if ((lymph == null)) {
                throw new global::System.ArgumentNullException("lymph");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((byte[])(lymph));
            }
            if ((chestBreast == null)) {
                throw new global::System.ArgumentNullException("chestBreast");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((byte[])(chestBreast));
            }
            if ((lungs == null)) {
                throw new global::System.ArgumentNullException("lungs");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((byte[])(lungs));
            }
            if ((heart == null)) {
                throw new global::System.ArgumentNullException("heart");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((byte[])(heart));
            }
            if ((abdomen == null)) {
                throw new global::System.ArgumentNullException("abdomen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((byte[])(abdomen));
            }
            if ((back == null)) {
                throw new global::System.ArgumentNullException("back");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((byte[])(back));
            }
            if ((anus == null)) {
                throw new global::System.ArgumentNullException("anus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((byte[])(anus));
            }
            if ((genito == null)) {
                throw new global::System.ArgumentNullException("genito");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((byte[])(genito));
            }
            if ((inguinals == null)) {
                throw new global::System.ArgumentNullException("inguinals");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((byte[])(inguinals));
            }
            if ((extremities == null)) {
                throw new global::System.ArgumentNullException("extremities");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((byte[])(extremities));
            }
            if ((reflexes == null)) {
                throw new global::System.ArgumentNullException("reflexes");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((byte[])(reflexes));
            }
            if ((dental == null)) {
                throw new global::System.ArgumentNullException("dental");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((byte[])(dental));
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    byte[] med1, 
                    byte[] med2, 
                    string comment1, 
                    string comment2, 
                    int height, 
                    int weight, 
                    int systolic, 
                    int diastolic, 
                    int pulseRate, 
                    int rhythm, 
                    int respiration, 
                    int bmi, 
                    int farCor1, 
                    int farCor2, 
                    int nearCor1, 
                    int nearCor2, 
                    int farUn1, 
                    int farUn2, 
                    int nearUn1, 
                    int nearUn2, 
                    byte[] ishihara, 
                    byte[] earRight, 
                    byte[] earLeft, 
                    byte[] speech, 
                    byte[] skin, 
                    byte[] head, 
                    byte[] eyes, 
                    byte[] pupil, 
                    byte[] ears, 
                    byte[] nose, 
                    byte[] mouth, 
                    byte[] lymph, 
                    byte[] chestBreast, 
                    byte[] lungs, 
                    byte[] heart, 
                    byte[] abdomen, 
                    byte[] back, 
                    byte[] anus, 
                    byte[] genito, 
                    byte[] inguinals, 
                    byte[] extremities, 
                    byte[] reflexes, 
                    byte[] dental, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_med1, 
                    byte[] Original_med2, 
                    string Original_comment1, 
                    string Original_comment2, 
                    int Original_height, 
                    int Original_weight, 
                    int Original_systolic, 
                    int Original_diastolic, 
                    int Original_pulseRate, 
                    int Original_rhythm, 
                    int Original_respiration, 
                    int Original_bmi, 
                    int Original_farCor1, 
                    int Original_farCor2, 
                    int Original_nearCor1, 
                    int Original_nearCor2, 
                    int Original_farUn1, 
                    int Original_farUn2, 
                    int Original_nearUn1, 
                    int Original_nearUn2, 
                    byte[] Original_ishihara, 
                    byte[] Original_earRight, 
                    byte[] Original_earLeft, 
                    byte[] Original_speech, 
                    byte[] Original_skin, 
                    byte[] Original_head, 
                    byte[] Original_eyes, 
                    byte[] Original_pupil, 
                    byte[] Original_ears, 
                    byte[] Original_nose, 
                    byte[] Original_mouth, 
                    byte[] Original_lymph, 
                    byte[] Original_chestBreast, 
                    byte[] Original_lungs, 
                    byte[] Original_heart, 
                    byte[] Original_abdomen, 
                    byte[] Original_back, 
                    byte[] Original_anus, 
                    byte[] Original_genito, 
                    byte[] Original_inguinals, 
                    byte[] Original_extremities, 
                    byte[] Original_reflexes, 
                    byte[] Original_dental, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((med1 == null)) {
                throw new global::System.ArgumentNullException("med1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(med1));
            }
            if ((med2 == null)) {
                throw new global::System.ArgumentNullException("med2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte[])(med2));
            }
            if ((comment1 == null)) {
                throw new global::System.ArgumentNullException("comment1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(comment1));
            }
            if ((comment2 == null)) {
                throw new global::System.ArgumentNullException("comment2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(comment2));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(height));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(weight));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(systolic));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(diastolic));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(pulseRate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(rhythm));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(respiration));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(bmi));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(farCor1));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(farCor2));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(nearCor1));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(nearCor2));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(farUn1));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(farUn2));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(nearUn1));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(nearUn2));
            if ((ishihara == null)) {
                throw new global::System.ArgumentNullException("ishihara");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte[])(ishihara));
            }
            if ((earRight == null)) {
                throw new global::System.ArgumentNullException("earRight");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((byte[])(earRight));
            }
            if ((earLeft == null)) {
                throw new global::System.ArgumentNullException("earLeft");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((byte[])(earLeft));
            }
            if ((speech == null)) {
                throw new global::System.ArgumentNullException("speech");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((byte[])(speech));
            }
            if ((skin == null)) {
                throw new global::System.ArgumentNullException("skin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((byte[])(skin));
            }
            if ((head == null)) {
                throw new global::System.ArgumentNullException("head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((byte[])(head));
            }
            if ((eyes == null)) {
                throw new global::System.ArgumentNullException("eyes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((byte[])(eyes));
            }
            if ((pupil == null)) {
                throw new global::System.ArgumentNullException("pupil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte[])(pupil));
            }
            if ((ears == null)) {
                throw new global::System.ArgumentNullException("ears");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte[])(ears));
            }
            if ((nose == null)) {
                throw new global::System.ArgumentNullException("nose");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte[])(nose));
            }
            if ((mouth == null)) {
                throw new global::System.ArgumentNullException("mouth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((byte[])(mouth));
            }
            if ((lymph == null)) {
                throw new global::System.ArgumentNullException("lymph");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((byte[])(lymph));
            }
            if ((chestBreast == null)) {
                throw new global::System.ArgumentNullException("chestBreast");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((byte[])(chestBreast));
            }
            if ((lungs == null)) {
                throw new global::System.ArgumentNullException("lungs");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((byte[])(lungs));
            }
            if ((heart == null)) {
                throw new global::System.ArgumentNullException("heart");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((byte[])(heart));
            }
            if ((abdomen == null)) {
                throw new global::System.ArgumentNullException("abdomen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((byte[])(abdomen));
            }
            if ((back == null)) {
                throw new global::System.ArgumentNullException("back");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((byte[])(back));
            }
            if ((anus == null)) {
                throw new global::System.ArgumentNullException("anus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((byte[])(anus));
            }
            if ((genito == null)) {
                throw new global::System.ArgumentNullException("genito");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((byte[])(genito));
            }
            if ((inguinals == null)) {
                throw new global::System.ArgumentNullException("inguinals");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((byte[])(inguinals));
            }
            if ((extremities == null)) {
                throw new global::System.ArgumentNullException("extremities");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((byte[])(extremities));
            }
            if ((reflexes == null)) {
                throw new global::System.ArgumentNullException("reflexes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((byte[])(reflexes));
            }
            if ((dental == null)) {
                throw new global::System.ArgumentNullException("dental");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((byte[])(dental));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_id));
            if ((Original_med1 == null)) {
                throw new global::System.ArgumentNullException("Original_med1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((byte[])(Original_med1));
            }
            if ((Original_med2 == null)) {
                throw new global::System.ArgumentNullException("Original_med2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((byte[])(Original_med2));
            }
            if ((Original_comment1 == null)) {
                throw new global::System.ArgumentNullException("Original_comment1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_comment1));
            }
            if ((Original_comment2 == null)) {
                throw new global::System.ArgumentNullException("Original_comment2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_comment2));
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_height));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_weight));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_systolic));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_diastolic));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_pulseRate));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_rhythm));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_respiration));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_bmi));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_farCor1));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_farCor2));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_nearCor1));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_nearCor2));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_farUn1));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_farUn2));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_nearUn1));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_nearUn2));
            if ((Original_ishihara == null)) {
                throw new global::System.ArgumentNullException("Original_ishihara");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((byte[])(Original_ishihara));
            }
            if ((Original_earRight == null)) {
                throw new global::System.ArgumentNullException("Original_earRight");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((byte[])(Original_earRight));
            }
            if ((Original_earLeft == null)) {
                throw new global::System.ArgumentNullException("Original_earLeft");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((byte[])(Original_earLeft));
            }
            if ((Original_speech == null)) {
                throw new global::System.ArgumentNullException("Original_speech");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((byte[])(Original_speech));
            }
            if ((Original_skin == null)) {
                throw new global::System.ArgumentNullException("Original_skin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((byte[])(Original_skin));
            }
            if ((Original_head == null)) {
                throw new global::System.ArgumentNullException("Original_head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((byte[])(Original_head));
            }
            if ((Original_eyes == null)) {
                throw new global::System.ArgumentNullException("Original_eyes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((byte[])(Original_eyes));
            }
            if ((Original_pupil == null)) {
                throw new global::System.ArgumentNullException("Original_pupil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((byte[])(Original_pupil));
            }
            if ((Original_ears == null)) {
                throw new global::System.ArgumentNullException("Original_ears");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((byte[])(Original_ears));
            }
            if ((Original_nose == null)) {
                throw new global::System.ArgumentNullException("Original_nose");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((byte[])(Original_nose));
            }
            if ((Original_mouth == null)) {
                throw new global::System.ArgumentNullException("Original_mouth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((byte[])(Original_mouth));
            }
            if ((Original_lymph == null)) {
                throw new global::System.ArgumentNullException("Original_lymph");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((byte[])(Original_lymph));
            }
            if ((Original_chestBreast == null)) {
                throw new global::System.ArgumentNullException("Original_chestBreast");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((byte[])(Original_chestBreast));
            }
            if ((Original_lungs == null)) {
                throw new global::System.ArgumentNullException("Original_lungs");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((byte[])(Original_lungs));
            }
            if ((Original_heart == null)) {
                throw new global::System.ArgumentNullException("Original_heart");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((byte[])(Original_heart));
            }
            if ((Original_abdomen == null)) {
                throw new global::System.ArgumentNullException("Original_abdomen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((byte[])(Original_abdomen));
            }
            if ((Original_back == null)) {
                throw new global::System.ArgumentNullException("Original_back");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((byte[])(Original_back));
            }
            if ((Original_anus == null)) {
                throw new global::System.ArgumentNullException("Original_anus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((byte[])(Original_anus));
            }
            if ((Original_genito == null)) {
                throw new global::System.ArgumentNullException("Original_genito");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((byte[])(Original_genito));
            }
            if ((Original_inguinals == null)) {
                throw new global::System.ArgumentNullException("Original_inguinals");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((byte[])(Original_inguinals));
            }
            if ((Original_extremities == null)) {
                throw new global::System.ArgumentNullException("Original_extremities");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((byte[])(Original_extremities));
            }
            if ((Original_reflexes == null)) {
                throw new global::System.ArgumentNullException("Original_reflexes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((byte[])(Original_reflexes));
            }
            if ((Original_dental == null)) {
                throw new global::System.ArgumentNullException("Original_dental");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((byte[])(Original_dental));
            }
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte[] med1, 
                    byte[] med2, 
                    string comment1, 
                    string comment2, 
                    int height, 
                    int weight, 
                    int systolic, 
                    int diastolic, 
                    int pulseRate, 
                    int rhythm, 
                    int respiration, 
                    int bmi, 
                    int farCor1, 
                    int farCor2, 
                    int nearCor1, 
                    int nearCor2, 
                    int farUn1, 
                    int farUn2, 
                    int nearUn1, 
                    int nearUn2, 
                    byte[] ishihara, 
                    byte[] earRight, 
                    byte[] earLeft, 
                    byte[] speech, 
                    byte[] skin, 
                    byte[] head, 
                    byte[] eyes, 
                    byte[] pupil, 
                    byte[] ears, 
                    byte[] nose, 
                    byte[] mouth, 
                    byte[] lymph, 
                    byte[] chestBreast, 
                    byte[] lungs, 
                    byte[] heart, 
                    byte[] abdomen, 
                    byte[] back, 
                    byte[] anus, 
                    byte[] genito, 
                    byte[] inguinals, 
                    byte[] extremities, 
                    byte[] reflexes, 
                    byte[] dental, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_med1, 
                    byte[] Original_med2, 
                    string Original_comment1, 
                    string Original_comment2, 
                    int Original_height, 
                    int Original_weight, 
                    int Original_systolic, 
                    int Original_diastolic, 
                    int Original_pulseRate, 
                    int Original_rhythm, 
                    int Original_respiration, 
                    int Original_bmi, 
                    int Original_farCor1, 
                    int Original_farCor2, 
                    int Original_nearCor1, 
                    int Original_nearCor2, 
                    int Original_farUn1, 
                    int Original_farUn2, 
                    int Original_nearUn1, 
                    int Original_nearUn2, 
                    byte[] Original_ishihara, 
                    byte[] Original_earRight, 
                    byte[] Original_earLeft, 
                    byte[] Original_speech, 
                    byte[] Original_skin, 
                    byte[] Original_head, 
                    byte[] Original_eyes, 
                    byte[] Original_pupil, 
                    byte[] Original_ears, 
                    byte[] Original_nose, 
                    byte[] Original_mouth, 
                    byte[] Original_lymph, 
                    byte[] Original_chestBreast, 
                    byte[] Original_lungs, 
                    byte[] Original_heart, 
                    byte[] Original_abdomen, 
                    byte[] Original_back, 
                    byte[] Original_anus, 
                    byte[] Original_genito, 
                    byte[] Original_inguinals, 
                    byte[] Original_extremities, 
                    byte[] Original_reflexes, 
                    byte[] Original_dental, 
                    int Original_ofw_id) {
            return this.Update(Original_id, med1, med2, comment1, comment2, height, weight, systolic, diastolic, pulseRate, rhythm, respiration, bmi, farCor1, farCor2, nearCor1, nearCor2, farUn1, farUn2, nearUn1, nearUn2, ishihara, earRight, earLeft, speech, skin, head, eyes, pupil, ears, nose, mouth, lymph, chestBreast, lungs, heart, abdomen, back, anus, genito, inguinals, extremities, reflexes, dental, ofw_id, Original_id, Original_med1, Original_med2, Original_comment1, Original_comment2, Original_height, Original_weight, Original_systolic, Original_diastolic, Original_pulseRate, Original_rhythm, Original_respiration, Original_bmi, Original_farCor1, Original_farCor2, Original_nearCor1, Original_nearCor2, Original_farUn1, Original_farUn2, Original_nearUn1, Original_nearUn2, Original_ishihara, Original_earRight, Original_earLeft, Original_speech, Original_skin, Original_head, Original_eyes, Original_pupil, Original_ears, Original_nose, Original_mouth, Original_lymph, Original_chestBreast, Original_lungs, Original_heart, Original_abdomen, Original_back, Original_anus, Original_genito, Original_inguinals, Original_extremities, Original_reflexes, Original_dental, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ofwTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ofwTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ofw";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("lastName", "lastName");
            tableMapping.ColumnMappings.Add("givenName", "givenName");
            tableMapping.ColumnMappings.Add("middleName", "middleName");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("birthDate", "birthDate");
            tableMapping.ColumnMappings.Add("birthPlace", "birthPlace");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("civilStatus", "civilStatus");
            tableMapping.ColumnMappings.Add("religion", "religion");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("passportNum", "passportNum");
            tableMapping.ColumnMappings.Add("seamanBookNum", "seamanBookNum");
            tableMapping.ColumnMappings.Add("destination", "destination");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("employer", "employer");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ofw] WHERE (([id] = @Original_id) AND ([lastName] = @Original_lastName) AND ([givenName] = @Original_givenName) AND ([middleName] = @Original_middleName) AND ([age] = @Original_age) AND ([birthDate] = @Original_birthDate) AND ([birthPlace] = @Original_birthPlace) AND ([gender] = @Original_gender) AND ([civilStatus] = @Original_civilStatus) AND ([religion] = @Original_religion) AND ([address] = @Original_address) AND ([contact] = @Original_contact) AND ([passportNum] = @Original_passportNum) AND ([seamanBookNum] = @Original_seamanBookNum) AND ([destination] = @Original_destination) AND ([position] = @Original_position) AND ([employer] = @Original_employer))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_givenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "givenName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_civilStatus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "civilStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_religion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_passportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passportNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seamanBookNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seamanBookNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "destination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_employer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ofw] ([id], [lastName], [givenName], [middleName], [age], [birthDate], [birthPlace], [gender], [civilStatus], [religion], [address], [contact], [passportNum], [seamanBookNum], [destination], [position], [employer]) VALUES (@id, @lastName, @givenName, @middleName, @age, @birthDate, @birthPlace, @gender, @civilStatus, @religion, @address, @contact, @passportNum, @seamanBookNum, @destination, @position, @employer);
SELECT id, lastName, givenName, middleName, age, birthDate, birthPlace, gender, civilStatus, religion, address, contact, passportNum, seamanBookNum, destination, position, employer FROM ofw WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@givenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "givenName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@civilStatus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "civilStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@religion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@passportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passportNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seamanBookNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seamanBookNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "destination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ofw] SET [id] = @id, [lastName] = @lastName, [givenName] = @givenName, [middleName] = @middleName, [age] = @age, [birthDate] = @birthDate, [birthPlace] = @birthPlace, [gender] = @gender, [civilStatus] = @civilStatus, [religion] = @religion, [address] = @address, [contact] = @contact, [passportNum] = @passportNum, [seamanBookNum] = @seamanBookNum, [destination] = @destination, [position] = @position, [employer] = @employer WHERE (([id] = @Original_id) AND ([lastName] = @Original_lastName) AND ([givenName] = @Original_givenName) AND ([middleName] = @Original_middleName) AND ([age] = @Original_age) AND ([birthDate] = @Original_birthDate) AND ([birthPlace] = @Original_birthPlace) AND ([gender] = @Original_gender) AND ([civilStatus] = @Original_civilStatus) AND ([religion] = @Original_religion) AND ([address] = @Original_address) AND ([contact] = @Original_contact) AND ([passportNum] = @Original_passportNum) AND ([seamanBookNum] = @Original_seamanBookNum) AND ([destination] = @Original_destination) AND ([position] = @Original_position) AND ([employer] = @Original_employer));
SELECT id, lastName, givenName, middleName, age, birthDate, birthPlace, gender, civilStatus, religion, address, contact, passportNum, seamanBookNum, destination, position, employer FROM ofw WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@givenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "givenName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@civilStatus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "civilStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@religion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@passportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passportNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seamanBookNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seamanBookNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "destination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_givenName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "givenName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthPlace", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_civilStatus", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "civilStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_religion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_passportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passportNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seamanBookNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seamanBookNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_destination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "destination", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_employer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, lastName, givenName, middleName, age, birthDate, birthPlace, gender, c" +
                "ivilStatus, religion, address, contact, passportNum, seamanBookNum, destination," +
                " position, employer FROM dbo.ofw";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.ofwDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.ofwDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.ofwDataTable dataTable = new DatabaseDataSet.ofwDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.ofwDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ofw");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_lastName, 
                    string Original_givenName, 
                    string Original_middleName, 
                    int Original_age, 
                    System.DateTime Original_birthDate, 
                    string Original_birthPlace, 
                    byte[] Original_gender, 
                    byte[] Original_civilStatus, 
                    string Original_religion, 
                    string Original_address, 
                    string Original_contact, 
                    int Original_passportNum, 
                    string Original_seamanBookNum, 
                    string Original_destination, 
                    string Original_position, 
                    string Original_employer) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_lastName == null)) {
                throw new global::System.ArgumentNullException("Original_lastName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_lastName));
            }
            if ((Original_givenName == null)) {
                throw new global::System.ArgumentNullException("Original_givenName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_givenName));
            }
            if ((Original_middleName == null)) {
                throw new global::System.ArgumentNullException("Original_middleName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_middleName));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_age));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_birthDate));
            if ((Original_birthPlace == null)) {
                throw new global::System.ArgumentNullException("Original_birthPlace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_birthPlace));
            }
            if ((Original_gender == null)) {
                throw new global::System.ArgumentNullException("Original_gender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((byte[])(Original_gender));
            }
            if ((Original_civilStatus == null)) {
                throw new global::System.ArgumentNullException("Original_civilStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_civilStatus));
            }
            if ((Original_religion == null)) {
                throw new global::System.ArgumentNullException("Original_religion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_religion));
            }
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_address));
            }
            if ((Original_contact == null)) {
                throw new global::System.ArgumentNullException("Original_contact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_contact));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_passportNum));
            if ((Original_seamanBookNum == null)) {
                throw new global::System.ArgumentNullException("Original_seamanBookNum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_seamanBookNum));
            }
            if ((Original_destination == null)) {
                throw new global::System.ArgumentNullException("Original_destination");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_destination));
            }
            if ((Original_position == null)) {
                throw new global::System.ArgumentNullException("Original_position");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_position));
            }
            if ((Original_employer == null)) {
                throw new global::System.ArgumentNullException("Original_employer");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_employer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    string lastName, 
                    string givenName, 
                    string middleName, 
                    int age, 
                    System.DateTime birthDate, 
                    string birthPlace, 
                    byte[] gender, 
                    byte[] civilStatus, 
                    string religion, 
                    string address, 
                    string contact, 
                    int passportNum, 
                    string seamanBookNum, 
                    string destination, 
                    string position, 
                    string employer) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((lastName == null)) {
                throw new global::System.ArgumentNullException("lastName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(lastName));
            }
            if ((givenName == null)) {
                throw new global::System.ArgumentNullException("givenName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(givenName));
            }
            if ((middleName == null)) {
                throw new global::System.ArgumentNullException("middleName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(middleName));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(age));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(birthDate));
            if ((birthPlace == null)) {
                throw new global::System.ArgumentNullException("birthPlace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(birthPlace));
            }
            if ((gender == null)) {
                throw new global::System.ArgumentNullException("gender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(gender));
            }
            if ((civilStatus == null)) {
                throw new global::System.ArgumentNullException("civilStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(civilStatus));
            }
            if ((religion == null)) {
                throw new global::System.ArgumentNullException("religion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(religion));
            }
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(address));
            }
            if ((contact == null)) {
                throw new global::System.ArgumentNullException("contact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(contact));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(passportNum));
            if ((seamanBookNum == null)) {
                throw new global::System.ArgumentNullException("seamanBookNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(seamanBookNum));
            }
            if ((destination == null)) {
                throw new global::System.ArgumentNullException("destination");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(destination));
            }
            if ((position == null)) {
                throw new global::System.ArgumentNullException("position");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(position));
            }
            if ((employer == null)) {
                throw new global::System.ArgumentNullException("employer");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(employer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    string lastName, 
                    string givenName, 
                    string middleName, 
                    int age, 
                    System.DateTime birthDate, 
                    string birthPlace, 
                    byte[] gender, 
                    byte[] civilStatus, 
                    string religion, 
                    string address, 
                    string contact, 
                    int passportNum, 
                    string seamanBookNum, 
                    string destination, 
                    string position, 
                    string employer, 
                    int Original_id, 
                    string Original_lastName, 
                    string Original_givenName, 
                    string Original_middleName, 
                    int Original_age, 
                    System.DateTime Original_birthDate, 
                    string Original_birthPlace, 
                    byte[] Original_gender, 
                    byte[] Original_civilStatus, 
                    string Original_religion, 
                    string Original_address, 
                    string Original_contact, 
                    int Original_passportNum, 
                    string Original_seamanBookNum, 
                    string Original_destination, 
                    string Original_position, 
                    string Original_employer) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((lastName == null)) {
                throw new global::System.ArgumentNullException("lastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(lastName));
            }
            if ((givenName == null)) {
                throw new global::System.ArgumentNullException("givenName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(givenName));
            }
            if ((middleName == null)) {
                throw new global::System.ArgumentNullException("middleName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(middleName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(age));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(birthDate));
            if ((birthPlace == null)) {
                throw new global::System.ArgumentNullException("birthPlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(birthPlace));
            }
            if ((gender == null)) {
                throw new global::System.ArgumentNullException("gender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(gender));
            }
            if ((civilStatus == null)) {
                throw new global::System.ArgumentNullException("civilStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(civilStatus));
            }
            if ((religion == null)) {
                throw new global::System.ArgumentNullException("religion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(religion));
            }
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(address));
            }
            if ((contact == null)) {
                throw new global::System.ArgumentNullException("contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(contact));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(passportNum));
            if ((seamanBookNum == null)) {
                throw new global::System.ArgumentNullException("seamanBookNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(seamanBookNum));
            }
            if ((destination == null)) {
                throw new global::System.ArgumentNullException("destination");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(destination));
            }
            if ((position == null)) {
                throw new global::System.ArgumentNullException("position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(position));
            }
            if ((employer == null)) {
                throw new global::System.ArgumentNullException("employer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(employer));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_id));
            if ((Original_lastName == null)) {
                throw new global::System.ArgumentNullException("Original_lastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_lastName));
            }
            if ((Original_givenName == null)) {
                throw new global::System.ArgumentNullException("Original_givenName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_givenName));
            }
            if ((Original_middleName == null)) {
                throw new global::System.ArgumentNullException("Original_middleName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_middleName));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_age));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_birthDate));
            if ((Original_birthPlace == null)) {
                throw new global::System.ArgumentNullException("Original_birthPlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_birthPlace));
            }
            if ((Original_gender == null)) {
                throw new global::System.ArgumentNullException("Original_gender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((byte[])(Original_gender));
            }
            if ((Original_civilStatus == null)) {
                throw new global::System.ArgumentNullException("Original_civilStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((byte[])(Original_civilStatus));
            }
            if ((Original_religion == null)) {
                throw new global::System.ArgumentNullException("Original_religion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_religion));
            }
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_address));
            }
            if ((Original_contact == null)) {
                throw new global::System.ArgumentNullException("Original_contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_contact));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_passportNum));
            if ((Original_seamanBookNum == null)) {
                throw new global::System.ArgumentNullException("Original_seamanBookNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_seamanBookNum));
            }
            if ((Original_destination == null)) {
                throw new global::System.ArgumentNullException("Original_destination");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_destination));
            }
            if ((Original_position == null)) {
                throw new global::System.ArgumentNullException("Original_position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_position));
            }
            if ((Original_employer == null)) {
                throw new global::System.ArgumentNullException("Original_employer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_employer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string lastName, 
                    string givenName, 
                    string middleName, 
                    int age, 
                    System.DateTime birthDate, 
                    string birthPlace, 
                    byte[] gender, 
                    byte[] civilStatus, 
                    string religion, 
                    string address, 
                    string contact, 
                    int passportNum, 
                    string seamanBookNum, 
                    string destination, 
                    string position, 
                    string employer, 
                    int Original_id, 
                    string Original_lastName, 
                    string Original_givenName, 
                    string Original_middleName, 
                    int Original_age, 
                    System.DateTime Original_birthDate, 
                    string Original_birthPlace, 
                    byte[] Original_gender, 
                    byte[] Original_civilStatus, 
                    string Original_religion, 
                    string Original_address, 
                    string Original_contact, 
                    int Original_passportNum, 
                    string Original_seamanBookNum, 
                    string Original_destination, 
                    string Original_position, 
                    string Original_employer) {
            return this.Update(Original_id, lastName, givenName, middleName, age, birthDate, birthPlace, gender, civilStatus, religion, address, contact, passportNum, seamanBookNum, destination, position, employer, Original_id, Original_lastName, Original_givenName, Original_middleName, Original_age, Original_birthDate, Original_birthPlace, Original_gender, Original_civilStatus, Original_religion, Original_address, Original_contact, Original_passportNum, Original_seamanBookNum, Original_destination, Original_position, Original_employer);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SerologyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SerologyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Serology";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("pregnancySerum", "pregnancySerum");
            tableMapping.ColumnMappings.Add("lastenstrualPeriod", "lastenstrualPeriod");
            tableMapping.ColumnMappings.Add("lastSexualContact", "lastSexualContact");
            tableMapping.ColumnMappings.Add("bloodType", "bloodType");
            tableMapping.ColumnMappings.Add("alphaFetoProtein", "alphaFetoProtein");
            tableMapping.ColumnMappings.Add("cancerAntigen", "cancerAntigen");
            tableMapping.ColumnMappings.Add("carcinoEmbryonicAntigen", "carcinoEmbryonicAntigen");
            tableMapping.ColumnMappings.Add("tsh", "tsh");
            tableMapping.ColumnMappings.Add("HBsAgPC", "HBsAgPC");
            tableMapping.ColumnMappings.Add("HBsAgCV", "HBsAgCV");
            tableMapping.ColumnMappings.Add("AntiHBsPC", "AntiHBsPC");
            tableMapping.ColumnMappings.Add("AntiHBsCV", "AntiHBsCV");
            tableMapping.ColumnMappings.Add("HBeAgPC", "HBeAgPC");
            tableMapping.ColumnMappings.Add("HBeAgCV", "HBeAgCV");
            tableMapping.ColumnMappings.Add("AntiHbePC", "AntiHbePC");
            tableMapping.ColumnMappings.Add("AntiHbeCV", "AntiHbeCV");
            tableMapping.ColumnMappings.Add("AntiHBclgMPC", "AntiHBclgMPC");
            tableMapping.ColumnMappings.Add("AntiHBclgMCV", "AntiHBclgMCV");
            tableMapping.ColumnMappings.Add("AntiHBclgGPC", "AntiHBclgGPC");
            tableMapping.ColumnMappings.Add("AntiHBclgGCV", "AntiHBclgGCV");
            tableMapping.ColumnMappings.Add("hepatitisB", "hepatitisB");
            tableMapping.ColumnMappings.Add("hiv12", "hiv12");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Serology] WHERE (([id] = @Original_id) AND ([pregnancySerum] = @Original_pregnancySerum) AND ([lastenstrualPeriod] = @Original_lastenstrualPeriod) AND ([lastSexualContact] = @Original_lastSexualContact) AND ([bloodType] = @Original_bloodType) AND ([alphaFetoProtein] = @Original_alphaFetoProtein) AND ([cancerAntigen] = @Original_cancerAntigen) AND ([carcinoEmbryonicAntigen] = @Original_carcinoEmbryonicAntigen) AND ([tsh] = @Original_tsh) AND ([HBsAgPC] = @Original_HBsAgPC) AND ([HBsAgCV] = @Original_HBsAgCV) AND ([AntiHBsPC] = @Original_AntiHBsPC) AND ([AntiHBsCV] = @Original_AntiHBsCV) AND ([HBeAgPC] = @Original_HBeAgPC) AND ([HBeAgCV] = @Original_HBeAgCV) AND ([AntiHbePC] = @Original_AntiHbePC) AND ([AntiHbeCV] = @Original_AntiHbeCV) AND ([AntiHBclgMPC] = @Original_AntiHBclgMPC) AND ([AntiHBclgMCV] = @Original_AntiHBclgMCV) AND ([AntiHBclgGPC] = @Original_AntiHBclgGPC) AND ([AntiHBclgGCV] = @Original_AntiHBclgGCV) AND ([hepatitisB] = @Original_hepatitisB) AND ([hiv12] = @Original_hiv12) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pregnancySerum", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pregnancySerum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastenstrualPeriod", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastenstrualPeriod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastSexualContact", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastSexualContact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bloodType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alphaFetoProtein", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alphaFetoProtein", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cancerAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cancerAntigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carcinoEmbryonicAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carcinoEmbryonicAntigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tsh", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tsh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBsAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBsAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBsPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBsCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBeAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBeAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHbePC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbePC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHbeCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbeCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgMPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgMCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgGPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgGCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hepatitisB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepatitisB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hiv12", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv12", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Serology] ([id], [pregnancySerum], [lastenstrualPeriod], [lastSexualContact], [bloodType], [alphaFetoProtein], [cancerAntigen], [carcinoEmbryonicAntigen], [tsh], [HBsAgPC], [HBsAgCV], [AntiHBsPC], [AntiHBsCV], [HBeAgPC], [HBeAgCV], [AntiHbePC], [AntiHbeCV], [AntiHBclgMPC], [AntiHBclgMCV], [AntiHBclgGPC], [AntiHBclgGCV], [hepatitisB], [hiv12], [ofw_id]) VALUES (@id, @pregnancySerum, @lastenstrualPeriod, @lastSexualContact, @bloodType, @alphaFetoProtein, @cancerAntigen, @carcinoEmbryonicAntigen, @tsh, @HBsAgPC, @HBsAgCV, @AntiHBsPC, @AntiHBsCV, @HBeAgPC, @HBeAgCV, @AntiHbePC, @AntiHbeCV, @AntiHBclgMPC, @AntiHBclgMCV, @AntiHBclgGPC, @AntiHBclgGCV, @hepatitisB, @hiv12, @ofw_id);
SELECT id, pregnancySerum, lastenstrualPeriod, lastSexualContact, bloodType, alphaFetoProtein, cancerAntigen, carcinoEmbryonicAntigen, tsh, HBsAgPC, HBsAgCV, AntiHBsPC, AntiHBsCV, HBeAgPC, HBeAgCV, AntiHbePC, AntiHbeCV, AntiHBclgMPC, AntiHBclgMCV, AntiHBclgGPC, AntiHBclgGCV, hepatitisB, hiv12, ofw_id FROM Serology WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pregnancySerum", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pregnancySerum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastenstrualPeriod", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastenstrualPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastSexualContact", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastSexualContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alphaFetoProtein", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alphaFetoProtein", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cancerAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cancerAntigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carcinoEmbryonicAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carcinoEmbryonicAntigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tsh", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tsh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBsAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBsAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBsPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBsCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBeAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBeAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHbePC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbePC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHbeCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbeCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgMPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgMCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgGPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgGCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hepatitisB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepatitisB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hiv12", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Serology] SET [id] = @id, [pregnancySerum] = @pregnancySerum, [last" +
                "enstrualPeriod] = @lastenstrualPeriod, [lastSexualContact] = @lastSexualContact," +
                " [bloodType] = @bloodType, [alphaFetoProtein] = @alphaFetoProtein, [cancerAntige" +
                "n] = @cancerAntigen, [carcinoEmbryonicAntigen] = @carcinoEmbryonicAntigen, [tsh]" +
                " = @tsh, [HBsAgPC] = @HBsAgPC, [HBsAgCV] = @HBsAgCV, [AntiHBsPC] = @AntiHBsPC, [" +
                "AntiHBsCV] = @AntiHBsCV, [HBeAgPC] = @HBeAgPC, [HBeAgCV] = @HBeAgCV, [AntiHbePC]" +
                " = @AntiHbePC, [AntiHbeCV] = @AntiHbeCV, [AntiHBclgMPC] = @AntiHBclgMPC, [AntiHB" +
                "clgMCV] = @AntiHBclgMCV, [AntiHBclgGPC] = @AntiHBclgGPC, [AntiHBclgGCV] = @AntiH" +
                "BclgGCV, [hepatitisB] = @hepatitisB, [hiv12] = @hiv12, [ofw_id] = @ofw_id WHERE " +
                "(([id] = @Original_id) AND ([pregnancySerum] = @Original_pregnancySerum) AND ([l" +
                "astenstrualPeriod] = @Original_lastenstrualPeriod) AND ([lastSexualContact] = @O" +
                "riginal_lastSexualContact) AND ([bloodType] = @Original_bloodType) AND ([alphaFe" +
                "toProtein] = @Original_alphaFetoProtein) AND ([cancerAntigen] = @Original_cancer" +
                "Antigen) AND ([carcinoEmbryonicAntigen] = @Original_carcinoEmbryonicAntigen) AND" +
                " ([tsh] = @Original_tsh) AND ([HBsAgPC] = @Original_HBsAgPC) AND ([HBsAgCV] = @O" +
                "riginal_HBsAgCV) AND ([AntiHBsPC] = @Original_AntiHBsPC) AND ([AntiHBsCV] = @Ori" +
                "ginal_AntiHBsCV) AND ([HBeAgPC] = @Original_HBeAgPC) AND ([HBeAgCV] = @Original_" +
                "HBeAgCV) AND ([AntiHbePC] = @Original_AntiHbePC) AND ([AntiHbeCV] = @Original_An" +
                "tiHbeCV) AND ([AntiHBclgMPC] = @Original_AntiHBclgMPC) AND ([AntiHBclgMCV] = @Or" +
                "iginal_AntiHBclgMCV) AND ([AntiHBclgGPC] = @Original_AntiHBclgGPC) AND ([AntiHBc" +
                "lgGCV] = @Original_AntiHBclgGCV) AND ([hepatitisB] = @Original_hepatitisB) AND (" +
                "[hiv12] = @Original_hiv12) AND ([ofw_id] = @Original_ofw_id));\r\nSELECT id, pregn" +
                "ancySerum, lastenstrualPeriod, lastSexualContact, bloodType, alphaFetoProtein, c" +
                "ancerAntigen, carcinoEmbryonicAntigen, tsh, HBsAgPC, HBsAgCV, AntiHBsPC, AntiHBs" +
                "CV, HBeAgPC, HBeAgCV, AntiHbePC, AntiHbeCV, AntiHBclgMPC, AntiHBclgMCV, AntiHBcl" +
                "gGPC, AntiHBclgGCV, hepatitisB, hiv12, ofw_id FROM Serology WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pregnancySerum", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pregnancySerum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastenstrualPeriod", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastenstrualPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastSexualContact", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastSexualContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alphaFetoProtein", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alphaFetoProtein", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cancerAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cancerAntigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carcinoEmbryonicAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carcinoEmbryonicAntigen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tsh", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tsh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBsAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBsAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBsPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBsCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBeAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HBeAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHbePC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbePC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHbeCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbeCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgMPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgMCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgGPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntiHBclgGCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGCV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hepatitisB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepatitisB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hiv12", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pregnancySerum", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pregnancySerum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastenstrualPeriod", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastenstrualPeriod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lastSexualContact", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastSexualContact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bloodType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alphaFetoProtein", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alphaFetoProtein", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cancerAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cancerAntigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_carcinoEmbryonicAntigen", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carcinoEmbryonicAntigen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tsh", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tsh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBsAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBsAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBsAgCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBsPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBsCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBsCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBeAgPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HBeAgCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HBeAgCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHbePC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbePC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHbeCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHbeCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgMPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgMCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgMCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgGPC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntiHBclgGCV", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntiHBclgGCV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hepatitisB", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hepatitisB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hiv12", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hiv12", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, pregnancySerum, lastenstrualPeriod, lastSexualContact, bloodType, alphaFetoProtein, cancerAntigen, carcinoEmbryonicAntigen, tsh, HBsAgPC, HBsAgCV, AntiHBsPC, AntiHBsCV, HBeAgPC, HBeAgCV, AntiHbePC, AntiHbeCV, AntiHBclgMPC, AntiHBclgMCV, AntiHBclgGPC, AntiHBclgGCV, hepatitisB, hiv12, ofw_id FROM dbo.Serology";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.SerologyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.SerologyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.SerologyDataTable dataTable = new DatabaseDataSet.SerologyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.SerologyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Serology");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    byte[] Original_pregnancySerum, 
                    System.DateTime Original_lastenstrualPeriod, 
                    System.DateTime Original_lastSexualContact, 
                    string Original_bloodType, 
                    float Original_alphaFetoProtein, 
                    float Original_cancerAntigen, 
                    float Original_carcinoEmbryonicAntigen, 
                    float Original_tsh, 
                    float Original_HBsAgPC, 
                    float Original_HBsAgCV, 
                    float Original_AntiHBsPC, 
                    float Original_AntiHBsCV, 
                    float Original_HBeAgPC, 
                    float Original_HBeAgCV, 
                    float Original_AntiHbePC, 
                    float Original_AntiHbeCV, 
                    float Original_AntiHBclgMPC, 
                    float Original_AntiHBclgMCV, 
                    float Original_AntiHBclgGPC, 
                    float Original_AntiHBclgGCV, 
                    byte[] Original_hepatitisB, 
                    byte[] Original_hiv12, 
                    int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_pregnancySerum == null)) {
                throw new global::System.ArgumentNullException("Original_pregnancySerum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_pregnancySerum));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_lastenstrualPeriod));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_lastSexualContact));
            if ((Original_bloodType == null)) {
                throw new global::System.ArgumentNullException("Original_bloodType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_bloodType));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((float)(Original_alphaFetoProtein));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_cancerAntigen));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((float)(Original_carcinoEmbryonicAntigen));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((float)(Original_tsh));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((float)(Original_HBsAgPC));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_HBsAgCV));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((float)(Original_AntiHBsPC));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(Original_AntiHBsCV));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((float)(Original_HBeAgPC));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_HBeAgCV));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((float)(Original_AntiHbePC));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((float)(Original_AntiHbeCV));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((float)(Original_AntiHBclgMPC));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((float)(Original_AntiHBclgMCV));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((float)(Original_AntiHBclgGPC));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((float)(Original_AntiHBclgGCV));
            if ((Original_hepatitisB == null)) {
                throw new global::System.ArgumentNullException("Original_hepatitisB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((byte[])(Original_hepatitisB));
            }
            if ((Original_hiv12 == null)) {
                throw new global::System.ArgumentNullException("Original_hiv12");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((byte[])(Original_hiv12));
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    byte[] pregnancySerum, 
                    System.DateTime lastenstrualPeriod, 
                    System.DateTime lastSexualContact, 
                    string bloodType, 
                    float alphaFetoProtein, 
                    float cancerAntigen, 
                    float carcinoEmbryonicAntigen, 
                    float tsh, 
                    float HBsAgPC, 
                    float HBsAgCV, 
                    float AntiHBsPC, 
                    float AntiHBsCV, 
                    float HBeAgPC, 
                    float HBeAgCV, 
                    float AntiHbePC, 
                    float AntiHbeCV, 
                    float AntiHBclgMPC, 
                    float AntiHBclgMCV, 
                    float AntiHBclgGPC, 
                    float AntiHBclgGCV, 
                    byte[] hepatitisB, 
                    byte[] hiv12, 
                    int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((pregnancySerum == null)) {
                throw new global::System.ArgumentNullException("pregnancySerum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(pregnancySerum));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(lastenstrualPeriod));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(lastSexualContact));
            if ((bloodType == null)) {
                throw new global::System.ArgumentNullException("bloodType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(bloodType));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((float)(alphaFetoProtein));
            this.Adapter.InsertCommand.Parameters[6].Value = ((float)(cancerAntigen));
            this.Adapter.InsertCommand.Parameters[7].Value = ((float)(carcinoEmbryonicAntigen));
            this.Adapter.InsertCommand.Parameters[8].Value = ((float)(tsh));
            this.Adapter.InsertCommand.Parameters[9].Value = ((float)(HBsAgPC));
            this.Adapter.InsertCommand.Parameters[10].Value = ((float)(HBsAgCV));
            this.Adapter.InsertCommand.Parameters[11].Value = ((float)(AntiHBsPC));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(AntiHBsCV));
            this.Adapter.InsertCommand.Parameters[13].Value = ((float)(HBeAgPC));
            this.Adapter.InsertCommand.Parameters[14].Value = ((float)(HBeAgCV));
            this.Adapter.InsertCommand.Parameters[15].Value = ((float)(AntiHbePC));
            this.Adapter.InsertCommand.Parameters[16].Value = ((float)(AntiHbeCV));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(AntiHBclgMPC));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(AntiHBclgMCV));
            this.Adapter.InsertCommand.Parameters[19].Value = ((float)(AntiHBclgGPC));
            this.Adapter.InsertCommand.Parameters[20].Value = ((float)(AntiHBclgGCV));
            if ((hepatitisB == null)) {
                throw new global::System.ArgumentNullException("hepatitisB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte[])(hepatitisB));
            }
            if ((hiv12 == null)) {
                throw new global::System.ArgumentNullException("hiv12");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((byte[])(hiv12));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    byte[] pregnancySerum, 
                    System.DateTime lastenstrualPeriod, 
                    System.DateTime lastSexualContact, 
                    string bloodType, 
                    float alphaFetoProtein, 
                    float cancerAntigen, 
                    float carcinoEmbryonicAntigen, 
                    float tsh, 
                    float HBsAgPC, 
                    float HBsAgCV, 
                    float AntiHBsPC, 
                    float AntiHBsCV, 
                    float HBeAgPC, 
                    float HBeAgCV, 
                    float AntiHbePC, 
                    float AntiHbeCV, 
                    float AntiHBclgMPC, 
                    float AntiHBclgMCV, 
                    float AntiHBclgGPC, 
                    float AntiHBclgGCV, 
                    byte[] hepatitisB, 
                    byte[] hiv12, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_pregnancySerum, 
                    System.DateTime Original_lastenstrualPeriod, 
                    System.DateTime Original_lastSexualContact, 
                    string Original_bloodType, 
                    float Original_alphaFetoProtein, 
                    float Original_cancerAntigen, 
                    float Original_carcinoEmbryonicAntigen, 
                    float Original_tsh, 
                    float Original_HBsAgPC, 
                    float Original_HBsAgCV, 
                    float Original_AntiHBsPC, 
                    float Original_AntiHBsCV, 
                    float Original_HBeAgPC, 
                    float Original_HBeAgCV, 
                    float Original_AntiHbePC, 
                    float Original_AntiHbeCV, 
                    float Original_AntiHBclgMPC, 
                    float Original_AntiHBclgMCV, 
                    float Original_AntiHBclgGPC, 
                    float Original_AntiHBclgGCV, 
                    byte[] Original_hepatitisB, 
                    byte[] Original_hiv12, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((pregnancySerum == null)) {
                throw new global::System.ArgumentNullException("pregnancySerum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(pregnancySerum));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(lastenstrualPeriod));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(lastSexualContact));
            if ((bloodType == null)) {
                throw new global::System.ArgumentNullException("bloodType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(bloodType));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((float)(alphaFetoProtein));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(cancerAntigen));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(carcinoEmbryonicAntigen));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(tsh));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(HBsAgPC));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(HBsAgCV));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(AntiHBsPC));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(AntiHBsCV));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(HBeAgPC));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(HBeAgCV));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(AntiHbePC));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(AntiHbeCV));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(AntiHBclgMPC));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(AntiHBclgMCV));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((float)(AntiHBclgGPC));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((float)(AntiHBclgGCV));
            if ((hepatitisB == null)) {
                throw new global::System.ArgumentNullException("hepatitisB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte[])(hepatitisB));
            }
            if ((hiv12 == null)) {
                throw new global::System.ArgumentNullException("hiv12");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((byte[])(hiv12));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_id));
            if ((Original_pregnancySerum == null)) {
                throw new global::System.ArgumentNullException("Original_pregnancySerum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((byte[])(Original_pregnancySerum));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_lastenstrualPeriod));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_lastSexualContact));
            if ((Original_bloodType == null)) {
                throw new global::System.ArgumentNullException("Original_bloodType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_bloodType));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(Original_alphaFetoProtein));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((float)(Original_cancerAntigen));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(Original_carcinoEmbryonicAntigen));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(Original_tsh));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((float)(Original_HBsAgPC));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((float)(Original_HBsAgCV));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(Original_AntiHBsPC));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((float)(Original_AntiHBsCV));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((float)(Original_HBeAgPC));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((float)(Original_HBeAgCV));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((float)(Original_AntiHbePC));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((float)(Original_AntiHbeCV));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((float)(Original_AntiHBclgMPC));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((float)(Original_AntiHBclgMCV));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((float)(Original_AntiHBclgGPC));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((float)(Original_AntiHBclgGCV));
            if ((Original_hepatitisB == null)) {
                throw new global::System.ArgumentNullException("Original_hepatitisB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((byte[])(Original_hepatitisB));
            }
            if ((Original_hiv12 == null)) {
                throw new global::System.ArgumentNullException("Original_hiv12");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((byte[])(Original_hiv12));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte[] pregnancySerum, 
                    System.DateTime lastenstrualPeriod, 
                    System.DateTime lastSexualContact, 
                    string bloodType, 
                    float alphaFetoProtein, 
                    float cancerAntigen, 
                    float carcinoEmbryonicAntigen, 
                    float tsh, 
                    float HBsAgPC, 
                    float HBsAgCV, 
                    float AntiHBsPC, 
                    float AntiHBsCV, 
                    float HBeAgPC, 
                    float HBeAgCV, 
                    float AntiHbePC, 
                    float AntiHbeCV, 
                    float AntiHBclgMPC, 
                    float AntiHBclgMCV, 
                    float AntiHBclgGPC, 
                    float AntiHBclgGCV, 
                    byte[] hepatitisB, 
                    byte[] hiv12, 
                    int ofw_id, 
                    int Original_id, 
                    byte[] Original_pregnancySerum, 
                    System.DateTime Original_lastenstrualPeriod, 
                    System.DateTime Original_lastSexualContact, 
                    string Original_bloodType, 
                    float Original_alphaFetoProtein, 
                    float Original_cancerAntigen, 
                    float Original_carcinoEmbryonicAntigen, 
                    float Original_tsh, 
                    float Original_HBsAgPC, 
                    float Original_HBsAgCV, 
                    float Original_AntiHBsPC, 
                    float Original_AntiHBsCV, 
                    float Original_HBeAgPC, 
                    float Original_HBeAgCV, 
                    float Original_AntiHbePC, 
                    float Original_AntiHbeCV, 
                    float Original_AntiHBclgMPC, 
                    float Original_AntiHBclgMCV, 
                    float Original_AntiHBclgGPC, 
                    float Original_AntiHBclgGCV, 
                    byte[] Original_hepatitisB, 
                    byte[] Original_hiv12, 
                    int Original_ofw_id) {
            return this.Update(Original_id, pregnancySerum, lastenstrualPeriod, lastSexualContact, bloodType, alphaFetoProtein, cancerAntigen, carcinoEmbryonicAntigen, tsh, HBsAgPC, HBsAgCV, AntiHBsPC, AntiHBsCV, HBeAgPC, HBeAgCV, AntiHbePC, AntiHbeCV, AntiHBclgMPC, AntiHBclgMCV, AntiHBclgGPC, AntiHBclgGCV, hepatitisB, hiv12, ofw_id, Original_id, Original_pregnancySerum, Original_lastenstrualPeriod, Original_lastSexualContact, Original_bloodType, Original_alphaFetoProtein, Original_cancerAntigen, Original_carcinoEmbryonicAntigen, Original_tsh, Original_HBsAgPC, Original_HBsAgCV, Original_AntiHBsPC, Original_AntiHBsCV, Original_HBeAgPC, Original_HBeAgCV, Original_AntiHbePC, Original_AntiHbeCV, Original_AntiHBclgMPC, Original_AntiHBclgMCV, Original_AntiHBclgGPC, Original_AntiHBclgGCV, Original_hepatitisB, Original_hiv12, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Stool_ExaminationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Stool_ExaminationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Stool_Examination";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("color", "color");
            tableMapping.ColumnMappings.Add("consistency", "consistency");
            tableMapping.ColumnMappings.Add("pus", "pus");
            tableMapping.ColumnMappings.Add("rbc", "rbc");
            tableMapping.ColumnMappings.Add("others", "others");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Stool_Examination] WHERE (([id] = @Original_id) AND ([color] = @Original_color) AND ([consistency] = @Original_consistency) AND ([pus] = @Original_pus) AND ([rbc] = @Original_rbc) AND ([others] = @Original_others) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_consistency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "consistency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_others", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "others", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Stool_Examination] ([id], [color], [consistency], [pus], [rbc], [others], [ofw_id]) VALUES (@id, @color, @consistency, @pus, @rbc, @others, @ofw_id);
SELECT id, color, consistency, pus, rbc, others, ofw_id FROM Stool_Examination WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consistency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "consistency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@others", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Stool_Examination] SET [id] = @id, [color] = @color, [consistency] = @consistency, [pus] = @pus, [rbc] = @rbc, [others] = @others, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([color] = @Original_color) AND ([consistency] = @Original_consistency) AND ([pus] = @Original_pus) AND ([rbc] = @Original_rbc) AND ([others] = @Original_others) AND ([ofw_id] = @Original_ofw_id));
SELECT id, color, consistency, pus, rbc, others, ofw_id FROM Stool_Examination WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consistency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "consistency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@others", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_consistency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "consistency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rbc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rbc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_others", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "others", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, color, consistency, pus, rbc, others, ofw_id FROM dbo.Stool_Examinatio" +
                "n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.Stool_ExaminationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.Stool_ExaminationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.Stool_ExaminationDataTable dataTable = new DatabaseDataSet.Stool_ExaminationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.Stool_ExaminationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Stool_Examination");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_color, string Original_consistency, string Original_pus, string Original_rbc, string Original_others, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_color == null)) {
                throw new global::System.ArgumentNullException("Original_color");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_color));
            }
            if ((Original_consistency == null)) {
                throw new global::System.ArgumentNullException("Original_consistency");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_consistency));
            }
            if ((Original_pus == null)) {
                throw new global::System.ArgumentNullException("Original_pus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_pus));
            }
            if ((Original_rbc == null)) {
                throw new global::System.ArgumentNullException("Original_rbc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_rbc));
            }
            if ((Original_others == null)) {
                throw new global::System.ArgumentNullException("Original_others");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_others));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, string color, string consistency, string pus, string rbc, string others, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((color == null)) {
                throw new global::System.ArgumentNullException("color");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(color));
            }
            if ((consistency == null)) {
                throw new global::System.ArgumentNullException("consistency");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(consistency));
            }
            if ((pus == null)) {
                throw new global::System.ArgumentNullException("pus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(pus));
            }
            if ((rbc == null)) {
                throw new global::System.ArgumentNullException("rbc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(rbc));
            }
            if ((others == null)) {
                throw new global::System.ArgumentNullException("others");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(others));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int id, string color, string consistency, string pus, string rbc, string others, int ofw_id, int Original_id, string Original_color, string Original_consistency, string Original_pus, string Original_rbc, string Original_others, int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((color == null)) {
                throw new global::System.ArgumentNullException("color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(color));
            }
            if ((consistency == null)) {
                throw new global::System.ArgumentNullException("consistency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(consistency));
            }
            if ((pus == null)) {
                throw new global::System.ArgumentNullException("pus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(pus));
            }
            if ((rbc == null)) {
                throw new global::System.ArgumentNullException("rbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(rbc));
            }
            if ((others == null)) {
                throw new global::System.ArgumentNullException("others");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(others));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_id));
            if ((Original_color == null)) {
                throw new global::System.ArgumentNullException("Original_color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_color));
            }
            if ((Original_consistency == null)) {
                throw new global::System.ArgumentNullException("Original_consistency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_consistency));
            }
            if ((Original_pus == null)) {
                throw new global::System.ArgumentNullException("Original_pus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_pus));
            }
            if ((Original_rbc == null)) {
                throw new global::System.ArgumentNullException("Original_rbc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_rbc));
            }
            if ((Original_others == null)) {
                throw new global::System.ArgumentNullException("Original_others");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_others));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string color, string consistency, string pus, string rbc, string others, int ofw_id, int Original_id, string Original_color, string Original_consistency, string Original_pus, string Original_rbc, string Original_others, int Original_ofw_id) {
            return this.Update(Original_id, color, consistency, pus, rbc, others, ofw_id, Original_id, Original_color, Original_consistency, Original_pus, Original_rbc, Original_others, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class summaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public summaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "summary";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("DOHmandatory", "DOHmandatory");
            tableMapping.ColumnMappings.Add("additional", "additional");
            tableMapping.ColumnMappings.Add("flag", "flag");
            tableMapping.ColumnMappings.Add("remarks", "remarks");
            tableMapping.ColumnMappings.Add("dateExam", "dateExam");
            tableMapping.ColumnMappings.Add("expiry", "expiry");
            tableMapping.ColumnMappings.Add("reportNum", "reportNum");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[summary] WHERE (([id] = @Original_id) AND ([DOHmandatory] = @Original_DOHmandatory) AND ([additional] = @Original_additional) AND ([flag] = @Original_flag) AND ([remarks] = @Original_remarks) AND ([dateExam] = @Original_dateExam) AND ([expiry] = @Original_expiry) AND ([reportNum] = @Original_reportNum) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOHmandatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOHmandatory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_additional", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "additional", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateExam", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateExam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expiry", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[summary] ([id], [DOHmandatory], [additional], [flag], [remarks], [dateExam], [expiry], [reportNum], [ofw_id]) VALUES (@id, @DOHmandatory, @additional, @flag, @remarks, @dateExam, @expiry, @reportNum, @ofw_id);
SELECT id, DOHmandatory, additional, flag, remarks, dateExam, expiry, reportNum, ofw_id FROM summary WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOHmandatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOHmandatory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@additional", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "additional", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateExam", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateExam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expiry", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[summary] SET [id] = @id, [DOHmandatory] = @DOHmandatory, [additional] = @additional, [flag] = @flag, [remarks] = @remarks, [dateExam] = @dateExam, [expiry] = @expiry, [reportNum] = @reportNum, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([DOHmandatory] = @Original_DOHmandatory) AND ([additional] = @Original_additional) AND ([flag] = @Original_flag) AND ([remarks] = @Original_remarks) AND ([dateExam] = @Original_dateExam) AND ([expiry] = @Original_expiry) AND ([reportNum] = @Original_reportNum) AND ([ofw_id] = @Original_ofw_id));
SELECT id, DOHmandatory, additional, flag, remarks, dateExam, expiry, reportNum, ofw_id FROM summary WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOHmandatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOHmandatory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@additional", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "additional", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateExam", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateExam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expiry", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOHmandatory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOHmandatory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_additional", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "additional", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateExam", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateExam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expiry", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reportNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reportNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, DOHmandatory, additional, flag, remarks, dateExam, expiry, reportNum, " +
                "ofw_id FROM dbo.summary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.summaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.summaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.summaryDataTable dataTable = new DatabaseDataSet.summaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.summaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "summary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, int Original_DOHmandatory, int Original_additional, int Original_flag, int Original_remarks, System.DateTime Original_dateExam, System.DateTime Original_expiry, int Original_reportNum, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DOHmandatory));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_additional));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_flag));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_remarks));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_dateExam));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_expiry));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_reportNum));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, int DOHmandatory, int additional, int flag, int remarks, System.DateTime dateExam, System.DateTime expiry, int reportNum, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DOHmandatory));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(additional));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(flag));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(remarks));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(dateExam));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(expiry));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(reportNum));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    int DOHmandatory, 
                    int additional, 
                    int flag, 
                    int remarks, 
                    System.DateTime dateExam, 
                    System.DateTime expiry, 
                    int reportNum, 
                    int ofw_id, 
                    int Original_id, 
                    int Original_DOHmandatory, 
                    int Original_additional, 
                    int Original_flag, 
                    int Original_remarks, 
                    System.DateTime Original_dateExam, 
                    System.DateTime Original_expiry, 
                    int Original_reportNum, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DOHmandatory));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(additional));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(flag));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(remarks));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(dateExam));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(expiry));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(reportNum));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_DOHmandatory));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_additional));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_flag));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_remarks));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_dateExam));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_expiry));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_reportNum));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DOHmandatory, 
                    int additional, 
                    int flag, 
                    int remarks, 
                    System.DateTime dateExam, 
                    System.DateTime expiry, 
                    int reportNum, 
                    int ofw_id, 
                    int Original_id, 
                    int Original_DOHmandatory, 
                    int Original_additional, 
                    int Original_flag, 
                    int Original_remarks, 
                    System.DateTime Original_dateExam, 
                    System.DateTime Original_expiry, 
                    int Original_reportNum, 
                    int Original_ofw_id) {
            return this.Update(Original_id, DOHmandatory, additional, flag, remarks, dateExam, expiry, reportNum, ofw_id, Original_id, Original_DOHmandatory, Original_additional, Original_flag, Original_remarks, Original_dateExam, Original_expiry, Original_reportNum, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class userAccTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public userAccTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "userAcc";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("userpass", "userpass");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("license", "license");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("eSignatue", "eSignatue");
            tableMapping.ColumnMappings.Add("ofw_id", "ofw_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[userAcc] WHERE (([id] = @Original_id) AND ([username] = @Original_username) AND ([userpass] = @Original_userpass) AND ([name] = @Original_name) AND ([license] = @Original_license) AND ([address] = @Original_address) AND ([eSignatue] = @Original_eSignatue) AND ([ofw_id] = @Original_ofw_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userpass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userpass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_eSignatue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eSignatue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[userAcc] ([id], [username], [userpass], [name], [license], [address], [eSignatue], [ofw_id]) VALUES (@id, @username, @userpass, @name, @license, @address, @eSignatue, @ofw_id);
SELECT id, username, userpass, name, license, address, eSignatue, ofw_id FROM userAcc WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userpass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userpass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eSignatue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eSignatue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[userAcc] SET [id] = @id, [username] = @username, [userpass] = @userpass, [name] = @name, [license] = @license, [address] = @address, [eSignatue] = @eSignatue, [ofw_id] = @ofw_id WHERE (([id] = @Original_id) AND ([username] = @Original_username) AND ([userpass] = @Original_userpass) AND ([name] = @Original_name) AND ([license] = @Original_license) AND ([address] = @Original_address) AND ([eSignatue] = @Original_eSignatue) AND ([ofw_id] = @Original_ofw_id));
SELECT id, username, userpass, name, license, address, eSignatue, ofw_id FROM userAcc WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userpass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userpass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eSignatue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eSignatue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userpass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userpass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_eSignatue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eSignatue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ofw_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ofw_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SouthJLAInformationSystemC.Properties.Settings.Default.DatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, username, userpass, name, license, address, eSignatue, ofw_id FROM dbo" +
                ".userAcc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatabaseDataSet.userAccDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatabaseDataSet.userAccDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DatabaseDataSet.userAccDataTable dataTable = new DatabaseDataSet.userAccDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet.userAccDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DatabaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "userAcc");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_username, string Original_userpass, string Original_name, int Original_license, string Original_address, string Original_eSignatue, int Original_ofw_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_username == null)) {
                throw new global::System.ArgumentNullException("Original_username");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_username));
            }
            if ((Original_userpass == null)) {
                throw new global::System.ArgumentNullException("Original_userpass");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_userpass));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_name));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_license));
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_address));
            }
            if ((Original_eSignatue == null)) {
                throw new global::System.ArgumentNullException("Original_eSignatue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_eSignatue));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, string username, string userpass, string name, int license, string address, string eSignatue, int ofw_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((username == null)) {
                throw new global::System.ArgumentNullException("username");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(username));
            }
            if ((userpass == null)) {
                throw new global::System.ArgumentNullException("userpass");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(userpass));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(name));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(license));
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(address));
            }
            if ((eSignatue == null)) {
                throw new global::System.ArgumentNullException("eSignatue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(eSignatue));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    string username, 
                    string userpass, 
                    string name, 
                    int license, 
                    string address, 
                    string eSignatue, 
                    int ofw_id, 
                    int Original_id, 
                    string Original_username, 
                    string Original_userpass, 
                    string Original_name, 
                    int Original_license, 
                    string Original_address, 
                    string Original_eSignatue, 
                    int Original_ofw_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((username == null)) {
                throw new global::System.ArgumentNullException("username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(username));
            }
            if ((userpass == null)) {
                throw new global::System.ArgumentNullException("userpass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(userpass));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(name));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(license));
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(address));
            }
            if ((eSignatue == null)) {
                throw new global::System.ArgumentNullException("eSignatue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(eSignatue));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ofw_id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_id));
            if ((Original_username == null)) {
                throw new global::System.ArgumentNullException("Original_username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_username));
            }
            if ((Original_userpass == null)) {
                throw new global::System.ArgumentNullException("Original_userpass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_userpass));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_name));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_license));
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_address));
            }
            if ((Original_eSignatue == null)) {
                throw new global::System.ArgumentNullException("Original_eSignatue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_eSignatue));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ofw_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string username, string userpass, string name, int license, string address, string eSignatue, int ofw_id, int Original_id, string Original_username, string Original_userpass, string Original_name, int Original_license, string Original_address, string Original_eSignatue, int Original_ofw_id) {
            return this.Update(Original_id, username, userpass, name, license, address, eSignatue, ofw_id, Original_id, Original_username, Original_userpass, Original_name, Original_license, Original_address, Original_eSignatue, Original_ofw_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ancillaryResultTableAdapter _ancillaryResultTableAdapter;
        
        private assessmentTableAdapter _assessmentTableAdapter;
        
        private Blood_ChemistrtyTableAdapter _blood_ChemistrtyTableAdapter;
        
        private Clinic_MicroscopyTableAdapter _clinic_MicroscopyTableAdapter;
        
        private HematologyTableAdapter _hematologyTableAdapter;
        
        private historyTableAdapter _historyTableAdapter;
        
        private ofwTableAdapter _ofwTableAdapter;
        
        private SerologyTableAdapter _serologyTableAdapter;
        
        private Stool_ExaminationTableAdapter _stool_ExaminationTableAdapter;
        
        private summaryTableAdapter _summaryTableAdapter;
        
        private userAccTableAdapter _userAccTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ancillaryResultTableAdapter ancillaryResultTableAdapter {
            get {
                return this._ancillaryResultTableAdapter;
            }
            set {
                this._ancillaryResultTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public assessmentTableAdapter assessmentTableAdapter {
            get {
                return this._assessmentTableAdapter;
            }
            set {
                this._assessmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Blood_ChemistrtyTableAdapter Blood_ChemistrtyTableAdapter {
            get {
                return this._blood_ChemistrtyTableAdapter;
            }
            set {
                this._blood_ChemistrtyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Clinic_MicroscopyTableAdapter Clinic_MicroscopyTableAdapter {
            get {
                return this._clinic_MicroscopyTableAdapter;
            }
            set {
                this._clinic_MicroscopyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HematologyTableAdapter HematologyTableAdapter {
            get {
                return this._hematologyTableAdapter;
            }
            set {
                this._hematologyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public historyTableAdapter historyTableAdapter {
            get {
                return this._historyTableAdapter;
            }
            set {
                this._historyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ofwTableAdapter ofwTableAdapter {
            get {
                return this._ofwTableAdapter;
            }
            set {
                this._ofwTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SerologyTableAdapter SerologyTableAdapter {
            get {
                return this._serologyTableAdapter;
            }
            set {
                this._serologyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Stool_ExaminationTableAdapter Stool_ExaminationTableAdapter {
            get {
                return this._stool_ExaminationTableAdapter;
            }
            set {
                this._stool_ExaminationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public summaryTableAdapter summaryTableAdapter {
            get {
                return this._summaryTableAdapter;
            }
            set {
                this._summaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public userAccTableAdapter userAccTableAdapter {
            get {
                return this._userAccTableAdapter;
            }
            set {
                this._userAccTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._ancillaryResultTableAdapter != null) 
                            && (this._ancillaryResultTableAdapter.Connection != null))) {
                    return this._ancillaryResultTableAdapter.Connection;
                }
                if (((this._assessmentTableAdapter != null) 
                            && (this._assessmentTableAdapter.Connection != null))) {
                    return this._assessmentTableAdapter.Connection;
                }
                if (((this._blood_ChemistrtyTableAdapter != null) 
                            && (this._blood_ChemistrtyTableAdapter.Connection != null))) {
                    return this._blood_ChemistrtyTableAdapter.Connection;
                }
                if (((this._clinic_MicroscopyTableAdapter != null) 
                            && (this._clinic_MicroscopyTableAdapter.Connection != null))) {
                    return this._clinic_MicroscopyTableAdapter.Connection;
                }
                if (((this._hematologyTableAdapter != null) 
                            && (this._hematologyTableAdapter.Connection != null))) {
                    return this._hematologyTableAdapter.Connection;
                }
                if (((this._historyTableAdapter != null) 
                            && (this._historyTableAdapter.Connection != null))) {
                    return this._historyTableAdapter.Connection;
                }
                if (((this._ofwTableAdapter != null) 
                            && (this._ofwTableAdapter.Connection != null))) {
                    return this._ofwTableAdapter.Connection;
                }
                if (((this._serologyTableAdapter != null) 
                            && (this._serologyTableAdapter.Connection != null))) {
                    return this._serologyTableAdapter.Connection;
                }
                if (((this._stool_ExaminationTableAdapter != null) 
                            && (this._stool_ExaminationTableAdapter.Connection != null))) {
                    return this._stool_ExaminationTableAdapter.Connection;
                }
                if (((this._summaryTableAdapter != null) 
                            && (this._summaryTableAdapter.Connection != null))) {
                    return this._summaryTableAdapter.Connection;
                }
                if (((this._userAccTableAdapter != null) 
                            && (this._userAccTableAdapter.Connection != null))) {
                    return this._userAccTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._ancillaryResultTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._assessmentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._blood_ChemistrtyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clinic_MicroscopyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hematologyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._historyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ofwTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serologyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stool_ExaminationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._summaryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._userAccTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ofwTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ofw.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ofwTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ancillaryResultTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ancillaryResult.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ancillaryResultTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._assessmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.assessment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._assessmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._blood_ChemistrtyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Blood_Chemistrty.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._blood_ChemistrtyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clinic_MicroscopyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Clinic_Microscopy.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clinic_MicroscopyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hematologyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Hematology.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hematologyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.history.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serologyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Serology.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serologyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stool_ExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Stool_Examination.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stool_ExaminationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._summaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.summary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._summaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._userAccTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.userAcc.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._userAccTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ofwTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ofw.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ofwTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ancillaryResultTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ancillaryResult.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ancillaryResultTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._assessmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.assessment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._assessmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._blood_ChemistrtyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Blood_Chemistrty.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._blood_ChemistrtyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clinic_MicroscopyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Clinic_Microscopy.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clinic_MicroscopyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hematologyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Hematology.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hematologyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.history.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serologyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Serology.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serologyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stool_ExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Stool_Examination.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stool_ExaminationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._summaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.summary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._summaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._userAccTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.userAcc.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._userAccTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._userAccTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.userAcc.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._userAccTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._summaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.summary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._summaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stool_ExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Stool_Examination.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stool_ExaminationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._serologyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Serology.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serologyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._historyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.history.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._historyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hematologyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Hematology.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hematologyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clinic_MicroscopyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Clinic_Microscopy.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clinic_MicroscopyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._blood_ChemistrtyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Blood_Chemistrty.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._blood_ChemistrtyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._assessmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.assessment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._assessmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ancillaryResultTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ancillaryResult.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ancillaryResultTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ofwTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ofw.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ofwTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DatabaseDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._ancillaryResultTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ancillaryResultTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._assessmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._assessmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._blood_ChemistrtyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._blood_ChemistrtyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clinic_MicroscopyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clinic_MicroscopyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hematologyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hematologyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._historyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._historyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._ofwTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ofwTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._serologyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serologyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stool_ExaminationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stool_ExaminationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._summaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._summaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._userAccTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._userAccTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._ancillaryResultTableAdapter != null)) {
                    revertConnections.Add(this._ancillaryResultTableAdapter, this._ancillaryResultTableAdapter.Connection);
                    this._ancillaryResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ancillaryResultTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ancillaryResultTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ancillaryResultTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ancillaryResultTableAdapter.Adapter);
                    }
                }
                if ((this._assessmentTableAdapter != null)) {
                    revertConnections.Add(this._assessmentTableAdapter, this._assessmentTableAdapter.Connection);
                    this._assessmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._assessmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._assessmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._assessmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._assessmentTableAdapter.Adapter);
                    }
                }
                if ((this._blood_ChemistrtyTableAdapter != null)) {
                    revertConnections.Add(this._blood_ChemistrtyTableAdapter, this._blood_ChemistrtyTableAdapter.Connection);
                    this._blood_ChemistrtyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._blood_ChemistrtyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._blood_ChemistrtyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._blood_ChemistrtyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._blood_ChemistrtyTableAdapter.Adapter);
                    }
                }
                if ((this._clinic_MicroscopyTableAdapter != null)) {
                    revertConnections.Add(this._clinic_MicroscopyTableAdapter, this._clinic_MicroscopyTableAdapter.Connection);
                    this._clinic_MicroscopyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clinic_MicroscopyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clinic_MicroscopyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clinic_MicroscopyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clinic_MicroscopyTableAdapter.Adapter);
                    }
                }
                if ((this._hematologyTableAdapter != null)) {
                    revertConnections.Add(this._hematologyTableAdapter, this._hematologyTableAdapter.Connection);
                    this._hematologyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hematologyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hematologyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hematologyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hematologyTableAdapter.Adapter);
                    }
                }
                if ((this._historyTableAdapter != null)) {
                    revertConnections.Add(this._historyTableAdapter, this._historyTableAdapter.Connection);
                    this._historyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._historyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._historyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._historyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._historyTableAdapter.Adapter);
                    }
                }
                if ((this._ofwTableAdapter != null)) {
                    revertConnections.Add(this._ofwTableAdapter, this._ofwTableAdapter.Connection);
                    this._ofwTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ofwTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ofwTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ofwTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ofwTableAdapter.Adapter);
                    }
                }
                if ((this._serologyTableAdapter != null)) {
                    revertConnections.Add(this._serologyTableAdapter, this._serologyTableAdapter.Connection);
                    this._serologyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serologyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serologyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serologyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serologyTableAdapter.Adapter);
                    }
                }
                if ((this._stool_ExaminationTableAdapter != null)) {
                    revertConnections.Add(this._stool_ExaminationTableAdapter, this._stool_ExaminationTableAdapter.Connection);
                    this._stool_ExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stool_ExaminationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stool_ExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stool_ExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stool_ExaminationTableAdapter.Adapter);
                    }
                }
                if ((this._summaryTableAdapter != null)) {
                    revertConnections.Add(this._summaryTableAdapter, this._summaryTableAdapter.Connection);
                    this._summaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._summaryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._summaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._summaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._summaryTableAdapter.Adapter);
                    }
                }
                if ((this._userAccTableAdapter != null)) {
                    revertConnections.Add(this._userAccTableAdapter, this._userAccTableAdapter.Connection);
                    this._userAccTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._userAccTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._userAccTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._userAccTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._userAccTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._ancillaryResultTableAdapter != null)) {
                    this._ancillaryResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ancillaryResultTableAdapter]));
                    this._ancillaryResultTableAdapter.Transaction = null;
                }
                if ((this._assessmentTableAdapter != null)) {
                    this._assessmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._assessmentTableAdapter]));
                    this._assessmentTableAdapter.Transaction = null;
                }
                if ((this._blood_ChemistrtyTableAdapter != null)) {
                    this._blood_ChemistrtyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._blood_ChemistrtyTableAdapter]));
                    this._blood_ChemistrtyTableAdapter.Transaction = null;
                }
                if ((this._clinic_MicroscopyTableAdapter != null)) {
                    this._clinic_MicroscopyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clinic_MicroscopyTableAdapter]));
                    this._clinic_MicroscopyTableAdapter.Transaction = null;
                }
                if ((this._hematologyTableAdapter != null)) {
                    this._hematologyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hematologyTableAdapter]));
                    this._hematologyTableAdapter.Transaction = null;
                }
                if ((this._historyTableAdapter != null)) {
                    this._historyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._historyTableAdapter]));
                    this._historyTableAdapter.Transaction = null;
                }
                if ((this._ofwTableAdapter != null)) {
                    this._ofwTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ofwTableAdapter]));
                    this._ofwTableAdapter.Transaction = null;
                }
                if ((this._serologyTableAdapter != null)) {
                    this._serologyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serologyTableAdapter]));
                    this._serologyTableAdapter.Transaction = null;
                }
                if ((this._stool_ExaminationTableAdapter != null)) {
                    this._stool_ExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stool_ExaminationTableAdapter]));
                    this._stool_ExaminationTableAdapter.Transaction = null;
                }
                if ((this._summaryTableAdapter != null)) {
                    this._summaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._summaryTableAdapter]));
                    this._summaryTableAdapter.Transaction = null;
                }
                if ((this._userAccTableAdapter != null)) {
                    this._userAccTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._userAccTableAdapter]));
                    this._userAccTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591